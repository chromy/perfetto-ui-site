{"version":3,"file":"processor_bundle.js","sources":["../../../ui/src/processor.ts","../../../ui/src/trace_processor/index.ts","../../../ui/src/backend/protos.ts","../obj/ui/gen/protos.js","../../../ui/node_modules/protobufjs/minimal.js","../../../ui/node_modules/protobufjs/src/index-minimal.js","../../../ui/node_modules/protobufjs/src/roots.js","../../../ui/node_modules/protobufjs/src/rpc.js","../../../ui/node_modules/protobufjs/src/rpc/service.js","../../../ui/node_modules/protobufjs/src/reader_buffer.js","../../../ui/node_modules/protobufjs/src/reader.js","../../../ui/node_modules/protobufjs/src/writer_buffer.js","../../../ui/node_modules/protobufjs/src/writer.js","../../../ui/node_modules/protobufjs/src/util/minimal.js","../../../ui/node_modules/protobufjs/src/util/longbits.js","../../../ui/node_modules/@protobufjs/pool/index.js","../../../ui/node_modules/@protobufjs/utf8/index.js","../../../ui/node_modules/@protobufjs/inquire/index.js","../../../ui/node_modules/@protobufjs/float/index.js","../../../ui/node_modules/@protobufjs/eventemitter/index.js","../../../ui/node_modules/@protobufjs/base64/index.js","../../../ui/node_modules/@protobufjs/aspromise/index.js","../../../ui/src/ipc.ts"],"sourcesContent":["/*\n * Copyright (C) 2018 The Android Open Source Project\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { main } from './trace_processor';\n\nmain();\n\n","/*\n * Copyright (C) 2018 The Android Open Source Project\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createReceiver } from '../ipc';\nimport { RawQueryArgs, RawQueryResult } from '../backend/protos';\n\nclass TraceProcessorBridge {\n  wasm_?: any = undefined;\n  blob_?: Blob = undefined;\n  ready: boolean = false;\n  pendingInitialized: Promise<void>;\n  resolvePendingInitialized: () => void;\n  requestId: number;\n  pendingRequests: {[id: number]: (result: any) => void};\n\n  // @ts-ignore\n  blobReader = new FileReaderSync();\n\n  constructor() {\n    this.pendingRequests = {};\n    this.requestId = 0;\n    this.resolvePendingInitialized = () => {};\n    this.pendingInitialized = new Promise<void>(resolve => {\n      this.resolvePendingInitialized = resolve;\n    });\n  }\n\n  get blob(): Blob {\n    console.assert(this.blob_);\n    if (!this.blob_)\n      throw \"Error!\";\n    return this.blob_;\n  }\n\n  set blob(f: Blob) {\n    console.assert(!this.blob_);\n    this.blob_ = f;\n    this.maybeInitialize();\n  }\n\n  loadBlob(blob: Blob): Promise<void> {\n    this.blob = blob;\n    return this.pendingInitialized;\n  }\n\n  onRuntimeInitialized(wasm: any) {\n    console.assert(!this.wasm_);\n    this.wasm_ = wasm;\n    this.maybeInitialize();\n  }\n\n  maybeInitialize() {\n    if (!this.wasm_ || !this.blob_)\n      return;\n    const readTraceFn = this.wasm_.addFunction(this.readTraceData.bind(this), 'iiii');\n    const replyFn = this.wasm_.addFunction(this.reply.bind(this), 'viiii');\n    this.wasm_.ccall('Initialize', 'void',\n      ['number', 'number'],\n      [readTraceFn, replyFn]);\n  }\n\n  readTraceData(offset: number, len: number, dstPtr: number): number {\n    const slice = this.blob.slice(offset, offset + len);\n    const buf: ArrayBuffer = this.blobReader.readAsArrayBuffer(slice);\n    const buf8 = new Uint8Array(buf);\n    this.wasm_.HEAPU8.set(buf8, dstPtr);\n    return buf.byteLength;\n  }\n\n  reply(requestId: number, success: boolean, heapPtr: number, size: number) {\n    if (!this.ready) {\n      this.ready = true;\n      this.resolvePendingInitialized();\n      return;\n    }\n\n    const data = this.wasm_.HEAPU8.slice(heapPtr, heapPtr + size);\n    console.assert(success);\n    console.assert(this.pendingRequests[requestId]);\n\n    const result = RawQueryResult.decode(data);\n\n    this.pendingRequests[requestId](result);\n    delete this.pendingRequests[requestId];\n  }\n\n  query(s: string): Promise<void> {\n    const requestId = this.requestId++;\n    const pending = new Promise<void>(resolve => {\n      this.pendingRequests[requestId] = resolve;\n    });\n\n    const buf = RawQueryArgs.encode({\n      sqlQuery: s\n    }).finish();\n\n    this.wasm_.ccall('ExecuteQuery', 'void', [\n      'number', 'array', 'number',\n    ], [\n      requestId, buf, buf.length\n    ]);\n    return pending;\n  }\n}\n\nfunction main() {\n  console.log('Hello from processor!');\n\n  const bridge = new TraceProcessorBridge();\n\n  (self as any).Module = {\n    locateFile: (s: any) => {\n      const parts = location.pathname.split('/');\n      const base = parts.splice(0, parts.length-1).join('/');\n      const path = `${base}/${s}`\n      return path;\n    },\n    onRuntimeInitialized: () => bridge.onRuntimeInitialized((self as any).Module),\n    print: (s: string) => console.log(s),\n    printErr: (s: string) => console.warn(s), \n  };\n\n  (self as any).importScripts('trace_processor.js');\n  const channel = new MessageChannel();\n  const txPort = channel.port1;\n  const rxPort = channel.port2;\n\n  createReceiver<TraceProcessorBridge>(rxPort, bridge);\n  (self as any).postMessage(txPort, [txPort]);\n}\n\nexport {\n  main,\n  TraceProcessorBridge,\n}\n","import * as x from '../../gen/protos';\n\nconst TraceConfig = x.perfetto.protos.TraceConfig;\nconst Trace = x.perfetto.protos.Trace;\nconst RawQueryResult = x.perfetto.protos.RawQueryResult;\nconst RawQueryArgs = x.perfetto.protos.RawQueryArgs;\n\nexport {\n  TraceConfig,\n  RawQueryArgs,\n  RawQueryResult,\n  Trace,\n};\n","/*eslint-disable block-scoped-var, no-redeclare, no-control-regex, no-prototype-builtins*/\n\"use strict\";\n\nvar $protobuf = require(\"protobufjs/minimal\");\n\n// Common aliases\nvar $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nvar $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\n$root.perfetto = (function() {\n\n    /**\n     * Namespace perfetto.\n     * @exports perfetto\n     * @namespace\n     */\n    var perfetto = {};\n\n    perfetto.protos = (function() {\n\n        /**\n         * Namespace protos.\n         * @memberof perfetto\n         * @namespace\n         */\n        var protos = {};\n\n        protos.Sched = (function() {\n\n            /**\n             * Properties of a Sched.\n             * @memberof perfetto.protos\n             * @interface ISched\n             * @property {string|null} [test] Sched test\n             */\n\n            /**\n             * Constructs a new Sched.\n             * @memberof perfetto.protos\n             * @classdesc Represents a Sched.\n             * @implements ISched\n             * @constructor\n             * @param {perfetto.protos.ISched=} [properties] Properties to set\n             */\n            function Sched(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * Sched test.\n             * @member {string} test\n             * @memberof perfetto.protos.Sched\n             * @instance\n             */\n            Sched.prototype.test = \"\";\n\n            /**\n             * Creates a new Sched instance using the specified properties.\n             * @function create\n             * @memberof perfetto.protos.Sched\n             * @static\n             * @param {perfetto.protos.ISched=} [properties] Properties to set\n             * @returns {perfetto.protos.Sched} Sched instance\n             */\n            Sched.create = function create(properties) {\n                return new Sched(properties);\n            };\n\n            /**\n             * Encodes the specified Sched message. Does not implicitly {@link perfetto.protos.Sched.verify|verify} messages.\n             * @function encode\n             * @memberof perfetto.protos.Sched\n             * @static\n             * @param {perfetto.protos.ISched} message Sched message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Sched.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.test != null && message.hasOwnProperty(\"test\"))\n                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.test);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified Sched message, length delimited. Does not implicitly {@link perfetto.protos.Sched.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof perfetto.protos.Sched\n             * @static\n             * @param {perfetto.protos.ISched} message Sched message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Sched.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a Sched message from the specified reader or buffer.\n             * @function decode\n             * @memberof perfetto.protos.Sched\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {perfetto.protos.Sched} Sched\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Sched.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.Sched();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.test = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a Sched message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof perfetto.protos.Sched\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {perfetto.protos.Sched} Sched\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Sched.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a Sched message.\n             * @function verify\n             * @memberof perfetto.protos.Sched\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Sched.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.test != null && message.hasOwnProperty(\"test\"))\n                    if (!$util.isString(message.test))\n                        return \"test: string expected\";\n                return null;\n            };\n\n            /**\n             * Creates a Sched message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof perfetto.protos.Sched\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {perfetto.protos.Sched} Sched\n             */\n            Sched.fromObject = function fromObject(object) {\n                if (object instanceof $root.perfetto.protos.Sched)\n                    return object;\n                var message = new $root.perfetto.protos.Sched();\n                if (object.test != null)\n                    message.test = String(object.test);\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a Sched message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof perfetto.protos.Sched\n             * @static\n             * @param {perfetto.protos.Sched} message Sched\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Sched.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults)\n                    object.test = \"\";\n                if (message.test != null && message.hasOwnProperty(\"test\"))\n                    object.test = message.test;\n                return object;\n            };\n\n            /**\n             * Converts this Sched to JSON.\n             * @function toJSON\n             * @memberof perfetto.protos.Sched\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Sched.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Sched;\n        })();\n\n        protos.RawQueryArgs = (function() {\n\n            /**\n             * Properties of a RawQueryArgs.\n             * @memberof perfetto.protos\n             * @interface IRawQueryArgs\n             * @property {string|null} [sqlQuery] RawQueryArgs sqlQuery\n             */\n\n            /**\n             * Constructs a new RawQueryArgs.\n             * @memberof perfetto.protos\n             * @classdesc Represents a RawQueryArgs.\n             * @implements IRawQueryArgs\n             * @constructor\n             * @param {perfetto.protos.IRawQueryArgs=} [properties] Properties to set\n             */\n            function RawQueryArgs(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * RawQueryArgs sqlQuery.\n             * @member {string} sqlQuery\n             * @memberof perfetto.protos.RawQueryArgs\n             * @instance\n             */\n            RawQueryArgs.prototype.sqlQuery = \"\";\n\n            /**\n             * Creates a new RawQueryArgs instance using the specified properties.\n             * @function create\n             * @memberof perfetto.protos.RawQueryArgs\n             * @static\n             * @param {perfetto.protos.IRawQueryArgs=} [properties] Properties to set\n             * @returns {perfetto.protos.RawQueryArgs} RawQueryArgs instance\n             */\n            RawQueryArgs.create = function create(properties) {\n                return new RawQueryArgs(properties);\n            };\n\n            /**\n             * Encodes the specified RawQueryArgs message. Does not implicitly {@link perfetto.protos.RawQueryArgs.verify|verify} messages.\n             * @function encode\n             * @memberof perfetto.protos.RawQueryArgs\n             * @static\n             * @param {perfetto.protos.IRawQueryArgs} message RawQueryArgs message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            RawQueryArgs.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.sqlQuery != null && message.hasOwnProperty(\"sqlQuery\"))\n                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.sqlQuery);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified RawQueryArgs message, length delimited. Does not implicitly {@link perfetto.protos.RawQueryArgs.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof perfetto.protos.RawQueryArgs\n             * @static\n             * @param {perfetto.protos.IRawQueryArgs} message RawQueryArgs message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            RawQueryArgs.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a RawQueryArgs message from the specified reader or buffer.\n             * @function decode\n             * @memberof perfetto.protos.RawQueryArgs\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {perfetto.protos.RawQueryArgs} RawQueryArgs\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            RawQueryArgs.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.RawQueryArgs();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.sqlQuery = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a RawQueryArgs message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof perfetto.protos.RawQueryArgs\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {perfetto.protos.RawQueryArgs} RawQueryArgs\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            RawQueryArgs.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a RawQueryArgs message.\n             * @function verify\n             * @memberof perfetto.protos.RawQueryArgs\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            RawQueryArgs.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.sqlQuery != null && message.hasOwnProperty(\"sqlQuery\"))\n                    if (!$util.isString(message.sqlQuery))\n                        return \"sqlQuery: string expected\";\n                return null;\n            };\n\n            /**\n             * Creates a RawQueryArgs message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof perfetto.protos.RawQueryArgs\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {perfetto.protos.RawQueryArgs} RawQueryArgs\n             */\n            RawQueryArgs.fromObject = function fromObject(object) {\n                if (object instanceof $root.perfetto.protos.RawQueryArgs)\n                    return object;\n                var message = new $root.perfetto.protos.RawQueryArgs();\n                if (object.sqlQuery != null)\n                    message.sqlQuery = String(object.sqlQuery);\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a RawQueryArgs message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof perfetto.protos.RawQueryArgs\n             * @static\n             * @param {perfetto.protos.RawQueryArgs} message RawQueryArgs\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            RawQueryArgs.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults)\n                    object.sqlQuery = \"\";\n                if (message.sqlQuery != null && message.hasOwnProperty(\"sqlQuery\"))\n                    object.sqlQuery = message.sqlQuery;\n                return object;\n            };\n\n            /**\n             * Converts this RawQueryArgs to JSON.\n             * @function toJSON\n             * @memberof perfetto.protos.RawQueryArgs\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            RawQueryArgs.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return RawQueryArgs;\n        })();\n\n        protos.RawQueryResult = (function() {\n\n            /**\n             * Properties of a RawQueryResult.\n             * @memberof perfetto.protos\n             * @interface IRawQueryResult\n             * @property {Array.<perfetto.protos.RawQueryResult.IColumnDesc>|null} [columnDescriptors] RawQueryResult columnDescriptors\n             * @property {number|Long|null} [numRecords] RawQueryResult numRecords\n             * @property {Array.<perfetto.protos.RawQueryResult.IColumnValues>|null} [columns] RawQueryResult columns\n             */\n\n            /**\n             * Constructs a new RawQueryResult.\n             * @memberof perfetto.protos\n             * @classdesc Represents a RawQueryResult.\n             * @implements IRawQueryResult\n             * @constructor\n             * @param {perfetto.protos.IRawQueryResult=} [properties] Properties to set\n             */\n            function RawQueryResult(properties) {\n                this.columnDescriptors = [];\n                this.columns = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * RawQueryResult columnDescriptors.\n             * @member {Array.<perfetto.protos.RawQueryResult.IColumnDesc>} columnDescriptors\n             * @memberof perfetto.protos.RawQueryResult\n             * @instance\n             */\n            RawQueryResult.prototype.columnDescriptors = $util.emptyArray;\n\n            /**\n             * RawQueryResult numRecords.\n             * @member {number|Long} numRecords\n             * @memberof perfetto.protos.RawQueryResult\n             * @instance\n             */\n            RawQueryResult.prototype.numRecords = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n            /**\n             * RawQueryResult columns.\n             * @member {Array.<perfetto.protos.RawQueryResult.IColumnValues>} columns\n             * @memberof perfetto.protos.RawQueryResult\n             * @instance\n             */\n            RawQueryResult.prototype.columns = $util.emptyArray;\n\n            /**\n             * Creates a new RawQueryResult instance using the specified properties.\n             * @function create\n             * @memberof perfetto.protos.RawQueryResult\n             * @static\n             * @param {perfetto.protos.IRawQueryResult=} [properties] Properties to set\n             * @returns {perfetto.protos.RawQueryResult} RawQueryResult instance\n             */\n            RawQueryResult.create = function create(properties) {\n                return new RawQueryResult(properties);\n            };\n\n            /**\n             * Encodes the specified RawQueryResult message. Does not implicitly {@link perfetto.protos.RawQueryResult.verify|verify} messages.\n             * @function encode\n             * @memberof perfetto.protos.RawQueryResult\n             * @static\n             * @param {perfetto.protos.IRawQueryResult} message RawQueryResult message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            RawQueryResult.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.columnDescriptors != null && message.columnDescriptors.length)\n                    for (var i = 0; i < message.columnDescriptors.length; ++i)\n                        $root.perfetto.protos.RawQueryResult.ColumnDesc.encode(message.columnDescriptors[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                if (message.numRecords != null && message.hasOwnProperty(\"numRecords\"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.numRecords);\n                if (message.columns != null && message.columns.length)\n                    for (var i = 0; i < message.columns.length; ++i)\n                        $root.perfetto.protos.RawQueryResult.ColumnValues.encode(message.columns[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n                return writer;\n            };\n\n            /**\n             * Encodes the specified RawQueryResult message, length delimited. Does not implicitly {@link perfetto.protos.RawQueryResult.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof perfetto.protos.RawQueryResult\n             * @static\n             * @param {perfetto.protos.IRawQueryResult} message RawQueryResult message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            RawQueryResult.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a RawQueryResult message from the specified reader or buffer.\n             * @function decode\n             * @memberof perfetto.protos.RawQueryResult\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {perfetto.protos.RawQueryResult} RawQueryResult\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            RawQueryResult.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.RawQueryResult();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        if (!(message.columnDescriptors && message.columnDescriptors.length))\n                            message.columnDescriptors = [];\n                        message.columnDescriptors.push($root.perfetto.protos.RawQueryResult.ColumnDesc.decode(reader, reader.uint32()));\n                        break;\n                    case 2:\n                        message.numRecords = reader.uint64();\n                        break;\n                    case 3:\n                        if (!(message.columns && message.columns.length))\n                            message.columns = [];\n                        message.columns.push($root.perfetto.protos.RawQueryResult.ColumnValues.decode(reader, reader.uint32()));\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a RawQueryResult message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof perfetto.protos.RawQueryResult\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {perfetto.protos.RawQueryResult} RawQueryResult\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            RawQueryResult.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a RawQueryResult message.\n             * @function verify\n             * @memberof perfetto.protos.RawQueryResult\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            RawQueryResult.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.columnDescriptors != null && message.hasOwnProperty(\"columnDescriptors\")) {\n                    if (!Array.isArray(message.columnDescriptors))\n                        return \"columnDescriptors: array expected\";\n                    for (var i = 0; i < message.columnDescriptors.length; ++i) {\n                        var error = $root.perfetto.protos.RawQueryResult.ColumnDesc.verify(message.columnDescriptors[i]);\n                        if (error)\n                            return \"columnDescriptors.\" + error;\n                    }\n                }\n                if (message.numRecords != null && message.hasOwnProperty(\"numRecords\"))\n                    if (!$util.isInteger(message.numRecords) && !(message.numRecords && $util.isInteger(message.numRecords.low) && $util.isInteger(message.numRecords.high)))\n                        return \"numRecords: integer|Long expected\";\n                if (message.columns != null && message.hasOwnProperty(\"columns\")) {\n                    if (!Array.isArray(message.columns))\n                        return \"columns: array expected\";\n                    for (var i = 0; i < message.columns.length; ++i) {\n                        var error = $root.perfetto.protos.RawQueryResult.ColumnValues.verify(message.columns[i]);\n                        if (error)\n                            return \"columns.\" + error;\n                    }\n                }\n                return null;\n            };\n\n            /**\n             * Creates a RawQueryResult message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof perfetto.protos.RawQueryResult\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {perfetto.protos.RawQueryResult} RawQueryResult\n             */\n            RawQueryResult.fromObject = function fromObject(object) {\n                if (object instanceof $root.perfetto.protos.RawQueryResult)\n                    return object;\n                var message = new $root.perfetto.protos.RawQueryResult();\n                if (object.columnDescriptors) {\n                    if (!Array.isArray(object.columnDescriptors))\n                        throw TypeError(\".perfetto.protos.RawQueryResult.columnDescriptors: array expected\");\n                    message.columnDescriptors = [];\n                    for (var i = 0; i < object.columnDescriptors.length; ++i) {\n                        if (typeof object.columnDescriptors[i] !== \"object\")\n                            throw TypeError(\".perfetto.protos.RawQueryResult.columnDescriptors: object expected\");\n                        message.columnDescriptors[i] = $root.perfetto.protos.RawQueryResult.ColumnDesc.fromObject(object.columnDescriptors[i]);\n                    }\n                }\n                if (object.numRecords != null)\n                    if ($util.Long)\n                        (message.numRecords = $util.Long.fromValue(object.numRecords)).unsigned = true;\n                    else if (typeof object.numRecords === \"string\")\n                        message.numRecords = parseInt(object.numRecords, 10);\n                    else if (typeof object.numRecords === \"number\")\n                        message.numRecords = object.numRecords;\n                    else if (typeof object.numRecords === \"object\")\n                        message.numRecords = new $util.LongBits(object.numRecords.low >>> 0, object.numRecords.high >>> 0).toNumber(true);\n                if (object.columns) {\n                    if (!Array.isArray(object.columns))\n                        throw TypeError(\".perfetto.protos.RawQueryResult.columns: array expected\");\n                    message.columns = [];\n                    for (var i = 0; i < object.columns.length; ++i) {\n                        if (typeof object.columns[i] !== \"object\")\n                            throw TypeError(\".perfetto.protos.RawQueryResult.columns: object expected\");\n                        message.columns[i] = $root.perfetto.protos.RawQueryResult.ColumnValues.fromObject(object.columns[i]);\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a RawQueryResult message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof perfetto.protos.RawQueryResult\n             * @static\n             * @param {perfetto.protos.RawQueryResult} message RawQueryResult\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            RawQueryResult.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults) {\n                    object.columnDescriptors = [];\n                    object.columns = [];\n                }\n                if (options.defaults)\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, true);\n                        object.numRecords = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.numRecords = options.longs === String ? \"0\" : 0;\n                if (message.columnDescriptors && message.columnDescriptors.length) {\n                    object.columnDescriptors = [];\n                    for (var j = 0; j < message.columnDescriptors.length; ++j)\n                        object.columnDescriptors[j] = $root.perfetto.protos.RawQueryResult.ColumnDesc.toObject(message.columnDescriptors[j], options);\n                }\n                if (message.numRecords != null && message.hasOwnProperty(\"numRecords\"))\n                    if (typeof message.numRecords === \"number\")\n                        object.numRecords = options.longs === String ? String(message.numRecords) : message.numRecords;\n                    else\n                        object.numRecords = options.longs === String ? $util.Long.prototype.toString.call(message.numRecords) : options.longs === Number ? new $util.LongBits(message.numRecords.low >>> 0, message.numRecords.high >>> 0).toNumber(true) : message.numRecords;\n                if (message.columns && message.columns.length) {\n                    object.columns = [];\n                    for (var j = 0; j < message.columns.length; ++j)\n                        object.columns[j] = $root.perfetto.protos.RawQueryResult.ColumnValues.toObject(message.columns[j], options);\n                }\n                return object;\n            };\n\n            /**\n             * Converts this RawQueryResult to JSON.\n             * @function toJSON\n             * @memberof perfetto.protos.RawQueryResult\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            RawQueryResult.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            RawQueryResult.ColumnDesc = (function() {\n\n                /**\n                 * Properties of a ColumnDesc.\n                 * @memberof perfetto.protos.RawQueryResult\n                 * @interface IColumnDesc\n                 * @property {string|null} [name] ColumnDesc name\n                 * @property {perfetto.protos.RawQueryResult.ColumnDesc.Type|null} [type] ColumnDesc type\n                 */\n\n                /**\n                 * Constructs a new ColumnDesc.\n                 * @memberof perfetto.protos.RawQueryResult\n                 * @classdesc Represents a ColumnDesc.\n                 * @implements IColumnDesc\n                 * @constructor\n                 * @param {perfetto.protos.RawQueryResult.IColumnDesc=} [properties] Properties to set\n                 */\n                function ColumnDesc(properties) {\n                    if (properties)\n                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                            if (properties[keys[i]] != null)\n                                this[keys[i]] = properties[keys[i]];\n                }\n\n                /**\n                 * ColumnDesc name.\n                 * @member {string} name\n                 * @memberof perfetto.protos.RawQueryResult.ColumnDesc\n                 * @instance\n                 */\n                ColumnDesc.prototype.name = \"\";\n\n                /**\n                 * ColumnDesc type.\n                 * @member {perfetto.protos.RawQueryResult.ColumnDesc.Type} type\n                 * @memberof perfetto.protos.RawQueryResult.ColumnDesc\n                 * @instance\n                 */\n                ColumnDesc.prototype.type = 1;\n\n                /**\n                 * Creates a new ColumnDesc instance using the specified properties.\n                 * @function create\n                 * @memberof perfetto.protos.RawQueryResult.ColumnDesc\n                 * @static\n                 * @param {perfetto.protos.RawQueryResult.IColumnDesc=} [properties] Properties to set\n                 * @returns {perfetto.protos.RawQueryResult.ColumnDesc} ColumnDesc instance\n                 */\n                ColumnDesc.create = function create(properties) {\n                    return new ColumnDesc(properties);\n                };\n\n                /**\n                 * Encodes the specified ColumnDesc message. Does not implicitly {@link perfetto.protos.RawQueryResult.ColumnDesc.verify|verify} messages.\n                 * @function encode\n                 * @memberof perfetto.protos.RawQueryResult.ColumnDesc\n                 * @static\n                 * @param {perfetto.protos.RawQueryResult.IColumnDesc} message ColumnDesc message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                ColumnDesc.encode = function encode(message, writer) {\n                    if (!writer)\n                        writer = $Writer.create();\n                    if (message.name != null && message.hasOwnProperty(\"name\"))\n                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);\n                    if (message.type != null && message.hasOwnProperty(\"type\"))\n                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.type);\n                    return writer;\n                };\n\n                /**\n                 * Encodes the specified ColumnDesc message, length delimited. Does not implicitly {@link perfetto.protos.RawQueryResult.ColumnDesc.verify|verify} messages.\n                 * @function encodeDelimited\n                 * @memberof perfetto.protos.RawQueryResult.ColumnDesc\n                 * @static\n                 * @param {perfetto.protos.RawQueryResult.IColumnDesc} message ColumnDesc message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                ColumnDesc.encodeDelimited = function encodeDelimited(message, writer) {\n                    return this.encode(message, writer).ldelim();\n                };\n\n                /**\n                 * Decodes a ColumnDesc message from the specified reader or buffer.\n                 * @function decode\n                 * @memberof perfetto.protos.RawQueryResult.ColumnDesc\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @param {number} [length] Message length if known beforehand\n                 * @returns {perfetto.protos.RawQueryResult.ColumnDesc} ColumnDesc\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                ColumnDesc.decode = function decode(reader, length) {\n                    if (!(reader instanceof $Reader))\n                        reader = $Reader.create(reader);\n                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.RawQueryResult.ColumnDesc();\n                    while (reader.pos < end) {\n                        var tag = reader.uint32();\n                        switch (tag >>> 3) {\n                        case 1:\n                            message.name = reader.string();\n                            break;\n                        case 2:\n                            message.type = reader.int32();\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                    return message;\n                };\n\n                /**\n                 * Decodes a ColumnDesc message from the specified reader or buffer, length delimited.\n                 * @function decodeDelimited\n                 * @memberof perfetto.protos.RawQueryResult.ColumnDesc\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @returns {perfetto.protos.RawQueryResult.ColumnDesc} ColumnDesc\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                ColumnDesc.decodeDelimited = function decodeDelimited(reader) {\n                    if (!(reader instanceof $Reader))\n                        reader = new $Reader(reader);\n                    return this.decode(reader, reader.uint32());\n                };\n\n                /**\n                 * Verifies a ColumnDesc message.\n                 * @function verify\n                 * @memberof perfetto.protos.RawQueryResult.ColumnDesc\n                 * @static\n                 * @param {Object.<string,*>} message Plain object to verify\n                 * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                 */\n                ColumnDesc.verify = function verify(message) {\n                    if (typeof message !== \"object\" || message === null)\n                        return \"object expected\";\n                    if (message.name != null && message.hasOwnProperty(\"name\"))\n                        if (!$util.isString(message.name))\n                            return \"name: string expected\";\n                    if (message.type != null && message.hasOwnProperty(\"type\"))\n                        switch (message.type) {\n                        default:\n                            return \"type: enum value expected\";\n                        case 1:\n                        case 2:\n                        case 3:\n                        case 4:\n                            break;\n                        }\n                    return null;\n                };\n\n                /**\n                 * Creates a ColumnDesc message from a plain object. Also converts values to their respective internal types.\n                 * @function fromObject\n                 * @memberof perfetto.protos.RawQueryResult.ColumnDesc\n                 * @static\n                 * @param {Object.<string,*>} object Plain object\n                 * @returns {perfetto.protos.RawQueryResult.ColumnDesc} ColumnDesc\n                 */\n                ColumnDesc.fromObject = function fromObject(object) {\n                    if (object instanceof $root.perfetto.protos.RawQueryResult.ColumnDesc)\n                        return object;\n                    var message = new $root.perfetto.protos.RawQueryResult.ColumnDesc();\n                    if (object.name != null)\n                        message.name = String(object.name);\n                    switch (object.type) {\n                    case \"INT\":\n                    case 1:\n                        message.type = 1;\n                        break;\n                    case \"LONG\":\n                    case 2:\n                        message.type = 2;\n                        break;\n                    case \"UNSIGNED_INT\":\n                    case 3:\n                        message.type = 3;\n                        break;\n                    case \"UNSIGNED_LONG\":\n                    case 4:\n                        message.type = 4;\n                        break;\n                    }\n                    return message;\n                };\n\n                /**\n                 * Creates a plain object from a ColumnDesc message. Also converts values to other types if specified.\n                 * @function toObject\n                 * @memberof perfetto.protos.RawQueryResult.ColumnDesc\n                 * @static\n                 * @param {perfetto.protos.RawQueryResult.ColumnDesc} message ColumnDesc\n                 * @param {$protobuf.IConversionOptions} [options] Conversion options\n                 * @returns {Object.<string,*>} Plain object\n                 */\n                ColumnDesc.toObject = function toObject(message, options) {\n                    if (!options)\n                        options = {};\n                    var object = {};\n                    if (options.defaults) {\n                        object.name = \"\";\n                        object.type = options.enums === String ? \"INT\" : 1;\n                    }\n                    if (message.name != null && message.hasOwnProperty(\"name\"))\n                        object.name = message.name;\n                    if (message.type != null && message.hasOwnProperty(\"type\"))\n                        object.type = options.enums === String ? $root.perfetto.protos.RawQueryResult.ColumnDesc.Type[message.type] : message.type;\n                    return object;\n                };\n\n                /**\n                 * Converts this ColumnDesc to JSON.\n                 * @function toJSON\n                 * @memberof perfetto.protos.RawQueryResult.ColumnDesc\n                 * @instance\n                 * @returns {Object.<string,*>} JSON object\n                 */\n                ColumnDesc.prototype.toJSON = function toJSON() {\n                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                };\n\n                /**\n                 * Type enum.\n                 * @name perfetto.protos.RawQueryResult.ColumnDesc.Type\n                 * @enum {string}\n                 * @property {number} INT=1 INT value\n                 * @property {number} LONG=2 LONG value\n                 * @property {number} UNSIGNED_INT=3 UNSIGNED_INT value\n                 * @property {number} UNSIGNED_LONG=4 UNSIGNED_LONG value\n                 */\n                ColumnDesc.Type = (function() {\n                    var valuesById = {}, values = Object.create(valuesById);\n                    values[valuesById[1] = \"INT\"] = 1;\n                    values[valuesById[2] = \"LONG\"] = 2;\n                    values[valuesById[3] = \"UNSIGNED_INT\"] = 3;\n                    values[valuesById[4] = \"UNSIGNED_LONG\"] = 4;\n                    return values;\n                })();\n\n                return ColumnDesc;\n            })();\n\n            RawQueryResult.ColumnValues = (function() {\n\n                /**\n                 * Properties of a ColumnValues.\n                 * @memberof perfetto.protos.RawQueryResult\n                 * @interface IColumnValues\n                 * @property {Array.<number>|null} [intValues] ColumnValues intValues\n                 * @property {Array.<number|Long>|null} [longValues] ColumnValues longValues\n                 * @property {Array.<number>|null} [uintValues] ColumnValues uintValues\n                 * @property {Array.<number|Long>|null} [ulongValues] ColumnValues ulongValues\n                 */\n\n                /**\n                 * Constructs a new ColumnValues.\n                 * @memberof perfetto.protos.RawQueryResult\n                 * @classdesc Represents a ColumnValues.\n                 * @implements IColumnValues\n                 * @constructor\n                 * @param {perfetto.protos.RawQueryResult.IColumnValues=} [properties] Properties to set\n                 */\n                function ColumnValues(properties) {\n                    this.intValues = [];\n                    this.longValues = [];\n                    this.uintValues = [];\n                    this.ulongValues = [];\n                    if (properties)\n                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                            if (properties[keys[i]] != null)\n                                this[keys[i]] = properties[keys[i]];\n                }\n\n                /**\n                 * ColumnValues intValues.\n                 * @member {Array.<number>} intValues\n                 * @memberof perfetto.protos.RawQueryResult.ColumnValues\n                 * @instance\n                 */\n                ColumnValues.prototype.intValues = $util.emptyArray;\n\n                /**\n                 * ColumnValues longValues.\n                 * @member {Array.<number|Long>} longValues\n                 * @memberof perfetto.protos.RawQueryResult.ColumnValues\n                 * @instance\n                 */\n                ColumnValues.prototype.longValues = $util.emptyArray;\n\n                /**\n                 * ColumnValues uintValues.\n                 * @member {Array.<number>} uintValues\n                 * @memberof perfetto.protos.RawQueryResult.ColumnValues\n                 * @instance\n                 */\n                ColumnValues.prototype.uintValues = $util.emptyArray;\n\n                /**\n                 * ColumnValues ulongValues.\n                 * @member {Array.<number|Long>} ulongValues\n                 * @memberof perfetto.protos.RawQueryResult.ColumnValues\n                 * @instance\n                 */\n                ColumnValues.prototype.ulongValues = $util.emptyArray;\n\n                /**\n                 * Creates a new ColumnValues instance using the specified properties.\n                 * @function create\n                 * @memberof perfetto.protos.RawQueryResult.ColumnValues\n                 * @static\n                 * @param {perfetto.protos.RawQueryResult.IColumnValues=} [properties] Properties to set\n                 * @returns {perfetto.protos.RawQueryResult.ColumnValues} ColumnValues instance\n                 */\n                ColumnValues.create = function create(properties) {\n                    return new ColumnValues(properties);\n                };\n\n                /**\n                 * Encodes the specified ColumnValues message. Does not implicitly {@link perfetto.protos.RawQueryResult.ColumnValues.verify|verify} messages.\n                 * @function encode\n                 * @memberof perfetto.protos.RawQueryResult.ColumnValues\n                 * @static\n                 * @param {perfetto.protos.RawQueryResult.IColumnValues} message ColumnValues message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                ColumnValues.encode = function encode(message, writer) {\n                    if (!writer)\n                        writer = $Writer.create();\n                    if (message.intValues != null && message.intValues.length)\n                        for (var i = 0; i < message.intValues.length; ++i)\n                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.intValues[i]);\n                    if (message.longValues != null && message.longValues.length)\n                        for (var i = 0; i < message.longValues.length; ++i)\n                            writer.uint32(/* id 2, wireType 0 =*/16).int64(message.longValues[i]);\n                    if (message.uintValues != null && message.uintValues.length)\n                        for (var i = 0; i < message.uintValues.length; ++i)\n                            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.uintValues[i]);\n                    if (message.ulongValues != null && message.ulongValues.length)\n                        for (var i = 0; i < message.ulongValues.length; ++i)\n                            writer.uint32(/* id 4, wireType 0 =*/32).uint64(message.ulongValues[i]);\n                    return writer;\n                };\n\n                /**\n                 * Encodes the specified ColumnValues message, length delimited. Does not implicitly {@link perfetto.protos.RawQueryResult.ColumnValues.verify|verify} messages.\n                 * @function encodeDelimited\n                 * @memberof perfetto.protos.RawQueryResult.ColumnValues\n                 * @static\n                 * @param {perfetto.protos.RawQueryResult.IColumnValues} message ColumnValues message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                ColumnValues.encodeDelimited = function encodeDelimited(message, writer) {\n                    return this.encode(message, writer).ldelim();\n                };\n\n                /**\n                 * Decodes a ColumnValues message from the specified reader or buffer.\n                 * @function decode\n                 * @memberof perfetto.protos.RawQueryResult.ColumnValues\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @param {number} [length] Message length if known beforehand\n                 * @returns {perfetto.protos.RawQueryResult.ColumnValues} ColumnValues\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                ColumnValues.decode = function decode(reader, length) {\n                    if (!(reader instanceof $Reader))\n                        reader = $Reader.create(reader);\n                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.RawQueryResult.ColumnValues();\n                    while (reader.pos < end) {\n                        var tag = reader.uint32();\n                        switch (tag >>> 3) {\n                        case 1:\n                            if (!(message.intValues && message.intValues.length))\n                                message.intValues = [];\n                            if ((tag & 7) === 2) {\n                                var end2 = reader.uint32() + reader.pos;\n                                while (reader.pos < end2)\n                                    message.intValues.push(reader.int32());\n                            } else\n                                message.intValues.push(reader.int32());\n                            break;\n                        case 2:\n                            if (!(message.longValues && message.longValues.length))\n                                message.longValues = [];\n                            if ((tag & 7) === 2) {\n                                var end2 = reader.uint32() + reader.pos;\n                                while (reader.pos < end2)\n                                    message.longValues.push(reader.int64());\n                            } else\n                                message.longValues.push(reader.int64());\n                            break;\n                        case 3:\n                            if (!(message.uintValues && message.uintValues.length))\n                                message.uintValues = [];\n                            if ((tag & 7) === 2) {\n                                var end2 = reader.uint32() + reader.pos;\n                                while (reader.pos < end2)\n                                    message.uintValues.push(reader.uint32());\n                            } else\n                                message.uintValues.push(reader.uint32());\n                            break;\n                        case 4:\n                            if (!(message.ulongValues && message.ulongValues.length))\n                                message.ulongValues = [];\n                            if ((tag & 7) === 2) {\n                                var end2 = reader.uint32() + reader.pos;\n                                while (reader.pos < end2)\n                                    message.ulongValues.push(reader.uint64());\n                            } else\n                                message.ulongValues.push(reader.uint64());\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                    return message;\n                };\n\n                /**\n                 * Decodes a ColumnValues message from the specified reader or buffer, length delimited.\n                 * @function decodeDelimited\n                 * @memberof perfetto.protos.RawQueryResult.ColumnValues\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @returns {perfetto.protos.RawQueryResult.ColumnValues} ColumnValues\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                ColumnValues.decodeDelimited = function decodeDelimited(reader) {\n                    if (!(reader instanceof $Reader))\n                        reader = new $Reader(reader);\n                    return this.decode(reader, reader.uint32());\n                };\n\n                /**\n                 * Verifies a ColumnValues message.\n                 * @function verify\n                 * @memberof perfetto.protos.RawQueryResult.ColumnValues\n                 * @static\n                 * @param {Object.<string,*>} message Plain object to verify\n                 * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                 */\n                ColumnValues.verify = function verify(message) {\n                    if (typeof message !== \"object\" || message === null)\n                        return \"object expected\";\n                    if (message.intValues != null && message.hasOwnProperty(\"intValues\")) {\n                        if (!Array.isArray(message.intValues))\n                            return \"intValues: array expected\";\n                        for (var i = 0; i < message.intValues.length; ++i)\n                            if (!$util.isInteger(message.intValues[i]))\n                                return \"intValues: integer[] expected\";\n                    }\n                    if (message.longValues != null && message.hasOwnProperty(\"longValues\")) {\n                        if (!Array.isArray(message.longValues))\n                            return \"longValues: array expected\";\n                        for (var i = 0; i < message.longValues.length; ++i)\n                            if (!$util.isInteger(message.longValues[i]) && !(message.longValues[i] && $util.isInteger(message.longValues[i].low) && $util.isInteger(message.longValues[i].high)))\n                                return \"longValues: integer|Long[] expected\";\n                    }\n                    if (message.uintValues != null && message.hasOwnProperty(\"uintValues\")) {\n                        if (!Array.isArray(message.uintValues))\n                            return \"uintValues: array expected\";\n                        for (var i = 0; i < message.uintValues.length; ++i)\n                            if (!$util.isInteger(message.uintValues[i]))\n                                return \"uintValues: integer[] expected\";\n                    }\n                    if (message.ulongValues != null && message.hasOwnProperty(\"ulongValues\")) {\n                        if (!Array.isArray(message.ulongValues))\n                            return \"ulongValues: array expected\";\n                        for (var i = 0; i < message.ulongValues.length; ++i)\n                            if (!$util.isInteger(message.ulongValues[i]) && !(message.ulongValues[i] && $util.isInteger(message.ulongValues[i].low) && $util.isInteger(message.ulongValues[i].high)))\n                                return \"ulongValues: integer|Long[] expected\";\n                    }\n                    return null;\n                };\n\n                /**\n                 * Creates a ColumnValues message from a plain object. Also converts values to their respective internal types.\n                 * @function fromObject\n                 * @memberof perfetto.protos.RawQueryResult.ColumnValues\n                 * @static\n                 * @param {Object.<string,*>} object Plain object\n                 * @returns {perfetto.protos.RawQueryResult.ColumnValues} ColumnValues\n                 */\n                ColumnValues.fromObject = function fromObject(object) {\n                    if (object instanceof $root.perfetto.protos.RawQueryResult.ColumnValues)\n                        return object;\n                    var message = new $root.perfetto.protos.RawQueryResult.ColumnValues();\n                    if (object.intValues) {\n                        if (!Array.isArray(object.intValues))\n                            throw TypeError(\".perfetto.protos.RawQueryResult.ColumnValues.intValues: array expected\");\n                        message.intValues = [];\n                        for (var i = 0; i < object.intValues.length; ++i)\n                            message.intValues[i] = object.intValues[i] | 0;\n                    }\n                    if (object.longValues) {\n                        if (!Array.isArray(object.longValues))\n                            throw TypeError(\".perfetto.protos.RawQueryResult.ColumnValues.longValues: array expected\");\n                        message.longValues = [];\n                        for (var i = 0; i < object.longValues.length; ++i)\n                            if ($util.Long)\n                                (message.longValues[i] = $util.Long.fromValue(object.longValues[i])).unsigned = false;\n                            else if (typeof object.longValues[i] === \"string\")\n                                message.longValues[i] = parseInt(object.longValues[i], 10);\n                            else if (typeof object.longValues[i] === \"number\")\n                                message.longValues[i] = object.longValues[i];\n                            else if (typeof object.longValues[i] === \"object\")\n                                message.longValues[i] = new $util.LongBits(object.longValues[i].low >>> 0, object.longValues[i].high >>> 0).toNumber();\n                    }\n                    if (object.uintValues) {\n                        if (!Array.isArray(object.uintValues))\n                            throw TypeError(\".perfetto.protos.RawQueryResult.ColumnValues.uintValues: array expected\");\n                        message.uintValues = [];\n                        for (var i = 0; i < object.uintValues.length; ++i)\n                            message.uintValues[i] = object.uintValues[i] >>> 0;\n                    }\n                    if (object.ulongValues) {\n                        if (!Array.isArray(object.ulongValues))\n                            throw TypeError(\".perfetto.protos.RawQueryResult.ColumnValues.ulongValues: array expected\");\n                        message.ulongValues = [];\n                        for (var i = 0; i < object.ulongValues.length; ++i)\n                            if ($util.Long)\n                                (message.ulongValues[i] = $util.Long.fromValue(object.ulongValues[i])).unsigned = true;\n                            else if (typeof object.ulongValues[i] === \"string\")\n                                message.ulongValues[i] = parseInt(object.ulongValues[i], 10);\n                            else if (typeof object.ulongValues[i] === \"number\")\n                                message.ulongValues[i] = object.ulongValues[i];\n                            else if (typeof object.ulongValues[i] === \"object\")\n                                message.ulongValues[i] = new $util.LongBits(object.ulongValues[i].low >>> 0, object.ulongValues[i].high >>> 0).toNumber(true);\n                    }\n                    return message;\n                };\n\n                /**\n                 * Creates a plain object from a ColumnValues message. Also converts values to other types if specified.\n                 * @function toObject\n                 * @memberof perfetto.protos.RawQueryResult.ColumnValues\n                 * @static\n                 * @param {perfetto.protos.RawQueryResult.ColumnValues} message ColumnValues\n                 * @param {$protobuf.IConversionOptions} [options] Conversion options\n                 * @returns {Object.<string,*>} Plain object\n                 */\n                ColumnValues.toObject = function toObject(message, options) {\n                    if (!options)\n                        options = {};\n                    var object = {};\n                    if (options.arrays || options.defaults) {\n                        object.intValues = [];\n                        object.longValues = [];\n                        object.uintValues = [];\n                        object.ulongValues = [];\n                    }\n                    if (message.intValues && message.intValues.length) {\n                        object.intValues = [];\n                        for (var j = 0; j < message.intValues.length; ++j)\n                            object.intValues[j] = message.intValues[j];\n                    }\n                    if (message.longValues && message.longValues.length) {\n                        object.longValues = [];\n                        for (var j = 0; j < message.longValues.length; ++j)\n                            if (typeof message.longValues[j] === \"number\")\n                                object.longValues[j] = options.longs === String ? String(message.longValues[j]) : message.longValues[j];\n                            else\n                                object.longValues[j] = options.longs === String ? $util.Long.prototype.toString.call(message.longValues[j]) : options.longs === Number ? new $util.LongBits(message.longValues[j].low >>> 0, message.longValues[j].high >>> 0).toNumber() : message.longValues[j];\n                    }\n                    if (message.uintValues && message.uintValues.length) {\n                        object.uintValues = [];\n                        for (var j = 0; j < message.uintValues.length; ++j)\n                            object.uintValues[j] = message.uintValues[j];\n                    }\n                    if (message.ulongValues && message.ulongValues.length) {\n                        object.ulongValues = [];\n                        for (var j = 0; j < message.ulongValues.length; ++j)\n                            if (typeof message.ulongValues[j] === \"number\")\n                                object.ulongValues[j] = options.longs === String ? String(message.ulongValues[j]) : message.ulongValues[j];\n                            else\n                                object.ulongValues[j] = options.longs === String ? $util.Long.prototype.toString.call(message.ulongValues[j]) : options.longs === Number ? new $util.LongBits(message.ulongValues[j].low >>> 0, message.ulongValues[j].high >>> 0).toNumber(true) : message.ulongValues[j];\n                    }\n                    return object;\n                };\n\n                /**\n                 * Converts this ColumnValues to JSON.\n                 * @function toJSON\n                 * @memberof perfetto.protos.RawQueryResult.ColumnValues\n                 * @instance\n                 * @returns {Object.<string,*>} JSON object\n                 */\n                ColumnValues.prototype.toJSON = function toJSON() {\n                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                };\n\n                return ColumnValues;\n            })();\n\n            return RawQueryResult;\n        })();\n\n        protos.ChromeConfig = (function() {\n\n            /**\n             * Properties of a ChromeConfig.\n             * @memberof perfetto.protos\n             * @interface IChromeConfig\n             * @property {string|null} [traceConfig] ChromeConfig traceConfig\n             */\n\n            /**\n             * Constructs a new ChromeConfig.\n             * @memberof perfetto.protos\n             * @classdesc Represents a ChromeConfig.\n             * @implements IChromeConfig\n             * @constructor\n             * @param {perfetto.protos.IChromeConfig=} [properties] Properties to set\n             */\n            function ChromeConfig(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * ChromeConfig traceConfig.\n             * @member {string} traceConfig\n             * @memberof perfetto.protos.ChromeConfig\n             * @instance\n             */\n            ChromeConfig.prototype.traceConfig = \"\";\n\n            /**\n             * Creates a new ChromeConfig instance using the specified properties.\n             * @function create\n             * @memberof perfetto.protos.ChromeConfig\n             * @static\n             * @param {perfetto.protos.IChromeConfig=} [properties] Properties to set\n             * @returns {perfetto.protos.ChromeConfig} ChromeConfig instance\n             */\n            ChromeConfig.create = function create(properties) {\n                return new ChromeConfig(properties);\n            };\n\n            /**\n             * Encodes the specified ChromeConfig message. Does not implicitly {@link perfetto.protos.ChromeConfig.verify|verify} messages.\n             * @function encode\n             * @memberof perfetto.protos.ChromeConfig\n             * @static\n             * @param {perfetto.protos.IChromeConfig} message ChromeConfig message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            ChromeConfig.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.traceConfig != null && message.hasOwnProperty(\"traceConfig\"))\n                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.traceConfig);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified ChromeConfig message, length delimited. Does not implicitly {@link perfetto.protos.ChromeConfig.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof perfetto.protos.ChromeConfig\n             * @static\n             * @param {perfetto.protos.IChromeConfig} message ChromeConfig message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            ChromeConfig.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a ChromeConfig message from the specified reader or buffer.\n             * @function decode\n             * @memberof perfetto.protos.ChromeConfig\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {perfetto.protos.ChromeConfig} ChromeConfig\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            ChromeConfig.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.ChromeConfig();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.traceConfig = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a ChromeConfig message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof perfetto.protos.ChromeConfig\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {perfetto.protos.ChromeConfig} ChromeConfig\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            ChromeConfig.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a ChromeConfig message.\n             * @function verify\n             * @memberof perfetto.protos.ChromeConfig\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            ChromeConfig.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.traceConfig != null && message.hasOwnProperty(\"traceConfig\"))\n                    if (!$util.isString(message.traceConfig))\n                        return \"traceConfig: string expected\";\n                return null;\n            };\n\n            /**\n             * Creates a ChromeConfig message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof perfetto.protos.ChromeConfig\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {perfetto.protos.ChromeConfig} ChromeConfig\n             */\n            ChromeConfig.fromObject = function fromObject(object) {\n                if (object instanceof $root.perfetto.protos.ChromeConfig)\n                    return object;\n                var message = new $root.perfetto.protos.ChromeConfig();\n                if (object.traceConfig != null)\n                    message.traceConfig = String(object.traceConfig);\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a ChromeConfig message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof perfetto.protos.ChromeConfig\n             * @static\n             * @param {perfetto.protos.ChromeConfig} message ChromeConfig\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            ChromeConfig.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults)\n                    object.traceConfig = \"\";\n                if (message.traceConfig != null && message.hasOwnProperty(\"traceConfig\"))\n                    object.traceConfig = message.traceConfig;\n                return object;\n            };\n\n            /**\n             * Converts this ChromeConfig to JSON.\n             * @function toJSON\n             * @memberof perfetto.protos.ChromeConfig\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            ChromeConfig.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return ChromeConfig;\n        })();\n\n        protos.InodeFileConfig = (function() {\n\n            /**\n             * Properties of an InodeFileConfig.\n             * @memberof perfetto.protos\n             * @interface IInodeFileConfig\n             * @property {number|null} [scanIntervalMs] InodeFileConfig scanIntervalMs\n             * @property {number|null} [scanDelayMs] InodeFileConfig scanDelayMs\n             * @property {number|null} [scanBatchSize] InodeFileConfig scanBatchSize\n             * @property {boolean|null} [doNotScan] InodeFileConfig doNotScan\n             * @property {Array.<string>|null} [scanMountPoints] InodeFileConfig scanMountPoints\n             * @property {Array.<perfetto.protos.InodeFileConfig.IMountPointMappingEntry>|null} [mountPointMapping] InodeFileConfig mountPointMapping\n             */\n\n            /**\n             * Constructs a new InodeFileConfig.\n             * @memberof perfetto.protos\n             * @classdesc Represents an InodeFileConfig.\n             * @implements IInodeFileConfig\n             * @constructor\n             * @param {perfetto.protos.IInodeFileConfig=} [properties] Properties to set\n             */\n            function InodeFileConfig(properties) {\n                this.scanMountPoints = [];\n                this.mountPointMapping = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * InodeFileConfig scanIntervalMs.\n             * @member {number} scanIntervalMs\n             * @memberof perfetto.protos.InodeFileConfig\n             * @instance\n             */\n            InodeFileConfig.prototype.scanIntervalMs = 0;\n\n            /**\n             * InodeFileConfig scanDelayMs.\n             * @member {number} scanDelayMs\n             * @memberof perfetto.protos.InodeFileConfig\n             * @instance\n             */\n            InodeFileConfig.prototype.scanDelayMs = 0;\n\n            /**\n             * InodeFileConfig scanBatchSize.\n             * @member {number} scanBatchSize\n             * @memberof perfetto.protos.InodeFileConfig\n             * @instance\n             */\n            InodeFileConfig.prototype.scanBatchSize = 0;\n\n            /**\n             * InodeFileConfig doNotScan.\n             * @member {boolean} doNotScan\n             * @memberof perfetto.protos.InodeFileConfig\n             * @instance\n             */\n            InodeFileConfig.prototype.doNotScan = false;\n\n            /**\n             * InodeFileConfig scanMountPoints.\n             * @member {Array.<string>} scanMountPoints\n             * @memberof perfetto.protos.InodeFileConfig\n             * @instance\n             */\n            InodeFileConfig.prototype.scanMountPoints = $util.emptyArray;\n\n            /**\n             * InodeFileConfig mountPointMapping.\n             * @member {Array.<perfetto.protos.InodeFileConfig.IMountPointMappingEntry>} mountPointMapping\n             * @memberof perfetto.protos.InodeFileConfig\n             * @instance\n             */\n            InodeFileConfig.prototype.mountPointMapping = $util.emptyArray;\n\n            /**\n             * Creates a new InodeFileConfig instance using the specified properties.\n             * @function create\n             * @memberof perfetto.protos.InodeFileConfig\n             * @static\n             * @param {perfetto.protos.IInodeFileConfig=} [properties] Properties to set\n             * @returns {perfetto.protos.InodeFileConfig} InodeFileConfig instance\n             */\n            InodeFileConfig.create = function create(properties) {\n                return new InodeFileConfig(properties);\n            };\n\n            /**\n             * Encodes the specified InodeFileConfig message. Does not implicitly {@link perfetto.protos.InodeFileConfig.verify|verify} messages.\n             * @function encode\n             * @memberof perfetto.protos.InodeFileConfig\n             * @static\n             * @param {perfetto.protos.IInodeFileConfig} message InodeFileConfig message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            InodeFileConfig.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.scanIntervalMs != null && message.hasOwnProperty(\"scanIntervalMs\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.scanIntervalMs);\n                if (message.scanDelayMs != null && message.hasOwnProperty(\"scanDelayMs\"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.scanDelayMs);\n                if (message.scanBatchSize != null && message.hasOwnProperty(\"scanBatchSize\"))\n                    writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.scanBatchSize);\n                if (message.doNotScan != null && message.hasOwnProperty(\"doNotScan\"))\n                    writer.uint32(/* id 4, wireType 0 =*/32).bool(message.doNotScan);\n                if (message.scanMountPoints != null && message.scanMountPoints.length)\n                    for (var i = 0; i < message.scanMountPoints.length; ++i)\n                        writer.uint32(/* id 5, wireType 2 =*/42).string(message.scanMountPoints[i]);\n                if (message.mountPointMapping != null && message.mountPointMapping.length)\n                    for (var i = 0; i < message.mountPointMapping.length; ++i)\n                        $root.perfetto.protos.InodeFileConfig.MountPointMappingEntry.encode(message.mountPointMapping[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();\n                return writer;\n            };\n\n            /**\n             * Encodes the specified InodeFileConfig message, length delimited. Does not implicitly {@link perfetto.protos.InodeFileConfig.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof perfetto.protos.InodeFileConfig\n             * @static\n             * @param {perfetto.protos.IInodeFileConfig} message InodeFileConfig message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            InodeFileConfig.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes an InodeFileConfig message from the specified reader or buffer.\n             * @function decode\n             * @memberof perfetto.protos.InodeFileConfig\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {perfetto.protos.InodeFileConfig} InodeFileConfig\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            InodeFileConfig.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.InodeFileConfig();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.scanIntervalMs = reader.uint32();\n                        break;\n                    case 2:\n                        message.scanDelayMs = reader.uint32();\n                        break;\n                    case 3:\n                        message.scanBatchSize = reader.uint32();\n                        break;\n                    case 4:\n                        message.doNotScan = reader.bool();\n                        break;\n                    case 5:\n                        if (!(message.scanMountPoints && message.scanMountPoints.length))\n                            message.scanMountPoints = [];\n                        message.scanMountPoints.push(reader.string());\n                        break;\n                    case 6:\n                        if (!(message.mountPointMapping && message.mountPointMapping.length))\n                            message.mountPointMapping = [];\n                        message.mountPointMapping.push($root.perfetto.protos.InodeFileConfig.MountPointMappingEntry.decode(reader, reader.uint32()));\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes an InodeFileConfig message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof perfetto.protos.InodeFileConfig\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {perfetto.protos.InodeFileConfig} InodeFileConfig\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            InodeFileConfig.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies an InodeFileConfig message.\n             * @function verify\n             * @memberof perfetto.protos.InodeFileConfig\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            InodeFileConfig.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.scanIntervalMs != null && message.hasOwnProperty(\"scanIntervalMs\"))\n                    if (!$util.isInteger(message.scanIntervalMs))\n                        return \"scanIntervalMs: integer expected\";\n                if (message.scanDelayMs != null && message.hasOwnProperty(\"scanDelayMs\"))\n                    if (!$util.isInteger(message.scanDelayMs))\n                        return \"scanDelayMs: integer expected\";\n                if (message.scanBatchSize != null && message.hasOwnProperty(\"scanBatchSize\"))\n                    if (!$util.isInteger(message.scanBatchSize))\n                        return \"scanBatchSize: integer expected\";\n                if (message.doNotScan != null && message.hasOwnProperty(\"doNotScan\"))\n                    if (typeof message.doNotScan !== \"boolean\")\n                        return \"doNotScan: boolean expected\";\n                if (message.scanMountPoints != null && message.hasOwnProperty(\"scanMountPoints\")) {\n                    if (!Array.isArray(message.scanMountPoints))\n                        return \"scanMountPoints: array expected\";\n                    for (var i = 0; i < message.scanMountPoints.length; ++i)\n                        if (!$util.isString(message.scanMountPoints[i]))\n                            return \"scanMountPoints: string[] expected\";\n                }\n                if (message.mountPointMapping != null && message.hasOwnProperty(\"mountPointMapping\")) {\n                    if (!Array.isArray(message.mountPointMapping))\n                        return \"mountPointMapping: array expected\";\n                    for (var i = 0; i < message.mountPointMapping.length; ++i) {\n                        var error = $root.perfetto.protos.InodeFileConfig.MountPointMappingEntry.verify(message.mountPointMapping[i]);\n                        if (error)\n                            return \"mountPointMapping.\" + error;\n                    }\n                }\n                return null;\n            };\n\n            /**\n             * Creates an InodeFileConfig message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof perfetto.protos.InodeFileConfig\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {perfetto.protos.InodeFileConfig} InodeFileConfig\n             */\n            InodeFileConfig.fromObject = function fromObject(object) {\n                if (object instanceof $root.perfetto.protos.InodeFileConfig)\n                    return object;\n                var message = new $root.perfetto.protos.InodeFileConfig();\n                if (object.scanIntervalMs != null)\n                    message.scanIntervalMs = object.scanIntervalMs >>> 0;\n                if (object.scanDelayMs != null)\n                    message.scanDelayMs = object.scanDelayMs >>> 0;\n                if (object.scanBatchSize != null)\n                    message.scanBatchSize = object.scanBatchSize >>> 0;\n                if (object.doNotScan != null)\n                    message.doNotScan = Boolean(object.doNotScan);\n                if (object.scanMountPoints) {\n                    if (!Array.isArray(object.scanMountPoints))\n                        throw TypeError(\".perfetto.protos.InodeFileConfig.scanMountPoints: array expected\");\n                    message.scanMountPoints = [];\n                    for (var i = 0; i < object.scanMountPoints.length; ++i)\n                        message.scanMountPoints[i] = String(object.scanMountPoints[i]);\n                }\n                if (object.mountPointMapping) {\n                    if (!Array.isArray(object.mountPointMapping))\n                        throw TypeError(\".perfetto.protos.InodeFileConfig.mountPointMapping: array expected\");\n                    message.mountPointMapping = [];\n                    for (var i = 0; i < object.mountPointMapping.length; ++i) {\n                        if (typeof object.mountPointMapping[i] !== \"object\")\n                            throw TypeError(\".perfetto.protos.InodeFileConfig.mountPointMapping: object expected\");\n                        message.mountPointMapping[i] = $root.perfetto.protos.InodeFileConfig.MountPointMappingEntry.fromObject(object.mountPointMapping[i]);\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Creates a plain object from an InodeFileConfig message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof perfetto.protos.InodeFileConfig\n             * @static\n             * @param {perfetto.protos.InodeFileConfig} message InodeFileConfig\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            InodeFileConfig.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults) {\n                    object.scanMountPoints = [];\n                    object.mountPointMapping = [];\n                }\n                if (options.defaults) {\n                    object.scanIntervalMs = 0;\n                    object.scanDelayMs = 0;\n                    object.scanBatchSize = 0;\n                    object.doNotScan = false;\n                }\n                if (message.scanIntervalMs != null && message.hasOwnProperty(\"scanIntervalMs\"))\n                    object.scanIntervalMs = message.scanIntervalMs;\n                if (message.scanDelayMs != null && message.hasOwnProperty(\"scanDelayMs\"))\n                    object.scanDelayMs = message.scanDelayMs;\n                if (message.scanBatchSize != null && message.hasOwnProperty(\"scanBatchSize\"))\n                    object.scanBatchSize = message.scanBatchSize;\n                if (message.doNotScan != null && message.hasOwnProperty(\"doNotScan\"))\n                    object.doNotScan = message.doNotScan;\n                if (message.scanMountPoints && message.scanMountPoints.length) {\n                    object.scanMountPoints = [];\n                    for (var j = 0; j < message.scanMountPoints.length; ++j)\n                        object.scanMountPoints[j] = message.scanMountPoints[j];\n                }\n                if (message.mountPointMapping && message.mountPointMapping.length) {\n                    object.mountPointMapping = [];\n                    for (var j = 0; j < message.mountPointMapping.length; ++j)\n                        object.mountPointMapping[j] = $root.perfetto.protos.InodeFileConfig.MountPointMappingEntry.toObject(message.mountPointMapping[j], options);\n                }\n                return object;\n            };\n\n            /**\n             * Converts this InodeFileConfig to JSON.\n             * @function toJSON\n             * @memberof perfetto.protos.InodeFileConfig\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            InodeFileConfig.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            InodeFileConfig.MountPointMappingEntry = (function() {\n\n                /**\n                 * Properties of a MountPointMappingEntry.\n                 * @memberof perfetto.protos.InodeFileConfig\n                 * @interface IMountPointMappingEntry\n                 * @property {string|null} [mountpoint] MountPointMappingEntry mountpoint\n                 * @property {Array.<string>|null} [scanRoots] MountPointMappingEntry scanRoots\n                 */\n\n                /**\n                 * Constructs a new MountPointMappingEntry.\n                 * @memberof perfetto.protos.InodeFileConfig\n                 * @classdesc Represents a MountPointMappingEntry.\n                 * @implements IMountPointMappingEntry\n                 * @constructor\n                 * @param {perfetto.protos.InodeFileConfig.IMountPointMappingEntry=} [properties] Properties to set\n                 */\n                function MountPointMappingEntry(properties) {\n                    this.scanRoots = [];\n                    if (properties)\n                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                            if (properties[keys[i]] != null)\n                                this[keys[i]] = properties[keys[i]];\n                }\n\n                /**\n                 * MountPointMappingEntry mountpoint.\n                 * @member {string} mountpoint\n                 * @memberof perfetto.protos.InodeFileConfig.MountPointMappingEntry\n                 * @instance\n                 */\n                MountPointMappingEntry.prototype.mountpoint = \"\";\n\n                /**\n                 * MountPointMappingEntry scanRoots.\n                 * @member {Array.<string>} scanRoots\n                 * @memberof perfetto.protos.InodeFileConfig.MountPointMappingEntry\n                 * @instance\n                 */\n                MountPointMappingEntry.prototype.scanRoots = $util.emptyArray;\n\n                /**\n                 * Creates a new MountPointMappingEntry instance using the specified properties.\n                 * @function create\n                 * @memberof perfetto.protos.InodeFileConfig.MountPointMappingEntry\n                 * @static\n                 * @param {perfetto.protos.InodeFileConfig.IMountPointMappingEntry=} [properties] Properties to set\n                 * @returns {perfetto.protos.InodeFileConfig.MountPointMappingEntry} MountPointMappingEntry instance\n                 */\n                MountPointMappingEntry.create = function create(properties) {\n                    return new MountPointMappingEntry(properties);\n                };\n\n                /**\n                 * Encodes the specified MountPointMappingEntry message. Does not implicitly {@link perfetto.protos.InodeFileConfig.MountPointMappingEntry.verify|verify} messages.\n                 * @function encode\n                 * @memberof perfetto.protos.InodeFileConfig.MountPointMappingEntry\n                 * @static\n                 * @param {perfetto.protos.InodeFileConfig.IMountPointMappingEntry} message MountPointMappingEntry message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                MountPointMappingEntry.encode = function encode(message, writer) {\n                    if (!writer)\n                        writer = $Writer.create();\n                    if (message.mountpoint != null && message.hasOwnProperty(\"mountpoint\"))\n                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.mountpoint);\n                    if (message.scanRoots != null && message.scanRoots.length)\n                        for (var i = 0; i < message.scanRoots.length; ++i)\n                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.scanRoots[i]);\n                    return writer;\n                };\n\n                /**\n                 * Encodes the specified MountPointMappingEntry message, length delimited. Does not implicitly {@link perfetto.protos.InodeFileConfig.MountPointMappingEntry.verify|verify} messages.\n                 * @function encodeDelimited\n                 * @memberof perfetto.protos.InodeFileConfig.MountPointMappingEntry\n                 * @static\n                 * @param {perfetto.protos.InodeFileConfig.IMountPointMappingEntry} message MountPointMappingEntry message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                MountPointMappingEntry.encodeDelimited = function encodeDelimited(message, writer) {\n                    return this.encode(message, writer).ldelim();\n                };\n\n                /**\n                 * Decodes a MountPointMappingEntry message from the specified reader or buffer.\n                 * @function decode\n                 * @memberof perfetto.protos.InodeFileConfig.MountPointMappingEntry\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @param {number} [length] Message length if known beforehand\n                 * @returns {perfetto.protos.InodeFileConfig.MountPointMappingEntry} MountPointMappingEntry\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                MountPointMappingEntry.decode = function decode(reader, length) {\n                    if (!(reader instanceof $Reader))\n                        reader = $Reader.create(reader);\n                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.InodeFileConfig.MountPointMappingEntry();\n                    while (reader.pos < end) {\n                        var tag = reader.uint32();\n                        switch (tag >>> 3) {\n                        case 1:\n                            message.mountpoint = reader.string();\n                            break;\n                        case 2:\n                            if (!(message.scanRoots && message.scanRoots.length))\n                                message.scanRoots = [];\n                            message.scanRoots.push(reader.string());\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                    return message;\n                };\n\n                /**\n                 * Decodes a MountPointMappingEntry message from the specified reader or buffer, length delimited.\n                 * @function decodeDelimited\n                 * @memberof perfetto.protos.InodeFileConfig.MountPointMappingEntry\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @returns {perfetto.protos.InodeFileConfig.MountPointMappingEntry} MountPointMappingEntry\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                MountPointMappingEntry.decodeDelimited = function decodeDelimited(reader) {\n                    if (!(reader instanceof $Reader))\n                        reader = new $Reader(reader);\n                    return this.decode(reader, reader.uint32());\n                };\n\n                /**\n                 * Verifies a MountPointMappingEntry message.\n                 * @function verify\n                 * @memberof perfetto.protos.InodeFileConfig.MountPointMappingEntry\n                 * @static\n                 * @param {Object.<string,*>} message Plain object to verify\n                 * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                 */\n                MountPointMappingEntry.verify = function verify(message) {\n                    if (typeof message !== \"object\" || message === null)\n                        return \"object expected\";\n                    if (message.mountpoint != null && message.hasOwnProperty(\"mountpoint\"))\n                        if (!$util.isString(message.mountpoint))\n                            return \"mountpoint: string expected\";\n                    if (message.scanRoots != null && message.hasOwnProperty(\"scanRoots\")) {\n                        if (!Array.isArray(message.scanRoots))\n                            return \"scanRoots: array expected\";\n                        for (var i = 0; i < message.scanRoots.length; ++i)\n                            if (!$util.isString(message.scanRoots[i]))\n                                return \"scanRoots: string[] expected\";\n                    }\n                    return null;\n                };\n\n                /**\n                 * Creates a MountPointMappingEntry message from a plain object. Also converts values to their respective internal types.\n                 * @function fromObject\n                 * @memberof perfetto.protos.InodeFileConfig.MountPointMappingEntry\n                 * @static\n                 * @param {Object.<string,*>} object Plain object\n                 * @returns {perfetto.protos.InodeFileConfig.MountPointMappingEntry} MountPointMappingEntry\n                 */\n                MountPointMappingEntry.fromObject = function fromObject(object) {\n                    if (object instanceof $root.perfetto.protos.InodeFileConfig.MountPointMappingEntry)\n                        return object;\n                    var message = new $root.perfetto.protos.InodeFileConfig.MountPointMappingEntry();\n                    if (object.mountpoint != null)\n                        message.mountpoint = String(object.mountpoint);\n                    if (object.scanRoots) {\n                        if (!Array.isArray(object.scanRoots))\n                            throw TypeError(\".perfetto.protos.InodeFileConfig.MountPointMappingEntry.scanRoots: array expected\");\n                        message.scanRoots = [];\n                        for (var i = 0; i < object.scanRoots.length; ++i)\n                            message.scanRoots[i] = String(object.scanRoots[i]);\n                    }\n                    return message;\n                };\n\n                /**\n                 * Creates a plain object from a MountPointMappingEntry message. Also converts values to other types if specified.\n                 * @function toObject\n                 * @memberof perfetto.protos.InodeFileConfig.MountPointMappingEntry\n                 * @static\n                 * @param {perfetto.protos.InodeFileConfig.MountPointMappingEntry} message MountPointMappingEntry\n                 * @param {$protobuf.IConversionOptions} [options] Conversion options\n                 * @returns {Object.<string,*>} Plain object\n                 */\n                MountPointMappingEntry.toObject = function toObject(message, options) {\n                    if (!options)\n                        options = {};\n                    var object = {};\n                    if (options.arrays || options.defaults)\n                        object.scanRoots = [];\n                    if (options.defaults)\n                        object.mountpoint = \"\";\n                    if (message.mountpoint != null && message.hasOwnProperty(\"mountpoint\"))\n                        object.mountpoint = message.mountpoint;\n                    if (message.scanRoots && message.scanRoots.length) {\n                        object.scanRoots = [];\n                        for (var j = 0; j < message.scanRoots.length; ++j)\n                            object.scanRoots[j] = message.scanRoots[j];\n                    }\n                    return object;\n                };\n\n                /**\n                 * Converts this MountPointMappingEntry to JSON.\n                 * @function toJSON\n                 * @memberof perfetto.protos.InodeFileConfig.MountPointMappingEntry\n                 * @instance\n                 * @returns {Object.<string,*>} JSON object\n                 */\n                MountPointMappingEntry.prototype.toJSON = function toJSON() {\n                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                };\n\n                return MountPointMappingEntry;\n            })();\n\n            return InodeFileConfig;\n        })();\n\n        protos.ProcessStatsConfig = (function() {\n\n            /**\n             * Properties of a ProcessStatsConfig.\n             * @memberof perfetto.protos\n             * @interface IProcessStatsConfig\n             * @property {Array.<perfetto.protos.ProcessStatsConfig.Quirks>|null} [quirks] ProcessStatsConfig quirks\n             * @property {boolean|null} [scanAllProcessesOnStart] ProcessStatsConfig scanAllProcessesOnStart\n             * @property {boolean|null} [recordThreadNames] ProcessStatsConfig recordThreadNames\n             */\n\n            /**\n             * Constructs a new ProcessStatsConfig.\n             * @memberof perfetto.protos\n             * @classdesc Represents a ProcessStatsConfig.\n             * @implements IProcessStatsConfig\n             * @constructor\n             * @param {perfetto.protos.IProcessStatsConfig=} [properties] Properties to set\n             */\n            function ProcessStatsConfig(properties) {\n                this.quirks = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * ProcessStatsConfig quirks.\n             * @member {Array.<perfetto.protos.ProcessStatsConfig.Quirks>} quirks\n             * @memberof perfetto.protos.ProcessStatsConfig\n             * @instance\n             */\n            ProcessStatsConfig.prototype.quirks = $util.emptyArray;\n\n            /**\n             * ProcessStatsConfig scanAllProcessesOnStart.\n             * @member {boolean} scanAllProcessesOnStart\n             * @memberof perfetto.protos.ProcessStatsConfig\n             * @instance\n             */\n            ProcessStatsConfig.prototype.scanAllProcessesOnStart = false;\n\n            /**\n             * ProcessStatsConfig recordThreadNames.\n             * @member {boolean} recordThreadNames\n             * @memberof perfetto.protos.ProcessStatsConfig\n             * @instance\n             */\n            ProcessStatsConfig.prototype.recordThreadNames = false;\n\n            /**\n             * Creates a new ProcessStatsConfig instance using the specified properties.\n             * @function create\n             * @memberof perfetto.protos.ProcessStatsConfig\n             * @static\n             * @param {perfetto.protos.IProcessStatsConfig=} [properties] Properties to set\n             * @returns {perfetto.protos.ProcessStatsConfig} ProcessStatsConfig instance\n             */\n            ProcessStatsConfig.create = function create(properties) {\n                return new ProcessStatsConfig(properties);\n            };\n\n            /**\n             * Encodes the specified ProcessStatsConfig message. Does not implicitly {@link perfetto.protos.ProcessStatsConfig.verify|verify} messages.\n             * @function encode\n             * @memberof perfetto.protos.ProcessStatsConfig\n             * @static\n             * @param {perfetto.protos.IProcessStatsConfig} message ProcessStatsConfig message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            ProcessStatsConfig.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.quirks != null && message.quirks.length)\n                    for (var i = 0; i < message.quirks.length; ++i)\n                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.quirks[i]);\n                if (message.scanAllProcessesOnStart != null && message.hasOwnProperty(\"scanAllProcessesOnStart\"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).bool(message.scanAllProcessesOnStart);\n                if (message.recordThreadNames != null && message.hasOwnProperty(\"recordThreadNames\"))\n                    writer.uint32(/* id 3, wireType 0 =*/24).bool(message.recordThreadNames);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified ProcessStatsConfig message, length delimited. Does not implicitly {@link perfetto.protos.ProcessStatsConfig.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof perfetto.protos.ProcessStatsConfig\n             * @static\n             * @param {perfetto.protos.IProcessStatsConfig} message ProcessStatsConfig message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            ProcessStatsConfig.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a ProcessStatsConfig message from the specified reader or buffer.\n             * @function decode\n             * @memberof perfetto.protos.ProcessStatsConfig\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {perfetto.protos.ProcessStatsConfig} ProcessStatsConfig\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            ProcessStatsConfig.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.ProcessStatsConfig();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        if (!(message.quirks && message.quirks.length))\n                            message.quirks = [];\n                        if ((tag & 7) === 2) {\n                            var end2 = reader.uint32() + reader.pos;\n                            while (reader.pos < end2)\n                                message.quirks.push(reader.int32());\n                        } else\n                            message.quirks.push(reader.int32());\n                        break;\n                    case 2:\n                        message.scanAllProcessesOnStart = reader.bool();\n                        break;\n                    case 3:\n                        message.recordThreadNames = reader.bool();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a ProcessStatsConfig message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof perfetto.protos.ProcessStatsConfig\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {perfetto.protos.ProcessStatsConfig} ProcessStatsConfig\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            ProcessStatsConfig.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a ProcessStatsConfig message.\n             * @function verify\n             * @memberof perfetto.protos.ProcessStatsConfig\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            ProcessStatsConfig.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.quirks != null && message.hasOwnProperty(\"quirks\")) {\n                    if (!Array.isArray(message.quirks))\n                        return \"quirks: array expected\";\n                    for (var i = 0; i < message.quirks.length; ++i)\n                        switch (message.quirks[i]) {\n                        default:\n                            return \"quirks: enum value[] expected\";\n                        case 0:\n                        case 1:\n                        case 2:\n                            break;\n                        }\n                }\n                if (message.scanAllProcessesOnStart != null && message.hasOwnProperty(\"scanAllProcessesOnStart\"))\n                    if (typeof message.scanAllProcessesOnStart !== \"boolean\")\n                        return \"scanAllProcessesOnStart: boolean expected\";\n                if (message.recordThreadNames != null && message.hasOwnProperty(\"recordThreadNames\"))\n                    if (typeof message.recordThreadNames !== \"boolean\")\n                        return \"recordThreadNames: boolean expected\";\n                return null;\n            };\n\n            /**\n             * Creates a ProcessStatsConfig message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof perfetto.protos.ProcessStatsConfig\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {perfetto.protos.ProcessStatsConfig} ProcessStatsConfig\n             */\n            ProcessStatsConfig.fromObject = function fromObject(object) {\n                if (object instanceof $root.perfetto.protos.ProcessStatsConfig)\n                    return object;\n                var message = new $root.perfetto.protos.ProcessStatsConfig();\n                if (object.quirks) {\n                    if (!Array.isArray(object.quirks))\n                        throw TypeError(\".perfetto.protos.ProcessStatsConfig.quirks: array expected\");\n                    message.quirks = [];\n                    for (var i = 0; i < object.quirks.length; ++i)\n                        switch (object.quirks[i]) {\n                        default:\n                        case \"QUIRKS_UNSPECIFIED\":\n                        case 0:\n                            message.quirks[i] = 0;\n                            break;\n                        case \"DISABLE_INITIAL_DUMP\":\n                        case 1:\n                            message.quirks[i] = 1;\n                            break;\n                        case \"DISABLE_ON_DEMAND\":\n                        case 2:\n                            message.quirks[i] = 2;\n                            break;\n                        }\n                }\n                if (object.scanAllProcessesOnStart != null)\n                    message.scanAllProcessesOnStart = Boolean(object.scanAllProcessesOnStart);\n                if (object.recordThreadNames != null)\n                    message.recordThreadNames = Boolean(object.recordThreadNames);\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a ProcessStatsConfig message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof perfetto.protos.ProcessStatsConfig\n             * @static\n             * @param {perfetto.protos.ProcessStatsConfig} message ProcessStatsConfig\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            ProcessStatsConfig.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults)\n                    object.quirks = [];\n                if (options.defaults) {\n                    object.scanAllProcessesOnStart = false;\n                    object.recordThreadNames = false;\n                }\n                if (message.quirks && message.quirks.length) {\n                    object.quirks = [];\n                    for (var j = 0; j < message.quirks.length; ++j)\n                        object.quirks[j] = options.enums === String ? $root.perfetto.protos.ProcessStatsConfig.Quirks[message.quirks[j]] : message.quirks[j];\n                }\n                if (message.scanAllProcessesOnStart != null && message.hasOwnProperty(\"scanAllProcessesOnStart\"))\n                    object.scanAllProcessesOnStart = message.scanAllProcessesOnStart;\n                if (message.recordThreadNames != null && message.hasOwnProperty(\"recordThreadNames\"))\n                    object.recordThreadNames = message.recordThreadNames;\n                return object;\n            };\n\n            /**\n             * Converts this ProcessStatsConfig to JSON.\n             * @function toJSON\n             * @memberof perfetto.protos.ProcessStatsConfig\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            ProcessStatsConfig.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            /**\n             * Quirks enum.\n             * @name perfetto.protos.ProcessStatsConfig.Quirks\n             * @enum {string}\n             * @property {number} QUIRKS_UNSPECIFIED=0 QUIRKS_UNSPECIFIED value\n             * @property {number} DISABLE_INITIAL_DUMP=1 DISABLE_INITIAL_DUMP value\n             * @property {number} DISABLE_ON_DEMAND=2 DISABLE_ON_DEMAND value\n             */\n            ProcessStatsConfig.Quirks = (function() {\n                var valuesById = {}, values = Object.create(valuesById);\n                values[valuesById[0] = \"QUIRKS_UNSPECIFIED\"] = 0;\n                values[valuesById[1] = \"DISABLE_INITIAL_DUMP\"] = 1;\n                values[valuesById[2] = \"DISABLE_ON_DEMAND\"] = 2;\n                return values;\n            })();\n\n            return ProcessStatsConfig;\n        })();\n\n        protos.DataSourceConfig = (function() {\n\n            /**\n             * Properties of a DataSourceConfig.\n             * @memberof perfetto.protos\n             * @interface IDataSourceConfig\n             * @property {string|null} [name] DataSourceConfig name\n             * @property {number|null} [targetBuffer] DataSourceConfig targetBuffer\n             * @property {number|null} [traceDurationMs] DataSourceConfig traceDurationMs\n             * @property {perfetto.protos.IFtraceConfig|null} [ftraceConfig] DataSourceConfig ftraceConfig\n             * @property {perfetto.protos.IChromeConfig|null} [chromeConfig] DataSourceConfig chromeConfig\n             * @property {perfetto.protos.IInodeFileConfig|null} [inodeFileConfig] DataSourceConfig inodeFileConfig\n             * @property {perfetto.protos.IProcessStatsConfig|null} [processStatsConfig] DataSourceConfig processStatsConfig\n             * @property {string|null} [legacyConfig] DataSourceConfig legacyConfig\n             * @property {perfetto.protos.ITestConfig|null} [forTesting] DataSourceConfig forTesting\n             */\n\n            /**\n             * Constructs a new DataSourceConfig.\n             * @memberof perfetto.protos\n             * @classdesc Represents a DataSourceConfig.\n             * @implements IDataSourceConfig\n             * @constructor\n             * @param {perfetto.protos.IDataSourceConfig=} [properties] Properties to set\n             */\n            function DataSourceConfig(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * DataSourceConfig name.\n             * @member {string} name\n             * @memberof perfetto.protos.DataSourceConfig\n             * @instance\n             */\n            DataSourceConfig.prototype.name = \"\";\n\n            /**\n             * DataSourceConfig targetBuffer.\n             * @member {number} targetBuffer\n             * @memberof perfetto.protos.DataSourceConfig\n             * @instance\n             */\n            DataSourceConfig.prototype.targetBuffer = 0;\n\n            /**\n             * DataSourceConfig traceDurationMs.\n             * @member {number} traceDurationMs\n             * @memberof perfetto.protos.DataSourceConfig\n             * @instance\n             */\n            DataSourceConfig.prototype.traceDurationMs = 0;\n\n            /**\n             * DataSourceConfig ftraceConfig.\n             * @member {perfetto.protos.IFtraceConfig|null|undefined} ftraceConfig\n             * @memberof perfetto.protos.DataSourceConfig\n             * @instance\n             */\n            DataSourceConfig.prototype.ftraceConfig = null;\n\n            /**\n             * DataSourceConfig chromeConfig.\n             * @member {perfetto.protos.IChromeConfig|null|undefined} chromeConfig\n             * @memberof perfetto.protos.DataSourceConfig\n             * @instance\n             */\n            DataSourceConfig.prototype.chromeConfig = null;\n\n            /**\n             * DataSourceConfig inodeFileConfig.\n             * @member {perfetto.protos.IInodeFileConfig|null|undefined} inodeFileConfig\n             * @memberof perfetto.protos.DataSourceConfig\n             * @instance\n             */\n            DataSourceConfig.prototype.inodeFileConfig = null;\n\n            /**\n             * DataSourceConfig processStatsConfig.\n             * @member {perfetto.protos.IProcessStatsConfig|null|undefined} processStatsConfig\n             * @memberof perfetto.protos.DataSourceConfig\n             * @instance\n             */\n            DataSourceConfig.prototype.processStatsConfig = null;\n\n            /**\n             * DataSourceConfig legacyConfig.\n             * @member {string} legacyConfig\n             * @memberof perfetto.protos.DataSourceConfig\n             * @instance\n             */\n            DataSourceConfig.prototype.legacyConfig = \"\";\n\n            /**\n             * DataSourceConfig forTesting.\n             * @member {perfetto.protos.ITestConfig|null|undefined} forTesting\n             * @memberof perfetto.protos.DataSourceConfig\n             * @instance\n             */\n            DataSourceConfig.prototype.forTesting = null;\n\n            /**\n             * Creates a new DataSourceConfig instance using the specified properties.\n             * @function create\n             * @memberof perfetto.protos.DataSourceConfig\n             * @static\n             * @param {perfetto.protos.IDataSourceConfig=} [properties] Properties to set\n             * @returns {perfetto.protos.DataSourceConfig} DataSourceConfig instance\n             */\n            DataSourceConfig.create = function create(properties) {\n                return new DataSourceConfig(properties);\n            };\n\n            /**\n             * Encodes the specified DataSourceConfig message. Does not implicitly {@link perfetto.protos.DataSourceConfig.verify|verify} messages.\n             * @function encode\n             * @memberof perfetto.protos.DataSourceConfig\n             * @static\n             * @param {perfetto.protos.IDataSourceConfig} message DataSourceConfig message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            DataSourceConfig.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.name != null && message.hasOwnProperty(\"name\"))\n                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);\n                if (message.targetBuffer != null && message.hasOwnProperty(\"targetBuffer\"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.targetBuffer);\n                if (message.traceDurationMs != null && message.hasOwnProperty(\"traceDurationMs\"))\n                    writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.traceDurationMs);\n                if (message.ftraceConfig != null && message.hasOwnProperty(\"ftraceConfig\"))\n                    $root.perfetto.protos.FtraceConfig.encode(message.ftraceConfig, writer.uint32(/* id 100, wireType 2 =*/802).fork()).ldelim();\n                if (message.chromeConfig != null && message.hasOwnProperty(\"chromeConfig\"))\n                    $root.perfetto.protos.ChromeConfig.encode(message.chromeConfig, writer.uint32(/* id 101, wireType 2 =*/810).fork()).ldelim();\n                if (message.inodeFileConfig != null && message.hasOwnProperty(\"inodeFileConfig\"))\n                    $root.perfetto.protos.InodeFileConfig.encode(message.inodeFileConfig, writer.uint32(/* id 102, wireType 2 =*/818).fork()).ldelim();\n                if (message.processStatsConfig != null && message.hasOwnProperty(\"processStatsConfig\"))\n                    $root.perfetto.protos.ProcessStatsConfig.encode(message.processStatsConfig, writer.uint32(/* id 103, wireType 2 =*/826).fork()).ldelim();\n                if (message.legacyConfig != null && message.hasOwnProperty(\"legacyConfig\"))\n                    writer.uint32(/* id 1000, wireType 2 =*/8002).string(message.legacyConfig);\n                if (message.forTesting != null && message.hasOwnProperty(\"forTesting\"))\n                    $root.perfetto.protos.TestConfig.encode(message.forTesting, writer.uint32(/* id 536870911, wireType 2 =*/4294967290).fork()).ldelim();\n                return writer;\n            };\n\n            /**\n             * Encodes the specified DataSourceConfig message, length delimited. Does not implicitly {@link perfetto.protos.DataSourceConfig.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof perfetto.protos.DataSourceConfig\n             * @static\n             * @param {perfetto.protos.IDataSourceConfig} message DataSourceConfig message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            DataSourceConfig.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a DataSourceConfig message from the specified reader or buffer.\n             * @function decode\n             * @memberof perfetto.protos.DataSourceConfig\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {perfetto.protos.DataSourceConfig} DataSourceConfig\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            DataSourceConfig.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.DataSourceConfig();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.name = reader.string();\n                        break;\n                    case 2:\n                        message.targetBuffer = reader.uint32();\n                        break;\n                    case 3:\n                        message.traceDurationMs = reader.uint32();\n                        break;\n                    case 100:\n                        message.ftraceConfig = $root.perfetto.protos.FtraceConfig.decode(reader, reader.uint32());\n                        break;\n                    case 101:\n                        message.chromeConfig = $root.perfetto.protos.ChromeConfig.decode(reader, reader.uint32());\n                        break;\n                    case 102:\n                        message.inodeFileConfig = $root.perfetto.protos.InodeFileConfig.decode(reader, reader.uint32());\n                        break;\n                    case 103:\n                        message.processStatsConfig = $root.perfetto.protos.ProcessStatsConfig.decode(reader, reader.uint32());\n                        break;\n                    case 1000:\n                        message.legacyConfig = reader.string();\n                        break;\n                    case 536870911:\n                        message.forTesting = $root.perfetto.protos.TestConfig.decode(reader, reader.uint32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a DataSourceConfig message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof perfetto.protos.DataSourceConfig\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {perfetto.protos.DataSourceConfig} DataSourceConfig\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            DataSourceConfig.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a DataSourceConfig message.\n             * @function verify\n             * @memberof perfetto.protos.DataSourceConfig\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            DataSourceConfig.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.name != null && message.hasOwnProperty(\"name\"))\n                    if (!$util.isString(message.name))\n                        return \"name: string expected\";\n                if (message.targetBuffer != null && message.hasOwnProperty(\"targetBuffer\"))\n                    if (!$util.isInteger(message.targetBuffer))\n                        return \"targetBuffer: integer expected\";\n                if (message.traceDurationMs != null && message.hasOwnProperty(\"traceDurationMs\"))\n                    if (!$util.isInteger(message.traceDurationMs))\n                        return \"traceDurationMs: integer expected\";\n                if (message.ftraceConfig != null && message.hasOwnProperty(\"ftraceConfig\")) {\n                    var error = $root.perfetto.protos.FtraceConfig.verify(message.ftraceConfig);\n                    if (error)\n                        return \"ftraceConfig.\" + error;\n                }\n                if (message.chromeConfig != null && message.hasOwnProperty(\"chromeConfig\")) {\n                    var error = $root.perfetto.protos.ChromeConfig.verify(message.chromeConfig);\n                    if (error)\n                        return \"chromeConfig.\" + error;\n                }\n                if (message.inodeFileConfig != null && message.hasOwnProperty(\"inodeFileConfig\")) {\n                    var error = $root.perfetto.protos.InodeFileConfig.verify(message.inodeFileConfig);\n                    if (error)\n                        return \"inodeFileConfig.\" + error;\n                }\n                if (message.processStatsConfig != null && message.hasOwnProperty(\"processStatsConfig\")) {\n                    var error = $root.perfetto.protos.ProcessStatsConfig.verify(message.processStatsConfig);\n                    if (error)\n                        return \"processStatsConfig.\" + error;\n                }\n                if (message.legacyConfig != null && message.hasOwnProperty(\"legacyConfig\"))\n                    if (!$util.isString(message.legacyConfig))\n                        return \"legacyConfig: string expected\";\n                if (message.forTesting != null && message.hasOwnProperty(\"forTesting\")) {\n                    var error = $root.perfetto.protos.TestConfig.verify(message.forTesting);\n                    if (error)\n                        return \"forTesting.\" + error;\n                }\n                return null;\n            };\n\n            /**\n             * Creates a DataSourceConfig message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof perfetto.protos.DataSourceConfig\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {perfetto.protos.DataSourceConfig} DataSourceConfig\n             */\n            DataSourceConfig.fromObject = function fromObject(object) {\n                if (object instanceof $root.perfetto.protos.DataSourceConfig)\n                    return object;\n                var message = new $root.perfetto.protos.DataSourceConfig();\n                if (object.name != null)\n                    message.name = String(object.name);\n                if (object.targetBuffer != null)\n                    message.targetBuffer = object.targetBuffer >>> 0;\n                if (object.traceDurationMs != null)\n                    message.traceDurationMs = object.traceDurationMs >>> 0;\n                if (object.ftraceConfig != null) {\n                    if (typeof object.ftraceConfig !== \"object\")\n                        throw TypeError(\".perfetto.protos.DataSourceConfig.ftraceConfig: object expected\");\n                    message.ftraceConfig = $root.perfetto.protos.FtraceConfig.fromObject(object.ftraceConfig);\n                }\n                if (object.chromeConfig != null) {\n                    if (typeof object.chromeConfig !== \"object\")\n                        throw TypeError(\".perfetto.protos.DataSourceConfig.chromeConfig: object expected\");\n                    message.chromeConfig = $root.perfetto.protos.ChromeConfig.fromObject(object.chromeConfig);\n                }\n                if (object.inodeFileConfig != null) {\n                    if (typeof object.inodeFileConfig !== \"object\")\n                        throw TypeError(\".perfetto.protos.DataSourceConfig.inodeFileConfig: object expected\");\n                    message.inodeFileConfig = $root.perfetto.protos.InodeFileConfig.fromObject(object.inodeFileConfig);\n                }\n                if (object.processStatsConfig != null) {\n                    if (typeof object.processStatsConfig !== \"object\")\n                        throw TypeError(\".perfetto.protos.DataSourceConfig.processStatsConfig: object expected\");\n                    message.processStatsConfig = $root.perfetto.protos.ProcessStatsConfig.fromObject(object.processStatsConfig);\n                }\n                if (object.legacyConfig != null)\n                    message.legacyConfig = String(object.legacyConfig);\n                if (object.forTesting != null) {\n                    if (typeof object.forTesting !== \"object\")\n                        throw TypeError(\".perfetto.protos.DataSourceConfig.forTesting: object expected\");\n                    message.forTesting = $root.perfetto.protos.TestConfig.fromObject(object.forTesting);\n                }\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a DataSourceConfig message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof perfetto.protos.DataSourceConfig\n             * @static\n             * @param {perfetto.protos.DataSourceConfig} message DataSourceConfig\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            DataSourceConfig.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.name = \"\";\n                    object.targetBuffer = 0;\n                    object.traceDurationMs = 0;\n                    object.ftraceConfig = null;\n                    object.chromeConfig = null;\n                    object.inodeFileConfig = null;\n                    object.processStatsConfig = null;\n                    object.legacyConfig = \"\";\n                    object.forTesting = null;\n                }\n                if (message.name != null && message.hasOwnProperty(\"name\"))\n                    object.name = message.name;\n                if (message.targetBuffer != null && message.hasOwnProperty(\"targetBuffer\"))\n                    object.targetBuffer = message.targetBuffer;\n                if (message.traceDurationMs != null && message.hasOwnProperty(\"traceDurationMs\"))\n                    object.traceDurationMs = message.traceDurationMs;\n                if (message.ftraceConfig != null && message.hasOwnProperty(\"ftraceConfig\"))\n                    object.ftraceConfig = $root.perfetto.protos.FtraceConfig.toObject(message.ftraceConfig, options);\n                if (message.chromeConfig != null && message.hasOwnProperty(\"chromeConfig\"))\n                    object.chromeConfig = $root.perfetto.protos.ChromeConfig.toObject(message.chromeConfig, options);\n                if (message.inodeFileConfig != null && message.hasOwnProperty(\"inodeFileConfig\"))\n                    object.inodeFileConfig = $root.perfetto.protos.InodeFileConfig.toObject(message.inodeFileConfig, options);\n                if (message.processStatsConfig != null && message.hasOwnProperty(\"processStatsConfig\"))\n                    object.processStatsConfig = $root.perfetto.protos.ProcessStatsConfig.toObject(message.processStatsConfig, options);\n                if (message.legacyConfig != null && message.hasOwnProperty(\"legacyConfig\"))\n                    object.legacyConfig = message.legacyConfig;\n                if (message.forTesting != null && message.hasOwnProperty(\"forTesting\"))\n                    object.forTesting = $root.perfetto.protos.TestConfig.toObject(message.forTesting, options);\n                return object;\n            };\n\n            /**\n             * Converts this DataSourceConfig to JSON.\n             * @function toJSON\n             * @memberof perfetto.protos.DataSourceConfig\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            DataSourceConfig.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return DataSourceConfig;\n        })();\n\n        protos.FtraceConfig = (function() {\n\n            /**\n             * Properties of a FtraceConfig.\n             * @memberof perfetto.protos\n             * @interface IFtraceConfig\n             * @property {Array.<string>|null} [ftraceEvents] FtraceConfig ftraceEvents\n             * @property {Array.<string>|null} [atraceCategories] FtraceConfig atraceCategories\n             * @property {Array.<string>|null} [atraceApps] FtraceConfig atraceApps\n             * @property {number|null} [bufferSizeKb] FtraceConfig bufferSizeKb\n             * @property {number|null} [drainPeriodMs] FtraceConfig drainPeriodMs\n             */\n\n            /**\n             * Constructs a new FtraceConfig.\n             * @memberof perfetto.protos\n             * @classdesc Represents a FtraceConfig.\n             * @implements IFtraceConfig\n             * @constructor\n             * @param {perfetto.protos.IFtraceConfig=} [properties] Properties to set\n             */\n            function FtraceConfig(properties) {\n                this.ftraceEvents = [];\n                this.atraceCategories = [];\n                this.atraceApps = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * FtraceConfig ftraceEvents.\n             * @member {Array.<string>} ftraceEvents\n             * @memberof perfetto.protos.FtraceConfig\n             * @instance\n             */\n            FtraceConfig.prototype.ftraceEvents = $util.emptyArray;\n\n            /**\n             * FtraceConfig atraceCategories.\n             * @member {Array.<string>} atraceCategories\n             * @memberof perfetto.protos.FtraceConfig\n             * @instance\n             */\n            FtraceConfig.prototype.atraceCategories = $util.emptyArray;\n\n            /**\n             * FtraceConfig atraceApps.\n             * @member {Array.<string>} atraceApps\n             * @memberof perfetto.protos.FtraceConfig\n             * @instance\n             */\n            FtraceConfig.prototype.atraceApps = $util.emptyArray;\n\n            /**\n             * FtraceConfig bufferSizeKb.\n             * @member {number} bufferSizeKb\n             * @memberof perfetto.protos.FtraceConfig\n             * @instance\n             */\n            FtraceConfig.prototype.bufferSizeKb = 0;\n\n            /**\n             * FtraceConfig drainPeriodMs.\n             * @member {number} drainPeriodMs\n             * @memberof perfetto.protos.FtraceConfig\n             * @instance\n             */\n            FtraceConfig.prototype.drainPeriodMs = 0;\n\n            /**\n             * Creates a new FtraceConfig instance using the specified properties.\n             * @function create\n             * @memberof perfetto.protos.FtraceConfig\n             * @static\n             * @param {perfetto.protos.IFtraceConfig=} [properties] Properties to set\n             * @returns {perfetto.protos.FtraceConfig} FtraceConfig instance\n             */\n            FtraceConfig.create = function create(properties) {\n                return new FtraceConfig(properties);\n            };\n\n            /**\n             * Encodes the specified FtraceConfig message. Does not implicitly {@link perfetto.protos.FtraceConfig.verify|verify} messages.\n             * @function encode\n             * @memberof perfetto.protos.FtraceConfig\n             * @static\n             * @param {perfetto.protos.IFtraceConfig} message FtraceConfig message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            FtraceConfig.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.ftraceEvents != null && message.ftraceEvents.length)\n                    for (var i = 0; i < message.ftraceEvents.length; ++i)\n                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.ftraceEvents[i]);\n                if (message.atraceCategories != null && message.atraceCategories.length)\n                    for (var i = 0; i < message.atraceCategories.length; ++i)\n                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.atraceCategories[i]);\n                if (message.atraceApps != null && message.atraceApps.length)\n                    for (var i = 0; i < message.atraceApps.length; ++i)\n                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.atraceApps[i]);\n                if (message.bufferSizeKb != null && message.hasOwnProperty(\"bufferSizeKb\"))\n                    writer.uint32(/* id 10, wireType 0 =*/80).uint32(message.bufferSizeKb);\n                if (message.drainPeriodMs != null && message.hasOwnProperty(\"drainPeriodMs\"))\n                    writer.uint32(/* id 11, wireType 0 =*/88).uint32(message.drainPeriodMs);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified FtraceConfig message, length delimited. Does not implicitly {@link perfetto.protos.FtraceConfig.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof perfetto.protos.FtraceConfig\n             * @static\n             * @param {perfetto.protos.IFtraceConfig} message FtraceConfig message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            FtraceConfig.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a FtraceConfig message from the specified reader or buffer.\n             * @function decode\n             * @memberof perfetto.protos.FtraceConfig\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {perfetto.protos.FtraceConfig} FtraceConfig\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            FtraceConfig.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.FtraceConfig();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        if (!(message.ftraceEvents && message.ftraceEvents.length))\n                            message.ftraceEvents = [];\n                        message.ftraceEvents.push(reader.string());\n                        break;\n                    case 2:\n                        if (!(message.atraceCategories && message.atraceCategories.length))\n                            message.atraceCategories = [];\n                        message.atraceCategories.push(reader.string());\n                        break;\n                    case 3:\n                        if (!(message.atraceApps && message.atraceApps.length))\n                            message.atraceApps = [];\n                        message.atraceApps.push(reader.string());\n                        break;\n                    case 10:\n                        message.bufferSizeKb = reader.uint32();\n                        break;\n                    case 11:\n                        message.drainPeriodMs = reader.uint32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a FtraceConfig message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof perfetto.protos.FtraceConfig\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {perfetto.protos.FtraceConfig} FtraceConfig\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            FtraceConfig.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a FtraceConfig message.\n             * @function verify\n             * @memberof perfetto.protos.FtraceConfig\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            FtraceConfig.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.ftraceEvents != null && message.hasOwnProperty(\"ftraceEvents\")) {\n                    if (!Array.isArray(message.ftraceEvents))\n                        return \"ftraceEvents: array expected\";\n                    for (var i = 0; i < message.ftraceEvents.length; ++i)\n                        if (!$util.isString(message.ftraceEvents[i]))\n                            return \"ftraceEvents: string[] expected\";\n                }\n                if (message.atraceCategories != null && message.hasOwnProperty(\"atraceCategories\")) {\n                    if (!Array.isArray(message.atraceCategories))\n                        return \"atraceCategories: array expected\";\n                    for (var i = 0; i < message.atraceCategories.length; ++i)\n                        if (!$util.isString(message.atraceCategories[i]))\n                            return \"atraceCategories: string[] expected\";\n                }\n                if (message.atraceApps != null && message.hasOwnProperty(\"atraceApps\")) {\n                    if (!Array.isArray(message.atraceApps))\n                        return \"atraceApps: array expected\";\n                    for (var i = 0; i < message.atraceApps.length; ++i)\n                        if (!$util.isString(message.atraceApps[i]))\n                            return \"atraceApps: string[] expected\";\n                }\n                if (message.bufferSizeKb != null && message.hasOwnProperty(\"bufferSizeKb\"))\n                    if (!$util.isInteger(message.bufferSizeKb))\n                        return \"bufferSizeKb: integer expected\";\n                if (message.drainPeriodMs != null && message.hasOwnProperty(\"drainPeriodMs\"))\n                    if (!$util.isInteger(message.drainPeriodMs))\n                        return \"drainPeriodMs: integer expected\";\n                return null;\n            };\n\n            /**\n             * Creates a FtraceConfig message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof perfetto.protos.FtraceConfig\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {perfetto.protos.FtraceConfig} FtraceConfig\n             */\n            FtraceConfig.fromObject = function fromObject(object) {\n                if (object instanceof $root.perfetto.protos.FtraceConfig)\n                    return object;\n                var message = new $root.perfetto.protos.FtraceConfig();\n                if (object.ftraceEvents) {\n                    if (!Array.isArray(object.ftraceEvents))\n                        throw TypeError(\".perfetto.protos.FtraceConfig.ftraceEvents: array expected\");\n                    message.ftraceEvents = [];\n                    for (var i = 0; i < object.ftraceEvents.length; ++i)\n                        message.ftraceEvents[i] = String(object.ftraceEvents[i]);\n                }\n                if (object.atraceCategories) {\n                    if (!Array.isArray(object.atraceCategories))\n                        throw TypeError(\".perfetto.protos.FtraceConfig.atraceCategories: array expected\");\n                    message.atraceCategories = [];\n                    for (var i = 0; i < object.atraceCategories.length; ++i)\n                        message.atraceCategories[i] = String(object.atraceCategories[i]);\n                }\n                if (object.atraceApps) {\n                    if (!Array.isArray(object.atraceApps))\n                        throw TypeError(\".perfetto.protos.FtraceConfig.atraceApps: array expected\");\n                    message.atraceApps = [];\n                    for (var i = 0; i < object.atraceApps.length; ++i)\n                        message.atraceApps[i] = String(object.atraceApps[i]);\n                }\n                if (object.bufferSizeKb != null)\n                    message.bufferSizeKb = object.bufferSizeKb >>> 0;\n                if (object.drainPeriodMs != null)\n                    message.drainPeriodMs = object.drainPeriodMs >>> 0;\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a FtraceConfig message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof perfetto.protos.FtraceConfig\n             * @static\n             * @param {perfetto.protos.FtraceConfig} message FtraceConfig\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            FtraceConfig.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults) {\n                    object.ftraceEvents = [];\n                    object.atraceCategories = [];\n                    object.atraceApps = [];\n                }\n                if (options.defaults) {\n                    object.bufferSizeKb = 0;\n                    object.drainPeriodMs = 0;\n                }\n                if (message.ftraceEvents && message.ftraceEvents.length) {\n                    object.ftraceEvents = [];\n                    for (var j = 0; j < message.ftraceEvents.length; ++j)\n                        object.ftraceEvents[j] = message.ftraceEvents[j];\n                }\n                if (message.atraceCategories && message.atraceCategories.length) {\n                    object.atraceCategories = [];\n                    for (var j = 0; j < message.atraceCategories.length; ++j)\n                        object.atraceCategories[j] = message.atraceCategories[j];\n                }\n                if (message.atraceApps && message.atraceApps.length) {\n                    object.atraceApps = [];\n                    for (var j = 0; j < message.atraceApps.length; ++j)\n                        object.atraceApps[j] = message.atraceApps[j];\n                }\n                if (message.bufferSizeKb != null && message.hasOwnProperty(\"bufferSizeKb\"))\n                    object.bufferSizeKb = message.bufferSizeKb;\n                if (message.drainPeriodMs != null && message.hasOwnProperty(\"drainPeriodMs\"))\n                    object.drainPeriodMs = message.drainPeriodMs;\n                return object;\n            };\n\n            /**\n             * Converts this FtraceConfig to JSON.\n             * @function toJSON\n             * @memberof perfetto.protos.FtraceConfig\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            FtraceConfig.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return FtraceConfig;\n        })();\n\n        protos.TestConfig = (function() {\n\n            /**\n             * Properties of a TestConfig.\n             * @memberof perfetto.protos\n             * @interface ITestConfig\n             * @property {number|null} [messageCount] TestConfig messageCount\n             * @property {number|null} [maxMessagesPerSecond] TestConfig maxMessagesPerSecond\n             * @property {number|null} [seed] TestConfig seed\n             * @property {number|null} [messageSize] TestConfig messageSize\n             * @property {boolean|null} [sendBatchOnRegister] TestConfig sendBatchOnRegister\n             */\n\n            /**\n             * Constructs a new TestConfig.\n             * @memberof perfetto.protos\n             * @classdesc Represents a TestConfig.\n             * @implements ITestConfig\n             * @constructor\n             * @param {perfetto.protos.ITestConfig=} [properties] Properties to set\n             */\n            function TestConfig(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * TestConfig messageCount.\n             * @member {number} messageCount\n             * @memberof perfetto.protos.TestConfig\n             * @instance\n             */\n            TestConfig.prototype.messageCount = 0;\n\n            /**\n             * TestConfig maxMessagesPerSecond.\n             * @member {number} maxMessagesPerSecond\n             * @memberof perfetto.protos.TestConfig\n             * @instance\n             */\n            TestConfig.prototype.maxMessagesPerSecond = 0;\n\n            /**\n             * TestConfig seed.\n             * @member {number} seed\n             * @memberof perfetto.protos.TestConfig\n             * @instance\n             */\n            TestConfig.prototype.seed = 0;\n\n            /**\n             * TestConfig messageSize.\n             * @member {number} messageSize\n             * @memberof perfetto.protos.TestConfig\n             * @instance\n             */\n            TestConfig.prototype.messageSize = 0;\n\n            /**\n             * TestConfig sendBatchOnRegister.\n             * @member {boolean} sendBatchOnRegister\n             * @memberof perfetto.protos.TestConfig\n             * @instance\n             */\n            TestConfig.prototype.sendBatchOnRegister = false;\n\n            /**\n             * Creates a new TestConfig instance using the specified properties.\n             * @function create\n             * @memberof perfetto.protos.TestConfig\n             * @static\n             * @param {perfetto.protos.ITestConfig=} [properties] Properties to set\n             * @returns {perfetto.protos.TestConfig} TestConfig instance\n             */\n            TestConfig.create = function create(properties) {\n                return new TestConfig(properties);\n            };\n\n            /**\n             * Encodes the specified TestConfig message. Does not implicitly {@link perfetto.protos.TestConfig.verify|verify} messages.\n             * @function encode\n             * @memberof perfetto.protos.TestConfig\n             * @static\n             * @param {perfetto.protos.ITestConfig} message TestConfig message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            TestConfig.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.messageCount != null && message.hasOwnProperty(\"messageCount\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.messageCount);\n                if (message.maxMessagesPerSecond != null && message.hasOwnProperty(\"maxMessagesPerSecond\"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.maxMessagesPerSecond);\n                if (message.seed != null && message.hasOwnProperty(\"seed\"))\n                    writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.seed);\n                if (message.messageSize != null && message.hasOwnProperty(\"messageSize\"))\n                    writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.messageSize);\n                if (message.sendBatchOnRegister != null && message.hasOwnProperty(\"sendBatchOnRegister\"))\n                    writer.uint32(/* id 5, wireType 0 =*/40).bool(message.sendBatchOnRegister);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified TestConfig message, length delimited. Does not implicitly {@link perfetto.protos.TestConfig.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof perfetto.protos.TestConfig\n             * @static\n             * @param {perfetto.protos.ITestConfig} message TestConfig message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            TestConfig.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a TestConfig message from the specified reader or buffer.\n             * @function decode\n             * @memberof perfetto.protos.TestConfig\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {perfetto.protos.TestConfig} TestConfig\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            TestConfig.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.TestConfig();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.messageCount = reader.uint32();\n                        break;\n                    case 2:\n                        message.maxMessagesPerSecond = reader.uint32();\n                        break;\n                    case 3:\n                        message.seed = reader.uint32();\n                        break;\n                    case 4:\n                        message.messageSize = reader.uint32();\n                        break;\n                    case 5:\n                        message.sendBatchOnRegister = reader.bool();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a TestConfig message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof perfetto.protos.TestConfig\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {perfetto.protos.TestConfig} TestConfig\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            TestConfig.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a TestConfig message.\n             * @function verify\n             * @memberof perfetto.protos.TestConfig\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            TestConfig.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.messageCount != null && message.hasOwnProperty(\"messageCount\"))\n                    if (!$util.isInteger(message.messageCount))\n                        return \"messageCount: integer expected\";\n                if (message.maxMessagesPerSecond != null && message.hasOwnProperty(\"maxMessagesPerSecond\"))\n                    if (!$util.isInteger(message.maxMessagesPerSecond))\n                        return \"maxMessagesPerSecond: integer expected\";\n                if (message.seed != null && message.hasOwnProperty(\"seed\"))\n                    if (!$util.isInteger(message.seed))\n                        return \"seed: integer expected\";\n                if (message.messageSize != null && message.hasOwnProperty(\"messageSize\"))\n                    if (!$util.isInteger(message.messageSize))\n                        return \"messageSize: integer expected\";\n                if (message.sendBatchOnRegister != null && message.hasOwnProperty(\"sendBatchOnRegister\"))\n                    if (typeof message.sendBatchOnRegister !== \"boolean\")\n                        return \"sendBatchOnRegister: boolean expected\";\n                return null;\n            };\n\n            /**\n             * Creates a TestConfig message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof perfetto.protos.TestConfig\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {perfetto.protos.TestConfig} TestConfig\n             */\n            TestConfig.fromObject = function fromObject(object) {\n                if (object instanceof $root.perfetto.protos.TestConfig)\n                    return object;\n                var message = new $root.perfetto.protos.TestConfig();\n                if (object.messageCount != null)\n                    message.messageCount = object.messageCount >>> 0;\n                if (object.maxMessagesPerSecond != null)\n                    message.maxMessagesPerSecond = object.maxMessagesPerSecond >>> 0;\n                if (object.seed != null)\n                    message.seed = object.seed >>> 0;\n                if (object.messageSize != null)\n                    message.messageSize = object.messageSize >>> 0;\n                if (object.sendBatchOnRegister != null)\n                    message.sendBatchOnRegister = Boolean(object.sendBatchOnRegister);\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a TestConfig message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof perfetto.protos.TestConfig\n             * @static\n             * @param {perfetto.protos.TestConfig} message TestConfig\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            TestConfig.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.messageCount = 0;\n                    object.maxMessagesPerSecond = 0;\n                    object.seed = 0;\n                    object.messageSize = 0;\n                    object.sendBatchOnRegister = false;\n                }\n                if (message.messageCount != null && message.hasOwnProperty(\"messageCount\"))\n                    object.messageCount = message.messageCount;\n                if (message.maxMessagesPerSecond != null && message.hasOwnProperty(\"maxMessagesPerSecond\"))\n                    object.maxMessagesPerSecond = message.maxMessagesPerSecond;\n                if (message.seed != null && message.hasOwnProperty(\"seed\"))\n                    object.seed = message.seed;\n                if (message.messageSize != null && message.hasOwnProperty(\"messageSize\"))\n                    object.messageSize = message.messageSize;\n                if (message.sendBatchOnRegister != null && message.hasOwnProperty(\"sendBatchOnRegister\"))\n                    object.sendBatchOnRegister = message.sendBatchOnRegister;\n                return object;\n            };\n\n            /**\n             * Converts this TestConfig to JSON.\n             * @function toJSON\n             * @memberof perfetto.protos.TestConfig\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            TestConfig.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return TestConfig;\n        })();\n\n        protos.TraceConfig = (function() {\n\n            /**\n             * Properties of a TraceConfig.\n             * @memberof perfetto.protos\n             * @interface ITraceConfig\n             * @property {Array.<perfetto.protos.TraceConfig.IBufferConfig>|null} [buffers] TraceConfig buffers\n             * @property {Array.<perfetto.protos.TraceConfig.IDataSource>|null} [dataSources] TraceConfig dataSources\n             * @property {number|null} [durationMs] TraceConfig durationMs\n             * @property {boolean|null} [enableExtraGuardrails] TraceConfig enableExtraGuardrails\n             * @property {perfetto.protos.TraceConfig.LockdownModeOperation|null} [lockdownMode] TraceConfig lockdownMode\n             * @property {Array.<perfetto.protos.TraceConfig.IProducerConfig>|null} [producers] TraceConfig producers\n             * @property {perfetto.protos.TraceConfig.IStatsdMetadata|null} [statsdMetadata] TraceConfig statsdMetadata\n             * @property {boolean|null} [writeIntoFile] TraceConfig writeIntoFile\n             * @property {number|null} [fileWritePeriodMs] TraceConfig fileWritePeriodMs\n             * @property {number|Long|null} [maxFileSizeBytes] TraceConfig maxFileSizeBytes\n             * @property {perfetto.protos.TraceConfig.IGuardrailOverrides|null} [guardrailOverrides] TraceConfig guardrailOverrides\n             */\n\n            /**\n             * Constructs a new TraceConfig.\n             * @memberof perfetto.protos\n             * @classdesc Represents a TraceConfig.\n             * @implements ITraceConfig\n             * @constructor\n             * @param {perfetto.protos.ITraceConfig=} [properties] Properties to set\n             */\n            function TraceConfig(properties) {\n                this.buffers = [];\n                this.dataSources = [];\n                this.producers = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * TraceConfig buffers.\n             * @member {Array.<perfetto.protos.TraceConfig.IBufferConfig>} buffers\n             * @memberof perfetto.protos.TraceConfig\n             * @instance\n             */\n            TraceConfig.prototype.buffers = $util.emptyArray;\n\n            /**\n             * TraceConfig dataSources.\n             * @member {Array.<perfetto.protos.TraceConfig.IDataSource>} dataSources\n             * @memberof perfetto.protos.TraceConfig\n             * @instance\n             */\n            TraceConfig.prototype.dataSources = $util.emptyArray;\n\n            /**\n             * TraceConfig durationMs.\n             * @member {number} durationMs\n             * @memberof perfetto.protos.TraceConfig\n             * @instance\n             */\n            TraceConfig.prototype.durationMs = 0;\n\n            /**\n             * TraceConfig enableExtraGuardrails.\n             * @member {boolean} enableExtraGuardrails\n             * @memberof perfetto.protos.TraceConfig\n             * @instance\n             */\n            TraceConfig.prototype.enableExtraGuardrails = false;\n\n            /**\n             * TraceConfig lockdownMode.\n             * @member {perfetto.protos.TraceConfig.LockdownModeOperation} lockdownMode\n             * @memberof perfetto.protos.TraceConfig\n             * @instance\n             */\n            TraceConfig.prototype.lockdownMode = 0;\n\n            /**\n             * TraceConfig producers.\n             * @member {Array.<perfetto.protos.TraceConfig.IProducerConfig>} producers\n             * @memberof perfetto.protos.TraceConfig\n             * @instance\n             */\n            TraceConfig.prototype.producers = $util.emptyArray;\n\n            /**\n             * TraceConfig statsdMetadata.\n             * @member {perfetto.protos.TraceConfig.IStatsdMetadata|null|undefined} statsdMetadata\n             * @memberof perfetto.protos.TraceConfig\n             * @instance\n             */\n            TraceConfig.prototype.statsdMetadata = null;\n\n            /**\n             * TraceConfig writeIntoFile.\n             * @member {boolean} writeIntoFile\n             * @memberof perfetto.protos.TraceConfig\n             * @instance\n             */\n            TraceConfig.prototype.writeIntoFile = false;\n\n            /**\n             * TraceConfig fileWritePeriodMs.\n             * @member {number} fileWritePeriodMs\n             * @memberof perfetto.protos.TraceConfig\n             * @instance\n             */\n            TraceConfig.prototype.fileWritePeriodMs = 0;\n\n            /**\n             * TraceConfig maxFileSizeBytes.\n             * @member {number|Long} maxFileSizeBytes\n             * @memberof perfetto.protos.TraceConfig\n             * @instance\n             */\n            TraceConfig.prototype.maxFileSizeBytes = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n            /**\n             * TraceConfig guardrailOverrides.\n             * @member {perfetto.protos.TraceConfig.IGuardrailOverrides|null|undefined} guardrailOverrides\n             * @memberof perfetto.protos.TraceConfig\n             * @instance\n             */\n            TraceConfig.prototype.guardrailOverrides = null;\n\n            /**\n             * Creates a new TraceConfig instance using the specified properties.\n             * @function create\n             * @memberof perfetto.protos.TraceConfig\n             * @static\n             * @param {perfetto.protos.ITraceConfig=} [properties] Properties to set\n             * @returns {perfetto.protos.TraceConfig} TraceConfig instance\n             */\n            TraceConfig.create = function create(properties) {\n                return new TraceConfig(properties);\n            };\n\n            /**\n             * Encodes the specified TraceConfig message. Does not implicitly {@link perfetto.protos.TraceConfig.verify|verify} messages.\n             * @function encode\n             * @memberof perfetto.protos.TraceConfig\n             * @static\n             * @param {perfetto.protos.ITraceConfig} message TraceConfig message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            TraceConfig.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.buffers != null && message.buffers.length)\n                    for (var i = 0; i < message.buffers.length; ++i)\n                        $root.perfetto.protos.TraceConfig.BufferConfig.encode(message.buffers[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                if (message.dataSources != null && message.dataSources.length)\n                    for (var i = 0; i < message.dataSources.length; ++i)\n                        $root.perfetto.protos.TraceConfig.DataSource.encode(message.dataSources[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                if (message.durationMs != null && message.hasOwnProperty(\"durationMs\"))\n                    writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.durationMs);\n                if (message.enableExtraGuardrails != null && message.hasOwnProperty(\"enableExtraGuardrails\"))\n                    writer.uint32(/* id 4, wireType 0 =*/32).bool(message.enableExtraGuardrails);\n                if (message.lockdownMode != null && message.hasOwnProperty(\"lockdownMode\"))\n                    writer.uint32(/* id 5, wireType 0 =*/40).int32(message.lockdownMode);\n                if (message.producers != null && message.producers.length)\n                    for (var i = 0; i < message.producers.length; ++i)\n                        $root.perfetto.protos.TraceConfig.ProducerConfig.encode(message.producers[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();\n                if (message.statsdMetadata != null && message.hasOwnProperty(\"statsdMetadata\"))\n                    $root.perfetto.protos.TraceConfig.StatsdMetadata.encode(message.statsdMetadata, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();\n                if (message.writeIntoFile != null && message.hasOwnProperty(\"writeIntoFile\"))\n                    writer.uint32(/* id 8, wireType 0 =*/64).bool(message.writeIntoFile);\n                if (message.fileWritePeriodMs != null && message.hasOwnProperty(\"fileWritePeriodMs\"))\n                    writer.uint32(/* id 9, wireType 0 =*/72).uint32(message.fileWritePeriodMs);\n                if (message.maxFileSizeBytes != null && message.hasOwnProperty(\"maxFileSizeBytes\"))\n                    writer.uint32(/* id 10, wireType 0 =*/80).uint64(message.maxFileSizeBytes);\n                if (message.guardrailOverrides != null && message.hasOwnProperty(\"guardrailOverrides\"))\n                    $root.perfetto.protos.TraceConfig.GuardrailOverrides.encode(message.guardrailOverrides, writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();\n                return writer;\n            };\n\n            /**\n             * Encodes the specified TraceConfig message, length delimited. Does not implicitly {@link perfetto.protos.TraceConfig.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof perfetto.protos.TraceConfig\n             * @static\n             * @param {perfetto.protos.ITraceConfig} message TraceConfig message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            TraceConfig.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a TraceConfig message from the specified reader or buffer.\n             * @function decode\n             * @memberof perfetto.protos.TraceConfig\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {perfetto.protos.TraceConfig} TraceConfig\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            TraceConfig.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.TraceConfig();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        if (!(message.buffers && message.buffers.length))\n                            message.buffers = [];\n                        message.buffers.push($root.perfetto.protos.TraceConfig.BufferConfig.decode(reader, reader.uint32()));\n                        break;\n                    case 2:\n                        if (!(message.dataSources && message.dataSources.length))\n                            message.dataSources = [];\n                        message.dataSources.push($root.perfetto.protos.TraceConfig.DataSource.decode(reader, reader.uint32()));\n                        break;\n                    case 3:\n                        message.durationMs = reader.uint32();\n                        break;\n                    case 4:\n                        message.enableExtraGuardrails = reader.bool();\n                        break;\n                    case 5:\n                        message.lockdownMode = reader.int32();\n                        break;\n                    case 6:\n                        if (!(message.producers && message.producers.length))\n                            message.producers = [];\n                        message.producers.push($root.perfetto.protos.TraceConfig.ProducerConfig.decode(reader, reader.uint32()));\n                        break;\n                    case 7:\n                        message.statsdMetadata = $root.perfetto.protos.TraceConfig.StatsdMetadata.decode(reader, reader.uint32());\n                        break;\n                    case 8:\n                        message.writeIntoFile = reader.bool();\n                        break;\n                    case 9:\n                        message.fileWritePeriodMs = reader.uint32();\n                        break;\n                    case 10:\n                        message.maxFileSizeBytes = reader.uint64();\n                        break;\n                    case 11:\n                        message.guardrailOverrides = $root.perfetto.protos.TraceConfig.GuardrailOverrides.decode(reader, reader.uint32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a TraceConfig message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof perfetto.protos.TraceConfig\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {perfetto.protos.TraceConfig} TraceConfig\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            TraceConfig.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a TraceConfig message.\n             * @function verify\n             * @memberof perfetto.protos.TraceConfig\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            TraceConfig.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.buffers != null && message.hasOwnProperty(\"buffers\")) {\n                    if (!Array.isArray(message.buffers))\n                        return \"buffers: array expected\";\n                    for (var i = 0; i < message.buffers.length; ++i) {\n                        var error = $root.perfetto.protos.TraceConfig.BufferConfig.verify(message.buffers[i]);\n                        if (error)\n                            return \"buffers.\" + error;\n                    }\n                }\n                if (message.dataSources != null && message.hasOwnProperty(\"dataSources\")) {\n                    if (!Array.isArray(message.dataSources))\n                        return \"dataSources: array expected\";\n                    for (var i = 0; i < message.dataSources.length; ++i) {\n                        var error = $root.perfetto.protos.TraceConfig.DataSource.verify(message.dataSources[i]);\n                        if (error)\n                            return \"dataSources.\" + error;\n                    }\n                }\n                if (message.durationMs != null && message.hasOwnProperty(\"durationMs\"))\n                    if (!$util.isInteger(message.durationMs))\n                        return \"durationMs: integer expected\";\n                if (message.enableExtraGuardrails != null && message.hasOwnProperty(\"enableExtraGuardrails\"))\n                    if (typeof message.enableExtraGuardrails !== \"boolean\")\n                        return \"enableExtraGuardrails: boolean expected\";\n                if (message.lockdownMode != null && message.hasOwnProperty(\"lockdownMode\"))\n                    switch (message.lockdownMode) {\n                    default:\n                        return \"lockdownMode: enum value expected\";\n                    case 0:\n                    case 1:\n                    case 2:\n                        break;\n                    }\n                if (message.producers != null && message.hasOwnProperty(\"producers\")) {\n                    if (!Array.isArray(message.producers))\n                        return \"producers: array expected\";\n                    for (var i = 0; i < message.producers.length; ++i) {\n                        var error = $root.perfetto.protos.TraceConfig.ProducerConfig.verify(message.producers[i]);\n                        if (error)\n                            return \"producers.\" + error;\n                    }\n                }\n                if (message.statsdMetadata != null && message.hasOwnProperty(\"statsdMetadata\")) {\n                    var error = $root.perfetto.protos.TraceConfig.StatsdMetadata.verify(message.statsdMetadata);\n                    if (error)\n                        return \"statsdMetadata.\" + error;\n                }\n                if (message.writeIntoFile != null && message.hasOwnProperty(\"writeIntoFile\"))\n                    if (typeof message.writeIntoFile !== \"boolean\")\n                        return \"writeIntoFile: boolean expected\";\n                if (message.fileWritePeriodMs != null && message.hasOwnProperty(\"fileWritePeriodMs\"))\n                    if (!$util.isInteger(message.fileWritePeriodMs))\n                        return \"fileWritePeriodMs: integer expected\";\n                if (message.maxFileSizeBytes != null && message.hasOwnProperty(\"maxFileSizeBytes\"))\n                    if (!$util.isInteger(message.maxFileSizeBytes) && !(message.maxFileSizeBytes && $util.isInteger(message.maxFileSizeBytes.low) && $util.isInteger(message.maxFileSizeBytes.high)))\n                        return \"maxFileSizeBytes: integer|Long expected\";\n                if (message.guardrailOverrides != null && message.hasOwnProperty(\"guardrailOverrides\")) {\n                    var error = $root.perfetto.protos.TraceConfig.GuardrailOverrides.verify(message.guardrailOverrides);\n                    if (error)\n                        return \"guardrailOverrides.\" + error;\n                }\n                return null;\n            };\n\n            /**\n             * Creates a TraceConfig message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof perfetto.protos.TraceConfig\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {perfetto.protos.TraceConfig} TraceConfig\n             */\n            TraceConfig.fromObject = function fromObject(object) {\n                if (object instanceof $root.perfetto.protos.TraceConfig)\n                    return object;\n                var message = new $root.perfetto.protos.TraceConfig();\n                if (object.buffers) {\n                    if (!Array.isArray(object.buffers))\n                        throw TypeError(\".perfetto.protos.TraceConfig.buffers: array expected\");\n                    message.buffers = [];\n                    for (var i = 0; i < object.buffers.length; ++i) {\n                        if (typeof object.buffers[i] !== \"object\")\n                            throw TypeError(\".perfetto.protos.TraceConfig.buffers: object expected\");\n                        message.buffers[i] = $root.perfetto.protos.TraceConfig.BufferConfig.fromObject(object.buffers[i]);\n                    }\n                }\n                if (object.dataSources) {\n                    if (!Array.isArray(object.dataSources))\n                        throw TypeError(\".perfetto.protos.TraceConfig.dataSources: array expected\");\n                    message.dataSources = [];\n                    for (var i = 0; i < object.dataSources.length; ++i) {\n                        if (typeof object.dataSources[i] !== \"object\")\n                            throw TypeError(\".perfetto.protos.TraceConfig.dataSources: object expected\");\n                        message.dataSources[i] = $root.perfetto.protos.TraceConfig.DataSource.fromObject(object.dataSources[i]);\n                    }\n                }\n                if (object.durationMs != null)\n                    message.durationMs = object.durationMs >>> 0;\n                if (object.enableExtraGuardrails != null)\n                    message.enableExtraGuardrails = Boolean(object.enableExtraGuardrails);\n                switch (object.lockdownMode) {\n                case \"LOCKDOWN_UNCHANGED\":\n                case 0:\n                    message.lockdownMode = 0;\n                    break;\n                case \"LOCKDOWN_CLEAR\":\n                case 1:\n                    message.lockdownMode = 1;\n                    break;\n                case \"LOCKDOWN_SET\":\n                case 2:\n                    message.lockdownMode = 2;\n                    break;\n                }\n                if (object.producers) {\n                    if (!Array.isArray(object.producers))\n                        throw TypeError(\".perfetto.protos.TraceConfig.producers: array expected\");\n                    message.producers = [];\n                    for (var i = 0; i < object.producers.length; ++i) {\n                        if (typeof object.producers[i] !== \"object\")\n                            throw TypeError(\".perfetto.protos.TraceConfig.producers: object expected\");\n                        message.producers[i] = $root.perfetto.protos.TraceConfig.ProducerConfig.fromObject(object.producers[i]);\n                    }\n                }\n                if (object.statsdMetadata != null) {\n                    if (typeof object.statsdMetadata !== \"object\")\n                        throw TypeError(\".perfetto.protos.TraceConfig.statsdMetadata: object expected\");\n                    message.statsdMetadata = $root.perfetto.protos.TraceConfig.StatsdMetadata.fromObject(object.statsdMetadata);\n                }\n                if (object.writeIntoFile != null)\n                    message.writeIntoFile = Boolean(object.writeIntoFile);\n                if (object.fileWritePeriodMs != null)\n                    message.fileWritePeriodMs = object.fileWritePeriodMs >>> 0;\n                if (object.maxFileSizeBytes != null)\n                    if ($util.Long)\n                        (message.maxFileSizeBytes = $util.Long.fromValue(object.maxFileSizeBytes)).unsigned = true;\n                    else if (typeof object.maxFileSizeBytes === \"string\")\n                        message.maxFileSizeBytes = parseInt(object.maxFileSizeBytes, 10);\n                    else if (typeof object.maxFileSizeBytes === \"number\")\n                        message.maxFileSizeBytes = object.maxFileSizeBytes;\n                    else if (typeof object.maxFileSizeBytes === \"object\")\n                        message.maxFileSizeBytes = new $util.LongBits(object.maxFileSizeBytes.low >>> 0, object.maxFileSizeBytes.high >>> 0).toNumber(true);\n                if (object.guardrailOverrides != null) {\n                    if (typeof object.guardrailOverrides !== \"object\")\n                        throw TypeError(\".perfetto.protos.TraceConfig.guardrailOverrides: object expected\");\n                    message.guardrailOverrides = $root.perfetto.protos.TraceConfig.GuardrailOverrides.fromObject(object.guardrailOverrides);\n                }\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a TraceConfig message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof perfetto.protos.TraceConfig\n             * @static\n             * @param {perfetto.protos.TraceConfig} message TraceConfig\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            TraceConfig.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults) {\n                    object.buffers = [];\n                    object.dataSources = [];\n                    object.producers = [];\n                }\n                if (options.defaults) {\n                    object.durationMs = 0;\n                    object.enableExtraGuardrails = false;\n                    object.lockdownMode = options.enums === String ? \"LOCKDOWN_UNCHANGED\" : 0;\n                    object.statsdMetadata = null;\n                    object.writeIntoFile = false;\n                    object.fileWritePeriodMs = 0;\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, true);\n                        object.maxFileSizeBytes = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.maxFileSizeBytes = options.longs === String ? \"0\" : 0;\n                    object.guardrailOverrides = null;\n                }\n                if (message.buffers && message.buffers.length) {\n                    object.buffers = [];\n                    for (var j = 0; j < message.buffers.length; ++j)\n                        object.buffers[j] = $root.perfetto.protos.TraceConfig.BufferConfig.toObject(message.buffers[j], options);\n                }\n                if (message.dataSources && message.dataSources.length) {\n                    object.dataSources = [];\n                    for (var j = 0; j < message.dataSources.length; ++j)\n                        object.dataSources[j] = $root.perfetto.protos.TraceConfig.DataSource.toObject(message.dataSources[j], options);\n                }\n                if (message.durationMs != null && message.hasOwnProperty(\"durationMs\"))\n                    object.durationMs = message.durationMs;\n                if (message.enableExtraGuardrails != null && message.hasOwnProperty(\"enableExtraGuardrails\"))\n                    object.enableExtraGuardrails = message.enableExtraGuardrails;\n                if (message.lockdownMode != null && message.hasOwnProperty(\"lockdownMode\"))\n                    object.lockdownMode = options.enums === String ? $root.perfetto.protos.TraceConfig.LockdownModeOperation[message.lockdownMode] : message.lockdownMode;\n                if (message.producers && message.producers.length) {\n                    object.producers = [];\n                    for (var j = 0; j < message.producers.length; ++j)\n                        object.producers[j] = $root.perfetto.protos.TraceConfig.ProducerConfig.toObject(message.producers[j], options);\n                }\n                if (message.statsdMetadata != null && message.hasOwnProperty(\"statsdMetadata\"))\n                    object.statsdMetadata = $root.perfetto.protos.TraceConfig.StatsdMetadata.toObject(message.statsdMetadata, options);\n                if (message.writeIntoFile != null && message.hasOwnProperty(\"writeIntoFile\"))\n                    object.writeIntoFile = message.writeIntoFile;\n                if (message.fileWritePeriodMs != null && message.hasOwnProperty(\"fileWritePeriodMs\"))\n                    object.fileWritePeriodMs = message.fileWritePeriodMs;\n                if (message.maxFileSizeBytes != null && message.hasOwnProperty(\"maxFileSizeBytes\"))\n                    if (typeof message.maxFileSizeBytes === \"number\")\n                        object.maxFileSizeBytes = options.longs === String ? String(message.maxFileSizeBytes) : message.maxFileSizeBytes;\n                    else\n                        object.maxFileSizeBytes = options.longs === String ? $util.Long.prototype.toString.call(message.maxFileSizeBytes) : options.longs === Number ? new $util.LongBits(message.maxFileSizeBytes.low >>> 0, message.maxFileSizeBytes.high >>> 0).toNumber(true) : message.maxFileSizeBytes;\n                if (message.guardrailOverrides != null && message.hasOwnProperty(\"guardrailOverrides\"))\n                    object.guardrailOverrides = $root.perfetto.protos.TraceConfig.GuardrailOverrides.toObject(message.guardrailOverrides, options);\n                return object;\n            };\n\n            /**\n             * Converts this TraceConfig to JSON.\n             * @function toJSON\n             * @memberof perfetto.protos.TraceConfig\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            TraceConfig.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            TraceConfig.BufferConfig = (function() {\n\n                /**\n                 * Properties of a BufferConfig.\n                 * @memberof perfetto.protos.TraceConfig\n                 * @interface IBufferConfig\n                 * @property {number|null} [sizeKb] BufferConfig sizeKb\n                 * @property {perfetto.protos.TraceConfig.BufferConfig.FillPolicy|null} [fillPolicy] BufferConfig fillPolicy\n                 */\n\n                /**\n                 * Constructs a new BufferConfig.\n                 * @memberof perfetto.protos.TraceConfig\n                 * @classdesc Represents a BufferConfig.\n                 * @implements IBufferConfig\n                 * @constructor\n                 * @param {perfetto.protos.TraceConfig.IBufferConfig=} [properties] Properties to set\n                 */\n                function BufferConfig(properties) {\n                    if (properties)\n                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                            if (properties[keys[i]] != null)\n                                this[keys[i]] = properties[keys[i]];\n                }\n\n                /**\n                 * BufferConfig sizeKb.\n                 * @member {number} sizeKb\n                 * @memberof perfetto.protos.TraceConfig.BufferConfig\n                 * @instance\n                 */\n                BufferConfig.prototype.sizeKb = 0;\n\n                /**\n                 * BufferConfig fillPolicy.\n                 * @member {perfetto.protos.TraceConfig.BufferConfig.FillPolicy} fillPolicy\n                 * @memberof perfetto.protos.TraceConfig.BufferConfig\n                 * @instance\n                 */\n                BufferConfig.prototype.fillPolicy = 0;\n\n                /**\n                 * Creates a new BufferConfig instance using the specified properties.\n                 * @function create\n                 * @memberof perfetto.protos.TraceConfig.BufferConfig\n                 * @static\n                 * @param {perfetto.protos.TraceConfig.IBufferConfig=} [properties] Properties to set\n                 * @returns {perfetto.protos.TraceConfig.BufferConfig} BufferConfig instance\n                 */\n                BufferConfig.create = function create(properties) {\n                    return new BufferConfig(properties);\n                };\n\n                /**\n                 * Encodes the specified BufferConfig message. Does not implicitly {@link perfetto.protos.TraceConfig.BufferConfig.verify|verify} messages.\n                 * @function encode\n                 * @memberof perfetto.protos.TraceConfig.BufferConfig\n                 * @static\n                 * @param {perfetto.protos.TraceConfig.IBufferConfig} message BufferConfig message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                BufferConfig.encode = function encode(message, writer) {\n                    if (!writer)\n                        writer = $Writer.create();\n                    if (message.sizeKb != null && message.hasOwnProperty(\"sizeKb\"))\n                        writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.sizeKb);\n                    if (message.fillPolicy != null && message.hasOwnProperty(\"fillPolicy\"))\n                        writer.uint32(/* id 4, wireType 0 =*/32).int32(message.fillPolicy);\n                    return writer;\n                };\n\n                /**\n                 * Encodes the specified BufferConfig message, length delimited. Does not implicitly {@link perfetto.protos.TraceConfig.BufferConfig.verify|verify} messages.\n                 * @function encodeDelimited\n                 * @memberof perfetto.protos.TraceConfig.BufferConfig\n                 * @static\n                 * @param {perfetto.protos.TraceConfig.IBufferConfig} message BufferConfig message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                BufferConfig.encodeDelimited = function encodeDelimited(message, writer) {\n                    return this.encode(message, writer).ldelim();\n                };\n\n                /**\n                 * Decodes a BufferConfig message from the specified reader or buffer.\n                 * @function decode\n                 * @memberof perfetto.protos.TraceConfig.BufferConfig\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @param {number} [length] Message length if known beforehand\n                 * @returns {perfetto.protos.TraceConfig.BufferConfig} BufferConfig\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                BufferConfig.decode = function decode(reader, length) {\n                    if (!(reader instanceof $Reader))\n                        reader = $Reader.create(reader);\n                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.TraceConfig.BufferConfig();\n                    while (reader.pos < end) {\n                        var tag = reader.uint32();\n                        switch (tag >>> 3) {\n                        case 1:\n                            message.sizeKb = reader.uint32();\n                            break;\n                        case 4:\n                            message.fillPolicy = reader.int32();\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                    return message;\n                };\n\n                /**\n                 * Decodes a BufferConfig message from the specified reader or buffer, length delimited.\n                 * @function decodeDelimited\n                 * @memberof perfetto.protos.TraceConfig.BufferConfig\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @returns {perfetto.protos.TraceConfig.BufferConfig} BufferConfig\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                BufferConfig.decodeDelimited = function decodeDelimited(reader) {\n                    if (!(reader instanceof $Reader))\n                        reader = new $Reader(reader);\n                    return this.decode(reader, reader.uint32());\n                };\n\n                /**\n                 * Verifies a BufferConfig message.\n                 * @function verify\n                 * @memberof perfetto.protos.TraceConfig.BufferConfig\n                 * @static\n                 * @param {Object.<string,*>} message Plain object to verify\n                 * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                 */\n                BufferConfig.verify = function verify(message) {\n                    if (typeof message !== \"object\" || message === null)\n                        return \"object expected\";\n                    if (message.sizeKb != null && message.hasOwnProperty(\"sizeKb\"))\n                        if (!$util.isInteger(message.sizeKb))\n                            return \"sizeKb: integer expected\";\n                    if (message.fillPolicy != null && message.hasOwnProperty(\"fillPolicy\"))\n                        switch (message.fillPolicy) {\n                        default:\n                            return \"fillPolicy: enum value expected\";\n                        case 0:\n                        case 1:\n                            break;\n                        }\n                    return null;\n                };\n\n                /**\n                 * Creates a BufferConfig message from a plain object. Also converts values to their respective internal types.\n                 * @function fromObject\n                 * @memberof perfetto.protos.TraceConfig.BufferConfig\n                 * @static\n                 * @param {Object.<string,*>} object Plain object\n                 * @returns {perfetto.protos.TraceConfig.BufferConfig} BufferConfig\n                 */\n                BufferConfig.fromObject = function fromObject(object) {\n                    if (object instanceof $root.perfetto.protos.TraceConfig.BufferConfig)\n                        return object;\n                    var message = new $root.perfetto.protos.TraceConfig.BufferConfig();\n                    if (object.sizeKb != null)\n                        message.sizeKb = object.sizeKb >>> 0;\n                    switch (object.fillPolicy) {\n                    case \"UNSPECIFIED\":\n                    case 0:\n                        message.fillPolicy = 0;\n                        break;\n                    case \"RING_BUFFER\":\n                    case 1:\n                        message.fillPolicy = 1;\n                        break;\n                    }\n                    return message;\n                };\n\n                /**\n                 * Creates a plain object from a BufferConfig message. Also converts values to other types if specified.\n                 * @function toObject\n                 * @memberof perfetto.protos.TraceConfig.BufferConfig\n                 * @static\n                 * @param {perfetto.protos.TraceConfig.BufferConfig} message BufferConfig\n                 * @param {$protobuf.IConversionOptions} [options] Conversion options\n                 * @returns {Object.<string,*>} Plain object\n                 */\n                BufferConfig.toObject = function toObject(message, options) {\n                    if (!options)\n                        options = {};\n                    var object = {};\n                    if (options.defaults) {\n                        object.sizeKb = 0;\n                        object.fillPolicy = options.enums === String ? \"UNSPECIFIED\" : 0;\n                    }\n                    if (message.sizeKb != null && message.hasOwnProperty(\"sizeKb\"))\n                        object.sizeKb = message.sizeKb;\n                    if (message.fillPolicy != null && message.hasOwnProperty(\"fillPolicy\"))\n                        object.fillPolicy = options.enums === String ? $root.perfetto.protos.TraceConfig.BufferConfig.FillPolicy[message.fillPolicy] : message.fillPolicy;\n                    return object;\n                };\n\n                /**\n                 * Converts this BufferConfig to JSON.\n                 * @function toJSON\n                 * @memberof perfetto.protos.TraceConfig.BufferConfig\n                 * @instance\n                 * @returns {Object.<string,*>} JSON object\n                 */\n                BufferConfig.prototype.toJSON = function toJSON() {\n                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                };\n\n                /**\n                 * FillPolicy enum.\n                 * @name perfetto.protos.TraceConfig.BufferConfig.FillPolicy\n                 * @enum {string}\n                 * @property {number} UNSPECIFIED=0 UNSPECIFIED value\n                 * @property {number} RING_BUFFER=1 RING_BUFFER value\n                 */\n                BufferConfig.FillPolicy = (function() {\n                    var valuesById = {}, values = Object.create(valuesById);\n                    values[valuesById[0] = \"UNSPECIFIED\"] = 0;\n                    values[valuesById[1] = \"RING_BUFFER\"] = 1;\n                    return values;\n                })();\n\n                return BufferConfig;\n            })();\n\n            TraceConfig.DataSource = (function() {\n\n                /**\n                 * Properties of a DataSource.\n                 * @memberof perfetto.protos.TraceConfig\n                 * @interface IDataSource\n                 * @property {perfetto.protos.IDataSourceConfig|null} [config] DataSource config\n                 * @property {Array.<string>|null} [producerNameFilter] DataSource producerNameFilter\n                 */\n\n                /**\n                 * Constructs a new DataSource.\n                 * @memberof perfetto.protos.TraceConfig\n                 * @classdesc Represents a DataSource.\n                 * @implements IDataSource\n                 * @constructor\n                 * @param {perfetto.protos.TraceConfig.IDataSource=} [properties] Properties to set\n                 */\n                function DataSource(properties) {\n                    this.producerNameFilter = [];\n                    if (properties)\n                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                            if (properties[keys[i]] != null)\n                                this[keys[i]] = properties[keys[i]];\n                }\n\n                /**\n                 * DataSource config.\n                 * @member {perfetto.protos.IDataSourceConfig|null|undefined} config\n                 * @memberof perfetto.protos.TraceConfig.DataSource\n                 * @instance\n                 */\n                DataSource.prototype.config = null;\n\n                /**\n                 * DataSource producerNameFilter.\n                 * @member {Array.<string>} producerNameFilter\n                 * @memberof perfetto.protos.TraceConfig.DataSource\n                 * @instance\n                 */\n                DataSource.prototype.producerNameFilter = $util.emptyArray;\n\n                /**\n                 * Creates a new DataSource instance using the specified properties.\n                 * @function create\n                 * @memberof perfetto.protos.TraceConfig.DataSource\n                 * @static\n                 * @param {perfetto.protos.TraceConfig.IDataSource=} [properties] Properties to set\n                 * @returns {perfetto.protos.TraceConfig.DataSource} DataSource instance\n                 */\n                DataSource.create = function create(properties) {\n                    return new DataSource(properties);\n                };\n\n                /**\n                 * Encodes the specified DataSource message. Does not implicitly {@link perfetto.protos.TraceConfig.DataSource.verify|verify} messages.\n                 * @function encode\n                 * @memberof perfetto.protos.TraceConfig.DataSource\n                 * @static\n                 * @param {perfetto.protos.TraceConfig.IDataSource} message DataSource message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                DataSource.encode = function encode(message, writer) {\n                    if (!writer)\n                        writer = $Writer.create();\n                    if (message.config != null && message.hasOwnProperty(\"config\"))\n                        $root.perfetto.protos.DataSourceConfig.encode(message.config, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                    if (message.producerNameFilter != null && message.producerNameFilter.length)\n                        for (var i = 0; i < message.producerNameFilter.length; ++i)\n                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.producerNameFilter[i]);\n                    return writer;\n                };\n\n                /**\n                 * Encodes the specified DataSource message, length delimited. Does not implicitly {@link perfetto.protos.TraceConfig.DataSource.verify|verify} messages.\n                 * @function encodeDelimited\n                 * @memberof perfetto.protos.TraceConfig.DataSource\n                 * @static\n                 * @param {perfetto.protos.TraceConfig.IDataSource} message DataSource message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                DataSource.encodeDelimited = function encodeDelimited(message, writer) {\n                    return this.encode(message, writer).ldelim();\n                };\n\n                /**\n                 * Decodes a DataSource message from the specified reader or buffer.\n                 * @function decode\n                 * @memberof perfetto.protos.TraceConfig.DataSource\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @param {number} [length] Message length if known beforehand\n                 * @returns {perfetto.protos.TraceConfig.DataSource} DataSource\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                DataSource.decode = function decode(reader, length) {\n                    if (!(reader instanceof $Reader))\n                        reader = $Reader.create(reader);\n                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.TraceConfig.DataSource();\n                    while (reader.pos < end) {\n                        var tag = reader.uint32();\n                        switch (tag >>> 3) {\n                        case 1:\n                            message.config = $root.perfetto.protos.DataSourceConfig.decode(reader, reader.uint32());\n                            break;\n                        case 2:\n                            if (!(message.producerNameFilter && message.producerNameFilter.length))\n                                message.producerNameFilter = [];\n                            message.producerNameFilter.push(reader.string());\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                    return message;\n                };\n\n                /**\n                 * Decodes a DataSource message from the specified reader or buffer, length delimited.\n                 * @function decodeDelimited\n                 * @memberof perfetto.protos.TraceConfig.DataSource\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @returns {perfetto.protos.TraceConfig.DataSource} DataSource\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                DataSource.decodeDelimited = function decodeDelimited(reader) {\n                    if (!(reader instanceof $Reader))\n                        reader = new $Reader(reader);\n                    return this.decode(reader, reader.uint32());\n                };\n\n                /**\n                 * Verifies a DataSource message.\n                 * @function verify\n                 * @memberof perfetto.protos.TraceConfig.DataSource\n                 * @static\n                 * @param {Object.<string,*>} message Plain object to verify\n                 * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                 */\n                DataSource.verify = function verify(message) {\n                    if (typeof message !== \"object\" || message === null)\n                        return \"object expected\";\n                    if (message.config != null && message.hasOwnProperty(\"config\")) {\n                        var error = $root.perfetto.protos.DataSourceConfig.verify(message.config);\n                        if (error)\n                            return \"config.\" + error;\n                    }\n                    if (message.producerNameFilter != null && message.hasOwnProperty(\"producerNameFilter\")) {\n                        if (!Array.isArray(message.producerNameFilter))\n                            return \"producerNameFilter: array expected\";\n                        for (var i = 0; i < message.producerNameFilter.length; ++i)\n                            if (!$util.isString(message.producerNameFilter[i]))\n                                return \"producerNameFilter: string[] expected\";\n                    }\n                    return null;\n                };\n\n                /**\n                 * Creates a DataSource message from a plain object. Also converts values to their respective internal types.\n                 * @function fromObject\n                 * @memberof perfetto.protos.TraceConfig.DataSource\n                 * @static\n                 * @param {Object.<string,*>} object Plain object\n                 * @returns {perfetto.protos.TraceConfig.DataSource} DataSource\n                 */\n                DataSource.fromObject = function fromObject(object) {\n                    if (object instanceof $root.perfetto.protos.TraceConfig.DataSource)\n                        return object;\n                    var message = new $root.perfetto.protos.TraceConfig.DataSource();\n                    if (object.config != null) {\n                        if (typeof object.config !== \"object\")\n                            throw TypeError(\".perfetto.protos.TraceConfig.DataSource.config: object expected\");\n                        message.config = $root.perfetto.protos.DataSourceConfig.fromObject(object.config);\n                    }\n                    if (object.producerNameFilter) {\n                        if (!Array.isArray(object.producerNameFilter))\n                            throw TypeError(\".perfetto.protos.TraceConfig.DataSource.producerNameFilter: array expected\");\n                        message.producerNameFilter = [];\n                        for (var i = 0; i < object.producerNameFilter.length; ++i)\n                            message.producerNameFilter[i] = String(object.producerNameFilter[i]);\n                    }\n                    return message;\n                };\n\n                /**\n                 * Creates a plain object from a DataSource message. Also converts values to other types if specified.\n                 * @function toObject\n                 * @memberof perfetto.protos.TraceConfig.DataSource\n                 * @static\n                 * @param {perfetto.protos.TraceConfig.DataSource} message DataSource\n                 * @param {$protobuf.IConversionOptions} [options] Conversion options\n                 * @returns {Object.<string,*>} Plain object\n                 */\n                DataSource.toObject = function toObject(message, options) {\n                    if (!options)\n                        options = {};\n                    var object = {};\n                    if (options.arrays || options.defaults)\n                        object.producerNameFilter = [];\n                    if (options.defaults)\n                        object.config = null;\n                    if (message.config != null && message.hasOwnProperty(\"config\"))\n                        object.config = $root.perfetto.protos.DataSourceConfig.toObject(message.config, options);\n                    if (message.producerNameFilter && message.producerNameFilter.length) {\n                        object.producerNameFilter = [];\n                        for (var j = 0; j < message.producerNameFilter.length; ++j)\n                            object.producerNameFilter[j] = message.producerNameFilter[j];\n                    }\n                    return object;\n                };\n\n                /**\n                 * Converts this DataSource to JSON.\n                 * @function toJSON\n                 * @memberof perfetto.protos.TraceConfig.DataSource\n                 * @instance\n                 * @returns {Object.<string,*>} JSON object\n                 */\n                DataSource.prototype.toJSON = function toJSON() {\n                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                };\n\n                return DataSource;\n            })();\n\n            /**\n             * LockdownModeOperation enum.\n             * @name perfetto.protos.TraceConfig.LockdownModeOperation\n             * @enum {string}\n             * @property {number} LOCKDOWN_UNCHANGED=0 LOCKDOWN_UNCHANGED value\n             * @property {number} LOCKDOWN_CLEAR=1 LOCKDOWN_CLEAR value\n             * @property {number} LOCKDOWN_SET=2 LOCKDOWN_SET value\n             */\n            TraceConfig.LockdownModeOperation = (function() {\n                var valuesById = {}, values = Object.create(valuesById);\n                values[valuesById[0] = \"LOCKDOWN_UNCHANGED\"] = 0;\n                values[valuesById[1] = \"LOCKDOWN_CLEAR\"] = 1;\n                values[valuesById[2] = \"LOCKDOWN_SET\"] = 2;\n                return values;\n            })();\n\n            TraceConfig.ProducerConfig = (function() {\n\n                /**\n                 * Properties of a ProducerConfig.\n                 * @memberof perfetto.protos.TraceConfig\n                 * @interface IProducerConfig\n                 * @property {string|null} [producerName] ProducerConfig producerName\n                 * @property {number|null} [shmSizeKb] ProducerConfig shmSizeKb\n                 * @property {number|null} [pageSizeKb] ProducerConfig pageSizeKb\n                 */\n\n                /**\n                 * Constructs a new ProducerConfig.\n                 * @memberof perfetto.protos.TraceConfig\n                 * @classdesc Represents a ProducerConfig.\n                 * @implements IProducerConfig\n                 * @constructor\n                 * @param {perfetto.protos.TraceConfig.IProducerConfig=} [properties] Properties to set\n                 */\n                function ProducerConfig(properties) {\n                    if (properties)\n                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                            if (properties[keys[i]] != null)\n                                this[keys[i]] = properties[keys[i]];\n                }\n\n                /**\n                 * ProducerConfig producerName.\n                 * @member {string} producerName\n                 * @memberof perfetto.protos.TraceConfig.ProducerConfig\n                 * @instance\n                 */\n                ProducerConfig.prototype.producerName = \"\";\n\n                /**\n                 * ProducerConfig shmSizeKb.\n                 * @member {number} shmSizeKb\n                 * @memberof perfetto.protos.TraceConfig.ProducerConfig\n                 * @instance\n                 */\n                ProducerConfig.prototype.shmSizeKb = 0;\n\n                /**\n                 * ProducerConfig pageSizeKb.\n                 * @member {number} pageSizeKb\n                 * @memberof perfetto.protos.TraceConfig.ProducerConfig\n                 * @instance\n                 */\n                ProducerConfig.prototype.pageSizeKb = 0;\n\n                /**\n                 * Creates a new ProducerConfig instance using the specified properties.\n                 * @function create\n                 * @memberof perfetto.protos.TraceConfig.ProducerConfig\n                 * @static\n                 * @param {perfetto.protos.TraceConfig.IProducerConfig=} [properties] Properties to set\n                 * @returns {perfetto.protos.TraceConfig.ProducerConfig} ProducerConfig instance\n                 */\n                ProducerConfig.create = function create(properties) {\n                    return new ProducerConfig(properties);\n                };\n\n                /**\n                 * Encodes the specified ProducerConfig message. Does not implicitly {@link perfetto.protos.TraceConfig.ProducerConfig.verify|verify} messages.\n                 * @function encode\n                 * @memberof perfetto.protos.TraceConfig.ProducerConfig\n                 * @static\n                 * @param {perfetto.protos.TraceConfig.IProducerConfig} message ProducerConfig message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                ProducerConfig.encode = function encode(message, writer) {\n                    if (!writer)\n                        writer = $Writer.create();\n                    if (message.producerName != null && message.hasOwnProperty(\"producerName\"))\n                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.producerName);\n                    if (message.shmSizeKb != null && message.hasOwnProperty(\"shmSizeKb\"))\n                        writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.shmSizeKb);\n                    if (message.pageSizeKb != null && message.hasOwnProperty(\"pageSizeKb\"))\n                        writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.pageSizeKb);\n                    return writer;\n                };\n\n                /**\n                 * Encodes the specified ProducerConfig message, length delimited. Does not implicitly {@link perfetto.protos.TraceConfig.ProducerConfig.verify|verify} messages.\n                 * @function encodeDelimited\n                 * @memberof perfetto.protos.TraceConfig.ProducerConfig\n                 * @static\n                 * @param {perfetto.protos.TraceConfig.IProducerConfig} message ProducerConfig message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                ProducerConfig.encodeDelimited = function encodeDelimited(message, writer) {\n                    return this.encode(message, writer).ldelim();\n                };\n\n                /**\n                 * Decodes a ProducerConfig message from the specified reader or buffer.\n                 * @function decode\n                 * @memberof perfetto.protos.TraceConfig.ProducerConfig\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @param {number} [length] Message length if known beforehand\n                 * @returns {perfetto.protos.TraceConfig.ProducerConfig} ProducerConfig\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                ProducerConfig.decode = function decode(reader, length) {\n                    if (!(reader instanceof $Reader))\n                        reader = $Reader.create(reader);\n                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.TraceConfig.ProducerConfig();\n                    while (reader.pos < end) {\n                        var tag = reader.uint32();\n                        switch (tag >>> 3) {\n                        case 1:\n                            message.producerName = reader.string();\n                            break;\n                        case 2:\n                            message.shmSizeKb = reader.uint32();\n                            break;\n                        case 3:\n                            message.pageSizeKb = reader.uint32();\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                    return message;\n                };\n\n                /**\n                 * Decodes a ProducerConfig message from the specified reader or buffer, length delimited.\n                 * @function decodeDelimited\n                 * @memberof perfetto.protos.TraceConfig.ProducerConfig\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @returns {perfetto.protos.TraceConfig.ProducerConfig} ProducerConfig\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                ProducerConfig.decodeDelimited = function decodeDelimited(reader) {\n                    if (!(reader instanceof $Reader))\n                        reader = new $Reader(reader);\n                    return this.decode(reader, reader.uint32());\n                };\n\n                /**\n                 * Verifies a ProducerConfig message.\n                 * @function verify\n                 * @memberof perfetto.protos.TraceConfig.ProducerConfig\n                 * @static\n                 * @param {Object.<string,*>} message Plain object to verify\n                 * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                 */\n                ProducerConfig.verify = function verify(message) {\n                    if (typeof message !== \"object\" || message === null)\n                        return \"object expected\";\n                    if (message.producerName != null && message.hasOwnProperty(\"producerName\"))\n                        if (!$util.isString(message.producerName))\n                            return \"producerName: string expected\";\n                    if (message.shmSizeKb != null && message.hasOwnProperty(\"shmSizeKb\"))\n                        if (!$util.isInteger(message.shmSizeKb))\n                            return \"shmSizeKb: integer expected\";\n                    if (message.pageSizeKb != null && message.hasOwnProperty(\"pageSizeKb\"))\n                        if (!$util.isInteger(message.pageSizeKb))\n                            return \"pageSizeKb: integer expected\";\n                    return null;\n                };\n\n                /**\n                 * Creates a ProducerConfig message from a plain object. Also converts values to their respective internal types.\n                 * @function fromObject\n                 * @memberof perfetto.protos.TraceConfig.ProducerConfig\n                 * @static\n                 * @param {Object.<string,*>} object Plain object\n                 * @returns {perfetto.protos.TraceConfig.ProducerConfig} ProducerConfig\n                 */\n                ProducerConfig.fromObject = function fromObject(object) {\n                    if (object instanceof $root.perfetto.protos.TraceConfig.ProducerConfig)\n                        return object;\n                    var message = new $root.perfetto.protos.TraceConfig.ProducerConfig();\n                    if (object.producerName != null)\n                        message.producerName = String(object.producerName);\n                    if (object.shmSizeKb != null)\n                        message.shmSizeKb = object.shmSizeKb >>> 0;\n                    if (object.pageSizeKb != null)\n                        message.pageSizeKb = object.pageSizeKb >>> 0;\n                    return message;\n                };\n\n                /**\n                 * Creates a plain object from a ProducerConfig message. Also converts values to other types if specified.\n                 * @function toObject\n                 * @memberof perfetto.protos.TraceConfig.ProducerConfig\n                 * @static\n                 * @param {perfetto.protos.TraceConfig.ProducerConfig} message ProducerConfig\n                 * @param {$protobuf.IConversionOptions} [options] Conversion options\n                 * @returns {Object.<string,*>} Plain object\n                 */\n                ProducerConfig.toObject = function toObject(message, options) {\n                    if (!options)\n                        options = {};\n                    var object = {};\n                    if (options.defaults) {\n                        object.producerName = \"\";\n                        object.shmSizeKb = 0;\n                        object.pageSizeKb = 0;\n                    }\n                    if (message.producerName != null && message.hasOwnProperty(\"producerName\"))\n                        object.producerName = message.producerName;\n                    if (message.shmSizeKb != null && message.hasOwnProperty(\"shmSizeKb\"))\n                        object.shmSizeKb = message.shmSizeKb;\n                    if (message.pageSizeKb != null && message.hasOwnProperty(\"pageSizeKb\"))\n                        object.pageSizeKb = message.pageSizeKb;\n                    return object;\n                };\n\n                /**\n                 * Converts this ProducerConfig to JSON.\n                 * @function toJSON\n                 * @memberof perfetto.protos.TraceConfig.ProducerConfig\n                 * @instance\n                 * @returns {Object.<string,*>} JSON object\n                 */\n                ProducerConfig.prototype.toJSON = function toJSON() {\n                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                };\n\n                return ProducerConfig;\n            })();\n\n            TraceConfig.StatsdMetadata = (function() {\n\n                /**\n                 * Properties of a StatsdMetadata.\n                 * @memberof perfetto.protos.TraceConfig\n                 * @interface IStatsdMetadata\n                 * @property {number|Long|null} [triggeringAlertId] StatsdMetadata triggeringAlertId\n                 * @property {number|null} [triggeringConfigUid] StatsdMetadata triggeringConfigUid\n                 * @property {number|Long|null} [triggeringConfigId] StatsdMetadata triggeringConfigId\n                 */\n\n                /**\n                 * Constructs a new StatsdMetadata.\n                 * @memberof perfetto.protos.TraceConfig\n                 * @classdesc Represents a StatsdMetadata.\n                 * @implements IStatsdMetadata\n                 * @constructor\n                 * @param {perfetto.protos.TraceConfig.IStatsdMetadata=} [properties] Properties to set\n                 */\n                function StatsdMetadata(properties) {\n                    if (properties)\n                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                            if (properties[keys[i]] != null)\n                                this[keys[i]] = properties[keys[i]];\n                }\n\n                /**\n                 * StatsdMetadata triggeringAlertId.\n                 * @member {number|Long} triggeringAlertId\n                 * @memberof perfetto.protos.TraceConfig.StatsdMetadata\n                 * @instance\n                 */\n                StatsdMetadata.prototype.triggeringAlertId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n                /**\n                 * StatsdMetadata triggeringConfigUid.\n                 * @member {number} triggeringConfigUid\n                 * @memberof perfetto.protos.TraceConfig.StatsdMetadata\n                 * @instance\n                 */\n                StatsdMetadata.prototype.triggeringConfigUid = 0;\n\n                /**\n                 * StatsdMetadata triggeringConfigId.\n                 * @member {number|Long} triggeringConfigId\n                 * @memberof perfetto.protos.TraceConfig.StatsdMetadata\n                 * @instance\n                 */\n                StatsdMetadata.prototype.triggeringConfigId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n                /**\n                 * Creates a new StatsdMetadata instance using the specified properties.\n                 * @function create\n                 * @memberof perfetto.protos.TraceConfig.StatsdMetadata\n                 * @static\n                 * @param {perfetto.protos.TraceConfig.IStatsdMetadata=} [properties] Properties to set\n                 * @returns {perfetto.protos.TraceConfig.StatsdMetadata} StatsdMetadata instance\n                 */\n                StatsdMetadata.create = function create(properties) {\n                    return new StatsdMetadata(properties);\n                };\n\n                /**\n                 * Encodes the specified StatsdMetadata message. Does not implicitly {@link perfetto.protos.TraceConfig.StatsdMetadata.verify|verify} messages.\n                 * @function encode\n                 * @memberof perfetto.protos.TraceConfig.StatsdMetadata\n                 * @static\n                 * @param {perfetto.protos.TraceConfig.IStatsdMetadata} message StatsdMetadata message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                StatsdMetadata.encode = function encode(message, writer) {\n                    if (!writer)\n                        writer = $Writer.create();\n                    if (message.triggeringAlertId != null && message.hasOwnProperty(\"triggeringAlertId\"))\n                        writer.uint32(/* id 1, wireType 0 =*/8).int64(message.triggeringAlertId);\n                    if (message.triggeringConfigUid != null && message.hasOwnProperty(\"triggeringConfigUid\"))\n                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.triggeringConfigUid);\n                    if (message.triggeringConfigId != null && message.hasOwnProperty(\"triggeringConfigId\"))\n                        writer.uint32(/* id 3, wireType 0 =*/24).int64(message.triggeringConfigId);\n                    return writer;\n                };\n\n                /**\n                 * Encodes the specified StatsdMetadata message, length delimited. Does not implicitly {@link perfetto.protos.TraceConfig.StatsdMetadata.verify|verify} messages.\n                 * @function encodeDelimited\n                 * @memberof perfetto.protos.TraceConfig.StatsdMetadata\n                 * @static\n                 * @param {perfetto.protos.TraceConfig.IStatsdMetadata} message StatsdMetadata message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                StatsdMetadata.encodeDelimited = function encodeDelimited(message, writer) {\n                    return this.encode(message, writer).ldelim();\n                };\n\n                /**\n                 * Decodes a StatsdMetadata message from the specified reader or buffer.\n                 * @function decode\n                 * @memberof perfetto.protos.TraceConfig.StatsdMetadata\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @param {number} [length] Message length if known beforehand\n                 * @returns {perfetto.protos.TraceConfig.StatsdMetadata} StatsdMetadata\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                StatsdMetadata.decode = function decode(reader, length) {\n                    if (!(reader instanceof $Reader))\n                        reader = $Reader.create(reader);\n                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.TraceConfig.StatsdMetadata();\n                    while (reader.pos < end) {\n                        var tag = reader.uint32();\n                        switch (tag >>> 3) {\n                        case 1:\n                            message.triggeringAlertId = reader.int64();\n                            break;\n                        case 2:\n                            message.triggeringConfigUid = reader.int32();\n                            break;\n                        case 3:\n                            message.triggeringConfigId = reader.int64();\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                    return message;\n                };\n\n                /**\n                 * Decodes a StatsdMetadata message from the specified reader or buffer, length delimited.\n                 * @function decodeDelimited\n                 * @memberof perfetto.protos.TraceConfig.StatsdMetadata\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @returns {perfetto.protos.TraceConfig.StatsdMetadata} StatsdMetadata\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                StatsdMetadata.decodeDelimited = function decodeDelimited(reader) {\n                    if (!(reader instanceof $Reader))\n                        reader = new $Reader(reader);\n                    return this.decode(reader, reader.uint32());\n                };\n\n                /**\n                 * Verifies a StatsdMetadata message.\n                 * @function verify\n                 * @memberof perfetto.protos.TraceConfig.StatsdMetadata\n                 * @static\n                 * @param {Object.<string,*>} message Plain object to verify\n                 * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                 */\n                StatsdMetadata.verify = function verify(message) {\n                    if (typeof message !== \"object\" || message === null)\n                        return \"object expected\";\n                    if (message.triggeringAlertId != null && message.hasOwnProperty(\"triggeringAlertId\"))\n                        if (!$util.isInteger(message.triggeringAlertId) && !(message.triggeringAlertId && $util.isInteger(message.triggeringAlertId.low) && $util.isInteger(message.triggeringAlertId.high)))\n                            return \"triggeringAlertId: integer|Long expected\";\n                    if (message.triggeringConfigUid != null && message.hasOwnProperty(\"triggeringConfigUid\"))\n                        if (!$util.isInteger(message.triggeringConfigUid))\n                            return \"triggeringConfigUid: integer expected\";\n                    if (message.triggeringConfigId != null && message.hasOwnProperty(\"triggeringConfigId\"))\n                        if (!$util.isInteger(message.triggeringConfigId) && !(message.triggeringConfigId && $util.isInteger(message.triggeringConfigId.low) && $util.isInteger(message.triggeringConfigId.high)))\n                            return \"triggeringConfigId: integer|Long expected\";\n                    return null;\n                };\n\n                /**\n                 * Creates a StatsdMetadata message from a plain object. Also converts values to their respective internal types.\n                 * @function fromObject\n                 * @memberof perfetto.protos.TraceConfig.StatsdMetadata\n                 * @static\n                 * @param {Object.<string,*>} object Plain object\n                 * @returns {perfetto.protos.TraceConfig.StatsdMetadata} StatsdMetadata\n                 */\n                StatsdMetadata.fromObject = function fromObject(object) {\n                    if (object instanceof $root.perfetto.protos.TraceConfig.StatsdMetadata)\n                        return object;\n                    var message = new $root.perfetto.protos.TraceConfig.StatsdMetadata();\n                    if (object.triggeringAlertId != null)\n                        if ($util.Long)\n                            (message.triggeringAlertId = $util.Long.fromValue(object.triggeringAlertId)).unsigned = false;\n                        else if (typeof object.triggeringAlertId === \"string\")\n                            message.triggeringAlertId = parseInt(object.triggeringAlertId, 10);\n                        else if (typeof object.triggeringAlertId === \"number\")\n                            message.triggeringAlertId = object.triggeringAlertId;\n                        else if (typeof object.triggeringAlertId === \"object\")\n                            message.triggeringAlertId = new $util.LongBits(object.triggeringAlertId.low >>> 0, object.triggeringAlertId.high >>> 0).toNumber();\n                    if (object.triggeringConfigUid != null)\n                        message.triggeringConfigUid = object.triggeringConfigUid | 0;\n                    if (object.triggeringConfigId != null)\n                        if ($util.Long)\n                            (message.triggeringConfigId = $util.Long.fromValue(object.triggeringConfigId)).unsigned = false;\n                        else if (typeof object.triggeringConfigId === \"string\")\n                            message.triggeringConfigId = parseInt(object.triggeringConfigId, 10);\n                        else if (typeof object.triggeringConfigId === \"number\")\n                            message.triggeringConfigId = object.triggeringConfigId;\n                        else if (typeof object.triggeringConfigId === \"object\")\n                            message.triggeringConfigId = new $util.LongBits(object.triggeringConfigId.low >>> 0, object.triggeringConfigId.high >>> 0).toNumber();\n                    return message;\n                };\n\n                /**\n                 * Creates a plain object from a StatsdMetadata message. Also converts values to other types if specified.\n                 * @function toObject\n                 * @memberof perfetto.protos.TraceConfig.StatsdMetadata\n                 * @static\n                 * @param {perfetto.protos.TraceConfig.StatsdMetadata} message StatsdMetadata\n                 * @param {$protobuf.IConversionOptions} [options] Conversion options\n                 * @returns {Object.<string,*>} Plain object\n                 */\n                StatsdMetadata.toObject = function toObject(message, options) {\n                    if (!options)\n                        options = {};\n                    var object = {};\n                    if (options.defaults) {\n                        if ($util.Long) {\n                            var long = new $util.Long(0, 0, false);\n                            object.triggeringAlertId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                        } else\n                            object.triggeringAlertId = options.longs === String ? \"0\" : 0;\n                        object.triggeringConfigUid = 0;\n                        if ($util.Long) {\n                            var long = new $util.Long(0, 0, false);\n                            object.triggeringConfigId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                        } else\n                            object.triggeringConfigId = options.longs === String ? \"0\" : 0;\n                    }\n                    if (message.triggeringAlertId != null && message.hasOwnProperty(\"triggeringAlertId\"))\n                        if (typeof message.triggeringAlertId === \"number\")\n                            object.triggeringAlertId = options.longs === String ? String(message.triggeringAlertId) : message.triggeringAlertId;\n                        else\n                            object.triggeringAlertId = options.longs === String ? $util.Long.prototype.toString.call(message.triggeringAlertId) : options.longs === Number ? new $util.LongBits(message.triggeringAlertId.low >>> 0, message.triggeringAlertId.high >>> 0).toNumber() : message.triggeringAlertId;\n                    if (message.triggeringConfigUid != null && message.hasOwnProperty(\"triggeringConfigUid\"))\n                        object.triggeringConfigUid = message.triggeringConfigUid;\n                    if (message.triggeringConfigId != null && message.hasOwnProperty(\"triggeringConfigId\"))\n                        if (typeof message.triggeringConfigId === \"number\")\n                            object.triggeringConfigId = options.longs === String ? String(message.triggeringConfigId) : message.triggeringConfigId;\n                        else\n                            object.triggeringConfigId = options.longs === String ? $util.Long.prototype.toString.call(message.triggeringConfigId) : options.longs === Number ? new $util.LongBits(message.triggeringConfigId.low >>> 0, message.triggeringConfigId.high >>> 0).toNumber() : message.triggeringConfigId;\n                    return object;\n                };\n\n                /**\n                 * Converts this StatsdMetadata to JSON.\n                 * @function toJSON\n                 * @memberof perfetto.protos.TraceConfig.StatsdMetadata\n                 * @instance\n                 * @returns {Object.<string,*>} JSON object\n                 */\n                StatsdMetadata.prototype.toJSON = function toJSON() {\n                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                };\n\n                return StatsdMetadata;\n            })();\n\n            TraceConfig.GuardrailOverrides = (function() {\n\n                /**\n                 * Properties of a GuardrailOverrides.\n                 * @memberof perfetto.protos.TraceConfig\n                 * @interface IGuardrailOverrides\n                 * @property {number|Long|null} [maxUploadPerDayBytes] GuardrailOverrides maxUploadPerDayBytes\n                 */\n\n                /**\n                 * Constructs a new GuardrailOverrides.\n                 * @memberof perfetto.protos.TraceConfig\n                 * @classdesc Represents a GuardrailOverrides.\n                 * @implements IGuardrailOverrides\n                 * @constructor\n                 * @param {perfetto.protos.TraceConfig.IGuardrailOverrides=} [properties] Properties to set\n                 */\n                function GuardrailOverrides(properties) {\n                    if (properties)\n                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                            if (properties[keys[i]] != null)\n                                this[keys[i]] = properties[keys[i]];\n                }\n\n                /**\n                 * GuardrailOverrides maxUploadPerDayBytes.\n                 * @member {number|Long} maxUploadPerDayBytes\n                 * @memberof perfetto.protos.TraceConfig.GuardrailOverrides\n                 * @instance\n                 */\n                GuardrailOverrides.prototype.maxUploadPerDayBytes = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n                /**\n                 * Creates a new GuardrailOverrides instance using the specified properties.\n                 * @function create\n                 * @memberof perfetto.protos.TraceConfig.GuardrailOverrides\n                 * @static\n                 * @param {perfetto.protos.TraceConfig.IGuardrailOverrides=} [properties] Properties to set\n                 * @returns {perfetto.protos.TraceConfig.GuardrailOverrides} GuardrailOverrides instance\n                 */\n                GuardrailOverrides.create = function create(properties) {\n                    return new GuardrailOverrides(properties);\n                };\n\n                /**\n                 * Encodes the specified GuardrailOverrides message. Does not implicitly {@link perfetto.protos.TraceConfig.GuardrailOverrides.verify|verify} messages.\n                 * @function encode\n                 * @memberof perfetto.protos.TraceConfig.GuardrailOverrides\n                 * @static\n                 * @param {perfetto.protos.TraceConfig.IGuardrailOverrides} message GuardrailOverrides message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                GuardrailOverrides.encode = function encode(message, writer) {\n                    if (!writer)\n                        writer = $Writer.create();\n                    if (message.maxUploadPerDayBytes != null && message.hasOwnProperty(\"maxUploadPerDayBytes\"))\n                        writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.maxUploadPerDayBytes);\n                    return writer;\n                };\n\n                /**\n                 * Encodes the specified GuardrailOverrides message, length delimited. Does not implicitly {@link perfetto.protos.TraceConfig.GuardrailOverrides.verify|verify} messages.\n                 * @function encodeDelimited\n                 * @memberof perfetto.protos.TraceConfig.GuardrailOverrides\n                 * @static\n                 * @param {perfetto.protos.TraceConfig.IGuardrailOverrides} message GuardrailOverrides message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                GuardrailOverrides.encodeDelimited = function encodeDelimited(message, writer) {\n                    return this.encode(message, writer).ldelim();\n                };\n\n                /**\n                 * Decodes a GuardrailOverrides message from the specified reader or buffer.\n                 * @function decode\n                 * @memberof perfetto.protos.TraceConfig.GuardrailOverrides\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @param {number} [length] Message length if known beforehand\n                 * @returns {perfetto.protos.TraceConfig.GuardrailOverrides} GuardrailOverrides\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                GuardrailOverrides.decode = function decode(reader, length) {\n                    if (!(reader instanceof $Reader))\n                        reader = $Reader.create(reader);\n                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.TraceConfig.GuardrailOverrides();\n                    while (reader.pos < end) {\n                        var tag = reader.uint32();\n                        switch (tag >>> 3) {\n                        case 1:\n                            message.maxUploadPerDayBytes = reader.uint64();\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                    return message;\n                };\n\n                /**\n                 * Decodes a GuardrailOverrides message from the specified reader or buffer, length delimited.\n                 * @function decodeDelimited\n                 * @memberof perfetto.protos.TraceConfig.GuardrailOverrides\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @returns {perfetto.protos.TraceConfig.GuardrailOverrides} GuardrailOverrides\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                GuardrailOverrides.decodeDelimited = function decodeDelimited(reader) {\n                    if (!(reader instanceof $Reader))\n                        reader = new $Reader(reader);\n                    return this.decode(reader, reader.uint32());\n                };\n\n                /**\n                 * Verifies a GuardrailOverrides message.\n                 * @function verify\n                 * @memberof perfetto.protos.TraceConfig.GuardrailOverrides\n                 * @static\n                 * @param {Object.<string,*>} message Plain object to verify\n                 * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                 */\n                GuardrailOverrides.verify = function verify(message) {\n                    if (typeof message !== \"object\" || message === null)\n                        return \"object expected\";\n                    if (message.maxUploadPerDayBytes != null && message.hasOwnProperty(\"maxUploadPerDayBytes\"))\n                        if (!$util.isInteger(message.maxUploadPerDayBytes) && !(message.maxUploadPerDayBytes && $util.isInteger(message.maxUploadPerDayBytes.low) && $util.isInteger(message.maxUploadPerDayBytes.high)))\n                            return \"maxUploadPerDayBytes: integer|Long expected\";\n                    return null;\n                };\n\n                /**\n                 * Creates a GuardrailOverrides message from a plain object. Also converts values to their respective internal types.\n                 * @function fromObject\n                 * @memberof perfetto.protos.TraceConfig.GuardrailOverrides\n                 * @static\n                 * @param {Object.<string,*>} object Plain object\n                 * @returns {perfetto.protos.TraceConfig.GuardrailOverrides} GuardrailOverrides\n                 */\n                GuardrailOverrides.fromObject = function fromObject(object) {\n                    if (object instanceof $root.perfetto.protos.TraceConfig.GuardrailOverrides)\n                        return object;\n                    var message = new $root.perfetto.protos.TraceConfig.GuardrailOverrides();\n                    if (object.maxUploadPerDayBytes != null)\n                        if ($util.Long)\n                            (message.maxUploadPerDayBytes = $util.Long.fromValue(object.maxUploadPerDayBytes)).unsigned = true;\n                        else if (typeof object.maxUploadPerDayBytes === \"string\")\n                            message.maxUploadPerDayBytes = parseInt(object.maxUploadPerDayBytes, 10);\n                        else if (typeof object.maxUploadPerDayBytes === \"number\")\n                            message.maxUploadPerDayBytes = object.maxUploadPerDayBytes;\n                        else if (typeof object.maxUploadPerDayBytes === \"object\")\n                            message.maxUploadPerDayBytes = new $util.LongBits(object.maxUploadPerDayBytes.low >>> 0, object.maxUploadPerDayBytes.high >>> 0).toNumber(true);\n                    return message;\n                };\n\n                /**\n                 * Creates a plain object from a GuardrailOverrides message. Also converts values to other types if specified.\n                 * @function toObject\n                 * @memberof perfetto.protos.TraceConfig.GuardrailOverrides\n                 * @static\n                 * @param {perfetto.protos.TraceConfig.GuardrailOverrides} message GuardrailOverrides\n                 * @param {$protobuf.IConversionOptions} [options] Conversion options\n                 * @returns {Object.<string,*>} Plain object\n                 */\n                GuardrailOverrides.toObject = function toObject(message, options) {\n                    if (!options)\n                        options = {};\n                    var object = {};\n                    if (options.defaults)\n                        if ($util.Long) {\n                            var long = new $util.Long(0, 0, true);\n                            object.maxUploadPerDayBytes = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                        } else\n                            object.maxUploadPerDayBytes = options.longs === String ? \"0\" : 0;\n                    if (message.maxUploadPerDayBytes != null && message.hasOwnProperty(\"maxUploadPerDayBytes\"))\n                        if (typeof message.maxUploadPerDayBytes === \"number\")\n                            object.maxUploadPerDayBytes = options.longs === String ? String(message.maxUploadPerDayBytes) : message.maxUploadPerDayBytes;\n                        else\n                            object.maxUploadPerDayBytes = options.longs === String ? $util.Long.prototype.toString.call(message.maxUploadPerDayBytes) : options.longs === Number ? new $util.LongBits(message.maxUploadPerDayBytes.low >>> 0, message.maxUploadPerDayBytes.high >>> 0).toNumber(true) : message.maxUploadPerDayBytes;\n                    return object;\n                };\n\n                /**\n                 * Converts this GuardrailOverrides to JSON.\n                 * @function toJSON\n                 * @memberof perfetto.protos.TraceConfig.GuardrailOverrides\n                 * @instance\n                 * @returns {Object.<string,*>} JSON object\n                 */\n                GuardrailOverrides.prototype.toJSON = function toJSON() {\n                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                };\n\n                return GuardrailOverrides;\n            })();\n\n            return TraceConfig;\n        })();\n\n        protos.Trace = (function() {\n\n            /**\n             * Properties of a Trace.\n             * @memberof perfetto.protos\n             * @interface ITrace\n             * @property {Array.<perfetto.protos.ITracePacket>|null} [packet] Trace packet\n             */\n\n            /**\n             * Constructs a new Trace.\n             * @memberof perfetto.protos\n             * @classdesc Represents a Trace.\n             * @implements ITrace\n             * @constructor\n             * @param {perfetto.protos.ITrace=} [properties] Properties to set\n             */\n            function Trace(properties) {\n                this.packet = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * Trace packet.\n             * @member {Array.<perfetto.protos.ITracePacket>} packet\n             * @memberof perfetto.protos.Trace\n             * @instance\n             */\n            Trace.prototype.packet = $util.emptyArray;\n\n            /**\n             * Creates a new Trace instance using the specified properties.\n             * @function create\n             * @memberof perfetto.protos.Trace\n             * @static\n             * @param {perfetto.protos.ITrace=} [properties] Properties to set\n             * @returns {perfetto.protos.Trace} Trace instance\n             */\n            Trace.create = function create(properties) {\n                return new Trace(properties);\n            };\n\n            /**\n             * Encodes the specified Trace message. Does not implicitly {@link perfetto.protos.Trace.verify|verify} messages.\n             * @function encode\n             * @memberof perfetto.protos.Trace\n             * @static\n             * @param {perfetto.protos.ITrace} message Trace message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Trace.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.packet != null && message.packet.length)\n                    for (var i = 0; i < message.packet.length; ++i)\n                        $root.perfetto.protos.TracePacket.encode(message.packet[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                return writer;\n            };\n\n            /**\n             * Encodes the specified Trace message, length delimited. Does not implicitly {@link perfetto.protos.Trace.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof perfetto.protos.Trace\n             * @static\n             * @param {perfetto.protos.ITrace} message Trace message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Trace.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a Trace message from the specified reader or buffer.\n             * @function decode\n             * @memberof perfetto.protos.Trace\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {perfetto.protos.Trace} Trace\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Trace.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.Trace();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        if (!(message.packet && message.packet.length))\n                            message.packet = [];\n                        message.packet.push($root.perfetto.protos.TracePacket.decode(reader, reader.uint32()));\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a Trace message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof perfetto.protos.Trace\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {perfetto.protos.Trace} Trace\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Trace.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a Trace message.\n             * @function verify\n             * @memberof perfetto.protos.Trace\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Trace.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.packet != null && message.hasOwnProperty(\"packet\")) {\n                    if (!Array.isArray(message.packet))\n                        return \"packet: array expected\";\n                    for (var i = 0; i < message.packet.length; ++i) {\n                        var error = $root.perfetto.protos.TracePacket.verify(message.packet[i]);\n                        if (error)\n                            return \"packet.\" + error;\n                    }\n                }\n                return null;\n            };\n\n            /**\n             * Creates a Trace message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof perfetto.protos.Trace\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {perfetto.protos.Trace} Trace\n             */\n            Trace.fromObject = function fromObject(object) {\n                if (object instanceof $root.perfetto.protos.Trace)\n                    return object;\n                var message = new $root.perfetto.protos.Trace();\n                if (object.packet) {\n                    if (!Array.isArray(object.packet))\n                        throw TypeError(\".perfetto.protos.Trace.packet: array expected\");\n                    message.packet = [];\n                    for (var i = 0; i < object.packet.length; ++i) {\n                        if (typeof object.packet[i] !== \"object\")\n                            throw TypeError(\".perfetto.protos.Trace.packet: object expected\");\n                        message.packet[i] = $root.perfetto.protos.TracePacket.fromObject(object.packet[i]);\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a Trace message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof perfetto.protos.Trace\n             * @static\n             * @param {perfetto.protos.Trace} message Trace\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Trace.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults)\n                    object.packet = [];\n                if (message.packet && message.packet.length) {\n                    object.packet = [];\n                    for (var j = 0; j < message.packet.length; ++j)\n                        object.packet[j] = $root.perfetto.protos.TracePacket.toObject(message.packet[j], options);\n                }\n                return object;\n            };\n\n            /**\n             * Converts this Trace to JSON.\n             * @function toJSON\n             * @memberof perfetto.protos.Trace\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Trace.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Trace;\n        })();\n\n        protos.TracePacket = (function() {\n\n            /**\n             * Properties of a TracePacket.\n             * @memberof perfetto.protos\n             * @interface ITracePacket\n             * @property {perfetto.protos.IFtraceEventBundle|null} [ftraceEvents] TracePacket ftraceEvents\n             * @property {perfetto.protos.IProcessTree|null} [processTree] TracePacket processTree\n             * @property {perfetto.protos.IInodeFileMap|null} [inodeFileMap] TracePacket inodeFileMap\n             * @property {number|null} [trustedUid] TracePacket trustedUid\n             */\n\n            /**\n             * Constructs a new TracePacket.\n             * @memberof perfetto.protos\n             * @classdesc Represents a TracePacket.\n             * @implements ITracePacket\n             * @constructor\n             * @param {perfetto.protos.ITracePacket=} [properties] Properties to set\n             */\n            function TracePacket(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * TracePacket ftraceEvents.\n             * @member {perfetto.protos.IFtraceEventBundle|null|undefined} ftraceEvents\n             * @memberof perfetto.protos.TracePacket\n             * @instance\n             */\n            TracePacket.prototype.ftraceEvents = null;\n\n            /**\n             * TracePacket processTree.\n             * @member {perfetto.protos.IProcessTree|null|undefined} processTree\n             * @memberof perfetto.protos.TracePacket\n             * @instance\n             */\n            TracePacket.prototype.processTree = null;\n\n            /**\n             * TracePacket inodeFileMap.\n             * @member {perfetto.protos.IInodeFileMap|null|undefined} inodeFileMap\n             * @memberof perfetto.protos.TracePacket\n             * @instance\n             */\n            TracePacket.prototype.inodeFileMap = null;\n\n            /**\n             * TracePacket trustedUid.\n             * @member {number} trustedUid\n             * @memberof perfetto.protos.TracePacket\n             * @instance\n             */\n            TracePacket.prototype.trustedUid = 0;\n\n            // OneOf field names bound to virtual getters and setters\n            var $oneOfFields;\n\n            /**\n             * TracePacket data.\n             * @member {\"ftraceEvents\"|\"processTree\"|\"inodeFileMap\"|undefined} data\n             * @memberof perfetto.protos.TracePacket\n             * @instance\n             */\n            Object.defineProperty(TracePacket.prototype, \"data\", {\n                get: $util.oneOfGetter($oneOfFields = [\"ftraceEvents\", \"processTree\", \"inodeFileMap\"]),\n                set: $util.oneOfSetter($oneOfFields)\n            });\n\n            /**\n             * TracePacket optionalTrustedUid.\n             * @member {\"trustedUid\"|undefined} optionalTrustedUid\n             * @memberof perfetto.protos.TracePacket\n             * @instance\n             */\n            Object.defineProperty(TracePacket.prototype, \"optionalTrustedUid\", {\n                get: $util.oneOfGetter($oneOfFields = [\"trustedUid\"]),\n                set: $util.oneOfSetter($oneOfFields)\n            });\n\n            /**\n             * Creates a new TracePacket instance using the specified properties.\n             * @function create\n             * @memberof perfetto.protos.TracePacket\n             * @static\n             * @param {perfetto.protos.ITracePacket=} [properties] Properties to set\n             * @returns {perfetto.protos.TracePacket} TracePacket instance\n             */\n            TracePacket.create = function create(properties) {\n                return new TracePacket(properties);\n            };\n\n            /**\n             * Encodes the specified TracePacket message. Does not implicitly {@link perfetto.protos.TracePacket.verify|verify} messages.\n             * @function encode\n             * @memberof perfetto.protos.TracePacket\n             * @static\n             * @param {perfetto.protos.ITracePacket} message TracePacket message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            TracePacket.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.ftraceEvents != null && message.hasOwnProperty(\"ftraceEvents\"))\n                    $root.perfetto.protos.FtraceEventBundle.encode(message.ftraceEvents, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                if (message.processTree != null && message.hasOwnProperty(\"processTree\"))\n                    $root.perfetto.protos.ProcessTree.encode(message.processTree, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                if (message.trustedUid != null && message.hasOwnProperty(\"trustedUid\"))\n                    writer.uint32(/* id 3, wireType 0 =*/24).int32(message.trustedUid);\n                if (message.inodeFileMap != null && message.hasOwnProperty(\"inodeFileMap\"))\n                    $root.perfetto.protos.InodeFileMap.encode(message.inodeFileMap, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();\n                return writer;\n            };\n\n            /**\n             * Encodes the specified TracePacket message, length delimited. Does not implicitly {@link perfetto.protos.TracePacket.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof perfetto.protos.TracePacket\n             * @static\n             * @param {perfetto.protos.ITracePacket} message TracePacket message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            TracePacket.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a TracePacket message from the specified reader or buffer.\n             * @function decode\n             * @memberof perfetto.protos.TracePacket\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {perfetto.protos.TracePacket} TracePacket\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            TracePacket.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.TracePacket();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.ftraceEvents = $root.perfetto.protos.FtraceEventBundle.decode(reader, reader.uint32());\n                        break;\n                    case 2:\n                        message.processTree = $root.perfetto.protos.ProcessTree.decode(reader, reader.uint32());\n                        break;\n                    case 4:\n                        message.inodeFileMap = $root.perfetto.protos.InodeFileMap.decode(reader, reader.uint32());\n                        break;\n                    case 3:\n                        message.trustedUid = reader.int32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a TracePacket message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof perfetto.protos.TracePacket\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {perfetto.protos.TracePacket} TracePacket\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            TracePacket.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a TracePacket message.\n             * @function verify\n             * @memberof perfetto.protos.TracePacket\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            TracePacket.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                var properties = {};\n                if (message.ftraceEvents != null && message.hasOwnProperty(\"ftraceEvents\")) {\n                    properties.data = 1;\n                    {\n                        var error = $root.perfetto.protos.FtraceEventBundle.verify(message.ftraceEvents);\n                        if (error)\n                            return \"ftraceEvents.\" + error;\n                    }\n                }\n                if (message.processTree != null && message.hasOwnProperty(\"processTree\")) {\n                    if (properties.data === 1)\n                        return \"data: multiple values\";\n                    properties.data = 1;\n                    {\n                        var error = $root.perfetto.protos.ProcessTree.verify(message.processTree);\n                        if (error)\n                            return \"processTree.\" + error;\n                    }\n                }\n                if (message.inodeFileMap != null && message.hasOwnProperty(\"inodeFileMap\")) {\n                    if (properties.data === 1)\n                        return \"data: multiple values\";\n                    properties.data = 1;\n                    {\n                        var error = $root.perfetto.protos.InodeFileMap.verify(message.inodeFileMap);\n                        if (error)\n                            return \"inodeFileMap.\" + error;\n                    }\n                }\n                if (message.trustedUid != null && message.hasOwnProperty(\"trustedUid\")) {\n                    properties.optionalTrustedUid = 1;\n                    if (!$util.isInteger(message.trustedUid))\n                        return \"trustedUid: integer expected\";\n                }\n                return null;\n            };\n\n            /**\n             * Creates a TracePacket message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof perfetto.protos.TracePacket\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {perfetto.protos.TracePacket} TracePacket\n             */\n            TracePacket.fromObject = function fromObject(object) {\n                if (object instanceof $root.perfetto.protos.TracePacket)\n                    return object;\n                var message = new $root.perfetto.protos.TracePacket();\n                if (object.ftraceEvents != null) {\n                    if (typeof object.ftraceEvents !== \"object\")\n                        throw TypeError(\".perfetto.protos.TracePacket.ftraceEvents: object expected\");\n                    message.ftraceEvents = $root.perfetto.protos.FtraceEventBundle.fromObject(object.ftraceEvents);\n                }\n                if (object.processTree != null) {\n                    if (typeof object.processTree !== \"object\")\n                        throw TypeError(\".perfetto.protos.TracePacket.processTree: object expected\");\n                    message.processTree = $root.perfetto.protos.ProcessTree.fromObject(object.processTree);\n                }\n                if (object.inodeFileMap != null) {\n                    if (typeof object.inodeFileMap !== \"object\")\n                        throw TypeError(\".perfetto.protos.TracePacket.inodeFileMap: object expected\");\n                    message.inodeFileMap = $root.perfetto.protos.InodeFileMap.fromObject(object.inodeFileMap);\n                }\n                if (object.trustedUid != null)\n                    message.trustedUid = object.trustedUid | 0;\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a TracePacket message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof perfetto.protos.TracePacket\n             * @static\n             * @param {perfetto.protos.TracePacket} message TracePacket\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            TracePacket.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (message.ftraceEvents != null && message.hasOwnProperty(\"ftraceEvents\")) {\n                    object.ftraceEvents = $root.perfetto.protos.FtraceEventBundle.toObject(message.ftraceEvents, options);\n                    if (options.oneofs)\n                        object.data = \"ftraceEvents\";\n                }\n                if (message.processTree != null && message.hasOwnProperty(\"processTree\")) {\n                    object.processTree = $root.perfetto.protos.ProcessTree.toObject(message.processTree, options);\n                    if (options.oneofs)\n                        object.data = \"processTree\";\n                }\n                if (message.trustedUid != null && message.hasOwnProperty(\"trustedUid\")) {\n                    object.trustedUid = message.trustedUid;\n                    if (options.oneofs)\n                        object.optionalTrustedUid = \"trustedUid\";\n                }\n                if (message.inodeFileMap != null && message.hasOwnProperty(\"inodeFileMap\")) {\n                    object.inodeFileMap = $root.perfetto.protos.InodeFileMap.toObject(message.inodeFileMap, options);\n                    if (options.oneofs)\n                        object.data = \"inodeFileMap\";\n                }\n                return object;\n            };\n\n            /**\n             * Converts this TracePacket to JSON.\n             * @function toJSON\n             * @memberof perfetto.protos.TracePacket\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            TracePacket.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return TracePacket;\n        })();\n\n        protos.FtraceEventBundle = (function() {\n\n            /**\n             * Properties of a FtraceEventBundle.\n             * @memberof perfetto.protos\n             * @interface IFtraceEventBundle\n             * @property {number|null} [cpu] FtraceEventBundle cpu\n             * @property {Array.<perfetto.protos.IFtraceEvent>|null} [event] FtraceEventBundle event\n             * @property {number|null} [overwriteCount] FtraceEventBundle overwriteCount\n             */\n\n            /**\n             * Constructs a new FtraceEventBundle.\n             * @memberof perfetto.protos\n             * @classdesc Represents a FtraceEventBundle.\n             * @implements IFtraceEventBundle\n             * @constructor\n             * @param {perfetto.protos.IFtraceEventBundle=} [properties] Properties to set\n             */\n            function FtraceEventBundle(properties) {\n                this.event = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * FtraceEventBundle cpu.\n             * @member {number} cpu\n             * @memberof perfetto.protos.FtraceEventBundle\n             * @instance\n             */\n            FtraceEventBundle.prototype.cpu = 0;\n\n            /**\n             * FtraceEventBundle event.\n             * @member {Array.<perfetto.protos.IFtraceEvent>} event\n             * @memberof perfetto.protos.FtraceEventBundle\n             * @instance\n             */\n            FtraceEventBundle.prototype.event = $util.emptyArray;\n\n            /**\n             * FtraceEventBundle overwriteCount.\n             * @member {number} overwriteCount\n             * @memberof perfetto.protos.FtraceEventBundle\n             * @instance\n             */\n            FtraceEventBundle.prototype.overwriteCount = 0;\n\n            /**\n             * Creates a new FtraceEventBundle instance using the specified properties.\n             * @function create\n             * @memberof perfetto.protos.FtraceEventBundle\n             * @static\n             * @param {perfetto.protos.IFtraceEventBundle=} [properties] Properties to set\n             * @returns {perfetto.protos.FtraceEventBundle} FtraceEventBundle instance\n             */\n            FtraceEventBundle.create = function create(properties) {\n                return new FtraceEventBundle(properties);\n            };\n\n            /**\n             * Encodes the specified FtraceEventBundle message. Does not implicitly {@link perfetto.protos.FtraceEventBundle.verify|verify} messages.\n             * @function encode\n             * @memberof perfetto.protos.FtraceEventBundle\n             * @static\n             * @param {perfetto.protos.IFtraceEventBundle} message FtraceEventBundle message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            FtraceEventBundle.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.cpu != null && message.hasOwnProperty(\"cpu\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.cpu);\n                if (message.event != null && message.event.length)\n                    for (var i = 0; i < message.event.length; ++i)\n                        $root.perfetto.protos.FtraceEvent.encode(message.event[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                if (message.overwriteCount != null && message.hasOwnProperty(\"overwriteCount\"))\n                    writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.overwriteCount);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified FtraceEventBundle message, length delimited. Does not implicitly {@link perfetto.protos.FtraceEventBundle.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof perfetto.protos.FtraceEventBundle\n             * @static\n             * @param {perfetto.protos.IFtraceEventBundle} message FtraceEventBundle message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            FtraceEventBundle.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a FtraceEventBundle message from the specified reader or buffer.\n             * @function decode\n             * @memberof perfetto.protos.FtraceEventBundle\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {perfetto.protos.FtraceEventBundle} FtraceEventBundle\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            FtraceEventBundle.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.FtraceEventBundle();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.cpu = reader.uint32();\n                        break;\n                    case 2:\n                        if (!(message.event && message.event.length))\n                            message.event = [];\n                        message.event.push($root.perfetto.protos.FtraceEvent.decode(reader, reader.uint32()));\n                        break;\n                    case 3:\n                        message.overwriteCount = reader.uint32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a FtraceEventBundle message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof perfetto.protos.FtraceEventBundle\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {perfetto.protos.FtraceEventBundle} FtraceEventBundle\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            FtraceEventBundle.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a FtraceEventBundle message.\n             * @function verify\n             * @memberof perfetto.protos.FtraceEventBundle\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            FtraceEventBundle.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.cpu != null && message.hasOwnProperty(\"cpu\"))\n                    if (!$util.isInteger(message.cpu))\n                        return \"cpu: integer expected\";\n                if (message.event != null && message.hasOwnProperty(\"event\")) {\n                    if (!Array.isArray(message.event))\n                        return \"event: array expected\";\n                    for (var i = 0; i < message.event.length; ++i) {\n                        var error = $root.perfetto.protos.FtraceEvent.verify(message.event[i]);\n                        if (error)\n                            return \"event.\" + error;\n                    }\n                }\n                if (message.overwriteCount != null && message.hasOwnProperty(\"overwriteCount\"))\n                    if (!$util.isInteger(message.overwriteCount))\n                        return \"overwriteCount: integer expected\";\n                return null;\n            };\n\n            /**\n             * Creates a FtraceEventBundle message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof perfetto.protos.FtraceEventBundle\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {perfetto.protos.FtraceEventBundle} FtraceEventBundle\n             */\n            FtraceEventBundle.fromObject = function fromObject(object) {\n                if (object instanceof $root.perfetto.protos.FtraceEventBundle)\n                    return object;\n                var message = new $root.perfetto.protos.FtraceEventBundle();\n                if (object.cpu != null)\n                    message.cpu = object.cpu >>> 0;\n                if (object.event) {\n                    if (!Array.isArray(object.event))\n                        throw TypeError(\".perfetto.protos.FtraceEventBundle.event: array expected\");\n                    message.event = [];\n                    for (var i = 0; i < object.event.length; ++i) {\n                        if (typeof object.event[i] !== \"object\")\n                            throw TypeError(\".perfetto.protos.FtraceEventBundle.event: object expected\");\n                        message.event[i] = $root.perfetto.protos.FtraceEvent.fromObject(object.event[i]);\n                    }\n                }\n                if (object.overwriteCount != null)\n                    message.overwriteCount = object.overwriteCount >>> 0;\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a FtraceEventBundle message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof perfetto.protos.FtraceEventBundle\n             * @static\n             * @param {perfetto.protos.FtraceEventBundle} message FtraceEventBundle\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            FtraceEventBundle.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults)\n                    object.event = [];\n                if (options.defaults) {\n                    object.cpu = 0;\n                    object.overwriteCount = 0;\n                }\n                if (message.cpu != null && message.hasOwnProperty(\"cpu\"))\n                    object.cpu = message.cpu;\n                if (message.event && message.event.length) {\n                    object.event = [];\n                    for (var j = 0; j < message.event.length; ++j)\n                        object.event[j] = $root.perfetto.protos.FtraceEvent.toObject(message.event[j], options);\n                }\n                if (message.overwriteCount != null && message.hasOwnProperty(\"overwriteCount\"))\n                    object.overwriteCount = message.overwriteCount;\n                return object;\n            };\n\n            /**\n             * Converts this FtraceEventBundle to JSON.\n             * @function toJSON\n             * @memberof perfetto.protos.FtraceEventBundle\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            FtraceEventBundle.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return FtraceEventBundle;\n        })();\n\n        protos.FtraceEvent = (function() {\n\n            /**\n             * Properties of a FtraceEvent.\n             * @memberof perfetto.protos\n             * @interface IFtraceEvent\n             * @property {number|Long|null} [timestamp] FtraceEvent timestamp\n             * @property {number|null} [pid] FtraceEvent pid\n             * @property {perfetto.protos.ISchedSwitchFtraceEvent|null} [schedSwitch] FtraceEvent schedSwitch\n             * @property {perfetto.protos.ICpufreqInteractiveAlreadyFtraceEvent|null} [cpufreqInteractiveAlready] FtraceEvent cpufreqInteractiveAlready\n             * @property {perfetto.protos.ICpufreqInteractiveBoostFtraceEvent|null} [cpufreqInteractiveBoost] FtraceEvent cpufreqInteractiveBoost\n             * @property {perfetto.protos.ICpufreqInteractiveNotyetFtraceEvent|null} [cpufreqInteractiveNotyet] FtraceEvent cpufreqInteractiveNotyet\n             * @property {perfetto.protos.ICpufreqInteractiveSetspeedFtraceEvent|null} [cpufreqInteractiveSetspeed] FtraceEvent cpufreqInteractiveSetspeed\n             * @property {perfetto.protos.ICpufreqInteractiveTargetFtraceEvent|null} [cpufreqInteractiveTarget] FtraceEvent cpufreqInteractiveTarget\n             * @property {perfetto.protos.ICpufreqInteractiveUnboostFtraceEvent|null} [cpufreqInteractiveUnboost] FtraceEvent cpufreqInteractiveUnboost\n             * @property {perfetto.protos.ICpuFrequencyFtraceEvent|null} [cpuFrequency] FtraceEvent cpuFrequency\n             * @property {perfetto.protos.ICpuFrequencyLimitsFtraceEvent|null} [cpuFrequencyLimits] FtraceEvent cpuFrequencyLimits\n             * @property {perfetto.protos.ICpuIdleFtraceEvent|null} [cpuIdle] FtraceEvent cpuIdle\n             * @property {perfetto.protos.IClockSetRateFtraceEvent|null} [clockSetRate] FtraceEvent clockSetRate\n             * @property {perfetto.protos.ISchedWakeupFtraceEvent|null} [schedWakeup] FtraceEvent schedWakeup\n             * @property {perfetto.protos.ISchedBlockedReasonFtraceEvent|null} [schedBlockedReason] FtraceEvent schedBlockedReason\n             * @property {perfetto.protos.ISchedCpuHotplugFtraceEvent|null} [schedCpuHotplug] FtraceEvent schedCpuHotplug\n             * @property {perfetto.protos.ILowmemoryKillFtraceEvent|null} [lowmemoryKill] FtraceEvent lowmemoryKill\n             * @property {perfetto.protos.IExt4DaWriteBeginFtraceEvent|null} [ext4DaWriteBegin] FtraceEvent ext4DaWriteBegin\n             * @property {perfetto.protos.IExt4DaWriteEndFtraceEvent|null} [ext4DaWriteEnd] FtraceEvent ext4DaWriteEnd\n             * @property {perfetto.protos.IExt4SyncFileEnterFtraceEvent|null} [ext4SyncFileEnter] FtraceEvent ext4SyncFileEnter\n             * @property {perfetto.protos.IExt4SyncFileExitFtraceEvent|null} [ext4SyncFileExit] FtraceEvent ext4SyncFileExit\n             * @property {perfetto.protos.IBlockRqIssueFtraceEvent|null} [blockRqIssue] FtraceEvent blockRqIssue\n             * @property {perfetto.protos.IMmVmscanDirectReclaimBeginFtraceEvent|null} [mmVmscanDirectReclaimBegin] FtraceEvent mmVmscanDirectReclaimBegin\n             * @property {perfetto.protos.IMmVmscanDirectReclaimEndFtraceEvent|null} [mmVmscanDirectReclaimEnd] FtraceEvent mmVmscanDirectReclaimEnd\n             * @property {perfetto.protos.IMmVmscanKswapdWakeFtraceEvent|null} [mmVmscanKswapdWake] FtraceEvent mmVmscanKswapdWake\n             * @property {perfetto.protos.IMmVmscanKswapdSleepFtraceEvent|null} [mmVmscanKswapdSleep] FtraceEvent mmVmscanKswapdSleep\n             * @property {perfetto.protos.IBinderTransactionFtraceEvent|null} [binderTransaction] FtraceEvent binderTransaction\n             * @property {perfetto.protos.IBinderTransactionReceivedFtraceEvent|null} [binderTransactionReceived] FtraceEvent binderTransactionReceived\n             * @property {perfetto.protos.IBinderLockFtraceEvent|null} [binderLock] FtraceEvent binderLock\n             * @property {perfetto.protos.IBinderLockedFtraceEvent|null} [binderLocked] FtraceEvent binderLocked\n             * @property {perfetto.protos.IBinderUnlockFtraceEvent|null} [binderUnlock] FtraceEvent binderUnlock\n             * @property {perfetto.protos.ICgroupAttachTaskFtraceEvent|null} [cgroupAttachTask] FtraceEvent cgroupAttachTask\n             * @property {perfetto.protos.ICgroupMkdirFtraceEvent|null} [cgroupMkdir] FtraceEvent cgroupMkdir\n             * @property {perfetto.protos.ICgroupRemountFtraceEvent|null} [cgroupRemount] FtraceEvent cgroupRemount\n             * @property {perfetto.protos.ICgroupRmdirFtraceEvent|null} [cgroupRmdir] FtraceEvent cgroupRmdir\n             * @property {perfetto.protos.ICgroupTransferTasksFtraceEvent|null} [cgroupTransferTasks] FtraceEvent cgroupTransferTasks\n             * @property {perfetto.protos.ICgroupDestroyRootFtraceEvent|null} [cgroupDestroyRoot] FtraceEvent cgroupDestroyRoot\n             * @property {perfetto.protos.ICgroupReleaseFtraceEvent|null} [cgroupRelease] FtraceEvent cgroupRelease\n             * @property {perfetto.protos.ICgroupRenameFtraceEvent|null} [cgroupRename] FtraceEvent cgroupRename\n             * @property {perfetto.protos.ICgroupSetupRootFtraceEvent|null} [cgroupSetupRoot] FtraceEvent cgroupSetupRoot\n             * @property {perfetto.protos.IBlockRqCompleteFtraceEvent|null} [blockRqComplete] FtraceEvent blockRqComplete\n             * @property {perfetto.protos.IExt4EsLookupExtentEnterFtraceEvent|null} [ext4EsLookupExtentEnter] FtraceEvent ext4EsLookupExtentEnter\n             * @property {perfetto.protos.IExt4EsLookupExtentExitFtraceEvent|null} [ext4EsLookupExtentExit] FtraceEvent ext4EsLookupExtentExit\n             * @property {perfetto.protos.IExt4LoadInodeFtraceEvent|null} [ext4LoadInode] FtraceEvent ext4LoadInode\n             * @property {perfetto.protos.IF2fsGetDataBlockFtraceEvent|null} [f2fsGetDataBlock] FtraceEvent f2fsGetDataBlock\n             * @property {perfetto.protos.IF2fsIgetFtraceEvent|null} [f2fsIget] FtraceEvent f2fsIget\n             * @property {perfetto.protos.IF2fsSyncFileEnterFtraceEvent|null} [f2fsSyncFileEnter] FtraceEvent f2fsSyncFileEnter\n             * @property {perfetto.protos.IF2fsSyncFileExitFtraceEvent|null} [f2fsSyncFileExit] FtraceEvent f2fsSyncFileExit\n             * @property {perfetto.protos.IF2fsWriteBeginFtraceEvent|null} [f2fsWriteBegin] FtraceEvent f2fsWriteBegin\n             * @property {perfetto.protos.IF2fsWriteEndFtraceEvent|null} [f2fsWriteEnd] FtraceEvent f2fsWriteEnd\n             */\n\n            /**\n             * Constructs a new FtraceEvent.\n             * @memberof perfetto.protos\n             * @classdesc Represents a FtraceEvent.\n             * @implements IFtraceEvent\n             * @constructor\n             * @param {perfetto.protos.IFtraceEvent=} [properties] Properties to set\n             */\n            function FtraceEvent(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * FtraceEvent timestamp.\n             * @member {number|Long} timestamp\n             * @memberof perfetto.protos.FtraceEvent\n             * @instance\n             */\n            FtraceEvent.prototype.timestamp = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n            /**\n             * FtraceEvent pid.\n             * @member {number} pid\n             * @memberof perfetto.protos.FtraceEvent\n             * @instance\n             */\n            FtraceEvent.prototype.pid = 0;\n\n            /**\n             * FtraceEvent schedSwitch.\n             * @member {perfetto.protos.ISchedSwitchFtraceEvent|null|undefined} schedSwitch\n             * @memberof perfetto.protos.FtraceEvent\n             * @instance\n             */\n            FtraceEvent.prototype.schedSwitch = null;\n\n            /**\n             * FtraceEvent cpufreqInteractiveAlready.\n             * @member {perfetto.protos.ICpufreqInteractiveAlreadyFtraceEvent|null|undefined} cpufreqInteractiveAlready\n             * @memberof perfetto.protos.FtraceEvent\n             * @instance\n             */\n            FtraceEvent.prototype.cpufreqInteractiveAlready = null;\n\n            /**\n             * FtraceEvent cpufreqInteractiveBoost.\n             * @member {perfetto.protos.ICpufreqInteractiveBoostFtraceEvent|null|undefined} cpufreqInteractiveBoost\n             * @memberof perfetto.protos.FtraceEvent\n             * @instance\n             */\n            FtraceEvent.prototype.cpufreqInteractiveBoost = null;\n\n            /**\n             * FtraceEvent cpufreqInteractiveNotyet.\n             * @member {perfetto.protos.ICpufreqInteractiveNotyetFtraceEvent|null|undefined} cpufreqInteractiveNotyet\n             * @memberof perfetto.protos.FtraceEvent\n             * @instance\n             */\n            FtraceEvent.prototype.cpufreqInteractiveNotyet = null;\n\n            /**\n             * FtraceEvent cpufreqInteractiveSetspeed.\n             * @member {perfetto.protos.ICpufreqInteractiveSetspeedFtraceEvent|null|undefined} cpufreqInteractiveSetspeed\n             * @memberof perfetto.protos.FtraceEvent\n             * @instance\n             */\n            FtraceEvent.prototype.cpufreqInteractiveSetspeed = null;\n\n            /**\n             * FtraceEvent cpufreqInteractiveTarget.\n             * @member {perfetto.protos.ICpufreqInteractiveTargetFtraceEvent|null|undefined} cpufreqInteractiveTarget\n             * @memberof perfetto.protos.FtraceEvent\n             * @instance\n             */\n            FtraceEvent.prototype.cpufreqInteractiveTarget = null;\n\n            /**\n             * FtraceEvent cpufreqInteractiveUnboost.\n             * @member {perfetto.protos.ICpufreqInteractiveUnboostFtraceEvent|null|undefined} cpufreqInteractiveUnboost\n             * @memberof perfetto.protos.FtraceEvent\n             * @instance\n             */\n            FtraceEvent.prototype.cpufreqInteractiveUnboost = null;\n\n            /**\n             * FtraceEvent cpuFrequency.\n             * @member {perfetto.protos.ICpuFrequencyFtraceEvent|null|undefined} cpuFrequency\n             * @memberof perfetto.protos.FtraceEvent\n             * @instance\n             */\n            FtraceEvent.prototype.cpuFrequency = null;\n\n            /**\n             * FtraceEvent cpuFrequencyLimits.\n             * @member {perfetto.protos.ICpuFrequencyLimitsFtraceEvent|null|undefined} cpuFrequencyLimits\n             * @memberof perfetto.protos.FtraceEvent\n             * @instance\n             */\n            FtraceEvent.prototype.cpuFrequencyLimits = null;\n\n            /**\n             * FtraceEvent cpuIdle.\n             * @member {perfetto.protos.ICpuIdleFtraceEvent|null|undefined} cpuIdle\n             * @memberof perfetto.protos.FtraceEvent\n             * @instance\n             */\n            FtraceEvent.prototype.cpuIdle = null;\n\n            /**\n             * FtraceEvent clockSetRate.\n             * @member {perfetto.protos.IClockSetRateFtraceEvent|null|undefined} clockSetRate\n             * @memberof perfetto.protos.FtraceEvent\n             * @instance\n             */\n            FtraceEvent.prototype.clockSetRate = null;\n\n            /**\n             * FtraceEvent schedWakeup.\n             * @member {perfetto.protos.ISchedWakeupFtraceEvent|null|undefined} schedWakeup\n             * @memberof perfetto.protos.FtraceEvent\n             * @instance\n             */\n            FtraceEvent.prototype.schedWakeup = null;\n\n            /**\n             * FtraceEvent schedBlockedReason.\n             * @member {perfetto.protos.ISchedBlockedReasonFtraceEvent|null|undefined} schedBlockedReason\n             * @memberof perfetto.protos.FtraceEvent\n             * @instance\n             */\n            FtraceEvent.prototype.schedBlockedReason = null;\n\n            /**\n             * FtraceEvent schedCpuHotplug.\n             * @member {perfetto.protos.ISchedCpuHotplugFtraceEvent|null|undefined} schedCpuHotplug\n             * @memberof perfetto.protos.FtraceEvent\n             * @instance\n             */\n            FtraceEvent.prototype.schedCpuHotplug = null;\n\n            /**\n             * FtraceEvent lowmemoryKill.\n             * @member {perfetto.protos.ILowmemoryKillFtraceEvent|null|undefined} lowmemoryKill\n             * @memberof perfetto.protos.FtraceEvent\n             * @instance\n             */\n            FtraceEvent.prototype.lowmemoryKill = null;\n\n            /**\n             * FtraceEvent ext4DaWriteBegin.\n             * @member {perfetto.protos.IExt4DaWriteBeginFtraceEvent|null|undefined} ext4DaWriteBegin\n             * @memberof perfetto.protos.FtraceEvent\n             * @instance\n             */\n            FtraceEvent.prototype.ext4DaWriteBegin = null;\n\n            /**\n             * FtraceEvent ext4DaWriteEnd.\n             * @member {perfetto.protos.IExt4DaWriteEndFtraceEvent|null|undefined} ext4DaWriteEnd\n             * @memberof perfetto.protos.FtraceEvent\n             * @instance\n             */\n            FtraceEvent.prototype.ext4DaWriteEnd = null;\n\n            /**\n             * FtraceEvent ext4SyncFileEnter.\n             * @member {perfetto.protos.IExt4SyncFileEnterFtraceEvent|null|undefined} ext4SyncFileEnter\n             * @memberof perfetto.protos.FtraceEvent\n             * @instance\n             */\n            FtraceEvent.prototype.ext4SyncFileEnter = null;\n\n            /**\n             * FtraceEvent ext4SyncFileExit.\n             * @member {perfetto.protos.IExt4SyncFileExitFtraceEvent|null|undefined} ext4SyncFileExit\n             * @memberof perfetto.protos.FtraceEvent\n             * @instance\n             */\n            FtraceEvent.prototype.ext4SyncFileExit = null;\n\n            /**\n             * FtraceEvent blockRqIssue.\n             * @member {perfetto.protos.IBlockRqIssueFtraceEvent|null|undefined} blockRqIssue\n             * @memberof perfetto.protos.FtraceEvent\n             * @instance\n             */\n            FtraceEvent.prototype.blockRqIssue = null;\n\n            /**\n             * FtraceEvent mmVmscanDirectReclaimBegin.\n             * @member {perfetto.protos.IMmVmscanDirectReclaimBeginFtraceEvent|null|undefined} mmVmscanDirectReclaimBegin\n             * @memberof perfetto.protos.FtraceEvent\n             * @instance\n             */\n            FtraceEvent.prototype.mmVmscanDirectReclaimBegin = null;\n\n            /**\n             * FtraceEvent mmVmscanDirectReclaimEnd.\n             * @member {perfetto.protos.IMmVmscanDirectReclaimEndFtraceEvent|null|undefined} mmVmscanDirectReclaimEnd\n             * @memberof perfetto.protos.FtraceEvent\n             * @instance\n             */\n            FtraceEvent.prototype.mmVmscanDirectReclaimEnd = null;\n\n            /**\n             * FtraceEvent mmVmscanKswapdWake.\n             * @member {perfetto.protos.IMmVmscanKswapdWakeFtraceEvent|null|undefined} mmVmscanKswapdWake\n             * @memberof perfetto.protos.FtraceEvent\n             * @instance\n             */\n            FtraceEvent.prototype.mmVmscanKswapdWake = null;\n\n            /**\n             * FtraceEvent mmVmscanKswapdSleep.\n             * @member {perfetto.protos.IMmVmscanKswapdSleepFtraceEvent|null|undefined} mmVmscanKswapdSleep\n             * @memberof perfetto.protos.FtraceEvent\n             * @instance\n             */\n            FtraceEvent.prototype.mmVmscanKswapdSleep = null;\n\n            /**\n             * FtraceEvent binderTransaction.\n             * @member {perfetto.protos.IBinderTransactionFtraceEvent|null|undefined} binderTransaction\n             * @memberof perfetto.protos.FtraceEvent\n             * @instance\n             */\n            FtraceEvent.prototype.binderTransaction = null;\n\n            /**\n             * FtraceEvent binderTransactionReceived.\n             * @member {perfetto.protos.IBinderTransactionReceivedFtraceEvent|null|undefined} binderTransactionReceived\n             * @memberof perfetto.protos.FtraceEvent\n             * @instance\n             */\n            FtraceEvent.prototype.binderTransactionReceived = null;\n\n            /**\n             * FtraceEvent binderLock.\n             * @member {perfetto.protos.IBinderLockFtraceEvent|null|undefined} binderLock\n             * @memberof perfetto.protos.FtraceEvent\n             * @instance\n             */\n            FtraceEvent.prototype.binderLock = null;\n\n            /**\n             * FtraceEvent binderLocked.\n             * @member {perfetto.protos.IBinderLockedFtraceEvent|null|undefined} binderLocked\n             * @memberof perfetto.protos.FtraceEvent\n             * @instance\n             */\n            FtraceEvent.prototype.binderLocked = null;\n\n            /**\n             * FtraceEvent binderUnlock.\n             * @member {perfetto.protos.IBinderUnlockFtraceEvent|null|undefined} binderUnlock\n             * @memberof perfetto.protos.FtraceEvent\n             * @instance\n             */\n            FtraceEvent.prototype.binderUnlock = null;\n\n            /**\n             * FtraceEvent cgroupAttachTask.\n             * @member {perfetto.protos.ICgroupAttachTaskFtraceEvent|null|undefined} cgroupAttachTask\n             * @memberof perfetto.protos.FtraceEvent\n             * @instance\n             */\n            FtraceEvent.prototype.cgroupAttachTask = null;\n\n            /**\n             * FtraceEvent cgroupMkdir.\n             * @member {perfetto.protos.ICgroupMkdirFtraceEvent|null|undefined} cgroupMkdir\n             * @memberof perfetto.protos.FtraceEvent\n             * @instance\n             */\n            FtraceEvent.prototype.cgroupMkdir = null;\n\n            /**\n             * FtraceEvent cgroupRemount.\n             * @member {perfetto.protos.ICgroupRemountFtraceEvent|null|undefined} cgroupRemount\n             * @memberof perfetto.protos.FtraceEvent\n             * @instance\n             */\n            FtraceEvent.prototype.cgroupRemount = null;\n\n            /**\n             * FtraceEvent cgroupRmdir.\n             * @member {perfetto.protos.ICgroupRmdirFtraceEvent|null|undefined} cgroupRmdir\n             * @memberof perfetto.protos.FtraceEvent\n             * @instance\n             */\n            FtraceEvent.prototype.cgroupRmdir = null;\n\n            /**\n             * FtraceEvent cgroupTransferTasks.\n             * @member {perfetto.protos.ICgroupTransferTasksFtraceEvent|null|undefined} cgroupTransferTasks\n             * @memberof perfetto.protos.FtraceEvent\n             * @instance\n             */\n            FtraceEvent.prototype.cgroupTransferTasks = null;\n\n            /**\n             * FtraceEvent cgroupDestroyRoot.\n             * @member {perfetto.protos.ICgroupDestroyRootFtraceEvent|null|undefined} cgroupDestroyRoot\n             * @memberof perfetto.protos.FtraceEvent\n             * @instance\n             */\n            FtraceEvent.prototype.cgroupDestroyRoot = null;\n\n            /**\n             * FtraceEvent cgroupRelease.\n             * @member {perfetto.protos.ICgroupReleaseFtraceEvent|null|undefined} cgroupRelease\n             * @memberof perfetto.protos.FtraceEvent\n             * @instance\n             */\n            FtraceEvent.prototype.cgroupRelease = null;\n\n            /**\n             * FtraceEvent cgroupRename.\n             * @member {perfetto.protos.ICgroupRenameFtraceEvent|null|undefined} cgroupRename\n             * @memberof perfetto.protos.FtraceEvent\n             * @instance\n             */\n            FtraceEvent.prototype.cgroupRename = null;\n\n            /**\n             * FtraceEvent cgroupSetupRoot.\n             * @member {perfetto.protos.ICgroupSetupRootFtraceEvent|null|undefined} cgroupSetupRoot\n             * @memberof perfetto.protos.FtraceEvent\n             * @instance\n             */\n            FtraceEvent.prototype.cgroupSetupRoot = null;\n\n            /**\n             * FtraceEvent blockRqComplete.\n             * @member {perfetto.protos.IBlockRqCompleteFtraceEvent|null|undefined} blockRqComplete\n             * @memberof perfetto.protos.FtraceEvent\n             * @instance\n             */\n            FtraceEvent.prototype.blockRqComplete = null;\n\n            /**\n             * FtraceEvent ext4EsLookupExtentEnter.\n             * @member {perfetto.protos.IExt4EsLookupExtentEnterFtraceEvent|null|undefined} ext4EsLookupExtentEnter\n             * @memberof perfetto.protos.FtraceEvent\n             * @instance\n             */\n            FtraceEvent.prototype.ext4EsLookupExtentEnter = null;\n\n            /**\n             * FtraceEvent ext4EsLookupExtentExit.\n             * @member {perfetto.protos.IExt4EsLookupExtentExitFtraceEvent|null|undefined} ext4EsLookupExtentExit\n             * @memberof perfetto.protos.FtraceEvent\n             * @instance\n             */\n            FtraceEvent.prototype.ext4EsLookupExtentExit = null;\n\n            /**\n             * FtraceEvent ext4LoadInode.\n             * @member {perfetto.protos.IExt4LoadInodeFtraceEvent|null|undefined} ext4LoadInode\n             * @memberof perfetto.protos.FtraceEvent\n             * @instance\n             */\n            FtraceEvent.prototype.ext4LoadInode = null;\n\n            /**\n             * FtraceEvent f2fsGetDataBlock.\n             * @member {perfetto.protos.IF2fsGetDataBlockFtraceEvent|null|undefined} f2fsGetDataBlock\n             * @memberof perfetto.protos.FtraceEvent\n             * @instance\n             */\n            FtraceEvent.prototype.f2fsGetDataBlock = null;\n\n            /**\n             * FtraceEvent f2fsIget.\n             * @member {perfetto.protos.IF2fsIgetFtraceEvent|null|undefined} f2fsIget\n             * @memberof perfetto.protos.FtraceEvent\n             * @instance\n             */\n            FtraceEvent.prototype.f2fsIget = null;\n\n            /**\n             * FtraceEvent f2fsSyncFileEnter.\n             * @member {perfetto.protos.IF2fsSyncFileEnterFtraceEvent|null|undefined} f2fsSyncFileEnter\n             * @memberof perfetto.protos.FtraceEvent\n             * @instance\n             */\n            FtraceEvent.prototype.f2fsSyncFileEnter = null;\n\n            /**\n             * FtraceEvent f2fsSyncFileExit.\n             * @member {perfetto.protos.IF2fsSyncFileExitFtraceEvent|null|undefined} f2fsSyncFileExit\n             * @memberof perfetto.protos.FtraceEvent\n             * @instance\n             */\n            FtraceEvent.prototype.f2fsSyncFileExit = null;\n\n            /**\n             * FtraceEvent f2fsWriteBegin.\n             * @member {perfetto.protos.IF2fsWriteBeginFtraceEvent|null|undefined} f2fsWriteBegin\n             * @memberof perfetto.protos.FtraceEvent\n             * @instance\n             */\n            FtraceEvent.prototype.f2fsWriteBegin = null;\n\n            /**\n             * FtraceEvent f2fsWriteEnd.\n             * @member {perfetto.protos.IF2fsWriteEndFtraceEvent|null|undefined} f2fsWriteEnd\n             * @memberof perfetto.protos.FtraceEvent\n             * @instance\n             */\n            FtraceEvent.prototype.f2fsWriteEnd = null;\n\n            // OneOf field names bound to virtual getters and setters\n            var $oneOfFields;\n\n            /**\n             * FtraceEvent event.\n             * @member {\"schedSwitch\"|\"cpufreqInteractiveAlready\"|\"cpufreqInteractiveBoost\"|\"cpufreqInteractiveNotyet\"|\"cpufreqInteractiveSetspeed\"|\"cpufreqInteractiveTarget\"|\"cpufreqInteractiveUnboost\"|\"cpuFrequency\"|\"cpuFrequencyLimits\"|\"cpuIdle\"|\"clockSetRate\"|\"schedWakeup\"|\"schedBlockedReason\"|\"schedCpuHotplug\"|\"lowmemoryKill\"|\"ext4DaWriteBegin\"|\"ext4DaWriteEnd\"|\"ext4SyncFileEnter\"|\"ext4SyncFileExit\"|\"blockRqIssue\"|\"mmVmscanDirectReclaimBegin\"|\"mmVmscanDirectReclaimEnd\"|\"mmVmscanKswapdWake\"|\"mmVmscanKswapdSleep\"|\"binderTransaction\"|\"binderTransactionReceived\"|\"binderLock\"|\"binderLocked\"|\"binderUnlock\"|\"cgroupAttachTask\"|\"cgroupMkdir\"|\"cgroupRemount\"|\"cgroupRmdir\"|\"cgroupTransferTasks\"|\"cgroupDestroyRoot\"|\"cgroupRelease\"|\"cgroupRename\"|\"cgroupSetupRoot\"|\"blockRqComplete\"|\"ext4EsLookupExtentEnter\"|\"ext4EsLookupExtentExit\"|\"ext4LoadInode\"|\"f2fsGetDataBlock\"|\"f2fsIget\"|\"f2fsSyncFileEnter\"|\"f2fsSyncFileExit\"|\"f2fsWriteBegin\"|\"f2fsWriteEnd\"|undefined} event\n             * @memberof perfetto.protos.FtraceEvent\n             * @instance\n             */\n            Object.defineProperty(FtraceEvent.prototype, \"event\", {\n                get: $util.oneOfGetter($oneOfFields = [\"schedSwitch\", \"cpufreqInteractiveAlready\", \"cpufreqInteractiveBoost\", \"cpufreqInteractiveNotyet\", \"cpufreqInteractiveSetspeed\", \"cpufreqInteractiveTarget\", \"cpufreqInteractiveUnboost\", \"cpuFrequency\", \"cpuFrequencyLimits\", \"cpuIdle\", \"clockSetRate\", \"schedWakeup\", \"schedBlockedReason\", \"schedCpuHotplug\", \"lowmemoryKill\", \"ext4DaWriteBegin\", \"ext4DaWriteEnd\", \"ext4SyncFileEnter\", \"ext4SyncFileExit\", \"blockRqIssue\", \"mmVmscanDirectReclaimBegin\", \"mmVmscanDirectReclaimEnd\", \"mmVmscanKswapdWake\", \"mmVmscanKswapdSleep\", \"binderTransaction\", \"binderTransactionReceived\", \"binderLock\", \"binderLocked\", \"binderUnlock\", \"cgroupAttachTask\", \"cgroupMkdir\", \"cgroupRemount\", \"cgroupRmdir\", \"cgroupTransferTasks\", \"cgroupDestroyRoot\", \"cgroupRelease\", \"cgroupRename\", \"cgroupSetupRoot\", \"blockRqComplete\", \"ext4EsLookupExtentEnter\", \"ext4EsLookupExtentExit\", \"ext4LoadInode\", \"f2fsGetDataBlock\", \"f2fsIget\", \"f2fsSyncFileEnter\", \"f2fsSyncFileExit\", \"f2fsWriteBegin\", \"f2fsWriteEnd\"]),\n                set: $util.oneOfSetter($oneOfFields)\n            });\n\n            /**\n             * Creates a new FtraceEvent instance using the specified properties.\n             * @function create\n             * @memberof perfetto.protos.FtraceEvent\n             * @static\n             * @param {perfetto.protos.IFtraceEvent=} [properties] Properties to set\n             * @returns {perfetto.protos.FtraceEvent} FtraceEvent instance\n             */\n            FtraceEvent.create = function create(properties) {\n                return new FtraceEvent(properties);\n            };\n\n            /**\n             * Encodes the specified FtraceEvent message. Does not implicitly {@link perfetto.protos.FtraceEvent.verify|verify} messages.\n             * @function encode\n             * @memberof perfetto.protos.FtraceEvent\n             * @static\n             * @param {perfetto.protos.IFtraceEvent} message FtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            FtraceEvent.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.timestamp != null && message.hasOwnProperty(\"timestamp\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.timestamp);\n                if (message.pid != null && message.hasOwnProperty(\"pid\"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.pid);\n                if (message.schedSwitch != null && message.hasOwnProperty(\"schedSwitch\"))\n                    $root.perfetto.protos.SchedSwitchFtraceEvent.encode(message.schedSwitch, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();\n                if (message.cpufreqInteractiveAlready != null && message.hasOwnProperty(\"cpufreqInteractiveAlready\"))\n                    $root.perfetto.protos.CpufreqInteractiveAlreadyFtraceEvent.encode(message.cpufreqInteractiveAlready, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n                if (message.cpufreqInteractiveBoost != null && message.hasOwnProperty(\"cpufreqInteractiveBoost\"))\n                    $root.perfetto.protos.CpufreqInteractiveBoostFtraceEvent.encode(message.cpufreqInteractiveBoost, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();\n                if (message.cpufreqInteractiveNotyet != null && message.hasOwnProperty(\"cpufreqInteractiveNotyet\"))\n                    $root.perfetto.protos.CpufreqInteractiveNotyetFtraceEvent.encode(message.cpufreqInteractiveNotyet, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();\n                if (message.cpufreqInteractiveSetspeed != null && message.hasOwnProperty(\"cpufreqInteractiveSetspeed\"))\n                    $root.perfetto.protos.CpufreqInteractiveSetspeedFtraceEvent.encode(message.cpufreqInteractiveSetspeed, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();\n                if (message.cpufreqInteractiveTarget != null && message.hasOwnProperty(\"cpufreqInteractiveTarget\"))\n                    $root.perfetto.protos.CpufreqInteractiveTargetFtraceEvent.encode(message.cpufreqInteractiveTarget, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();\n                if (message.cpufreqInteractiveUnboost != null && message.hasOwnProperty(\"cpufreqInteractiveUnboost\"))\n                    $root.perfetto.protos.CpufreqInteractiveUnboostFtraceEvent.encode(message.cpufreqInteractiveUnboost, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();\n                if (message.cpuFrequency != null && message.hasOwnProperty(\"cpuFrequency\"))\n                    $root.perfetto.protos.CpuFrequencyFtraceEvent.encode(message.cpuFrequency, writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();\n                if (message.cpuFrequencyLimits != null && message.hasOwnProperty(\"cpuFrequencyLimits\"))\n                    $root.perfetto.protos.CpuFrequencyLimitsFtraceEvent.encode(message.cpuFrequencyLimits, writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();\n                if (message.cpuIdle != null && message.hasOwnProperty(\"cpuIdle\"))\n                    $root.perfetto.protos.CpuIdleFtraceEvent.encode(message.cpuIdle, writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();\n                if (message.clockSetRate != null && message.hasOwnProperty(\"clockSetRate\"))\n                    $root.perfetto.protos.ClockSetRateFtraceEvent.encode(message.clockSetRate, writer.uint32(/* id 16, wireType 2 =*/130).fork()).ldelim();\n                if (message.schedWakeup != null && message.hasOwnProperty(\"schedWakeup\"))\n                    $root.perfetto.protos.SchedWakeupFtraceEvent.encode(message.schedWakeup, writer.uint32(/* id 17, wireType 2 =*/138).fork()).ldelim();\n                if (message.schedBlockedReason != null && message.hasOwnProperty(\"schedBlockedReason\"))\n                    $root.perfetto.protos.SchedBlockedReasonFtraceEvent.encode(message.schedBlockedReason, writer.uint32(/* id 18, wireType 2 =*/146).fork()).ldelim();\n                if (message.schedCpuHotplug != null && message.hasOwnProperty(\"schedCpuHotplug\"))\n                    $root.perfetto.protos.SchedCpuHotplugFtraceEvent.encode(message.schedCpuHotplug, writer.uint32(/* id 19, wireType 2 =*/154).fork()).ldelim();\n                if (message.lowmemoryKill != null && message.hasOwnProperty(\"lowmemoryKill\"))\n                    $root.perfetto.protos.LowmemoryKillFtraceEvent.encode(message.lowmemoryKill, writer.uint32(/* id 35, wireType 2 =*/282).fork()).ldelim();\n                if (message.ext4DaWriteBegin != null && message.hasOwnProperty(\"ext4DaWriteBegin\"))\n                    $root.perfetto.protos.Ext4DaWriteBeginFtraceEvent.encode(message.ext4DaWriteBegin, writer.uint32(/* id 41, wireType 2 =*/330).fork()).ldelim();\n                if (message.ext4DaWriteEnd != null && message.hasOwnProperty(\"ext4DaWriteEnd\"))\n                    $root.perfetto.protos.Ext4DaWriteEndFtraceEvent.encode(message.ext4DaWriteEnd, writer.uint32(/* id 42, wireType 2 =*/338).fork()).ldelim();\n                if (message.ext4SyncFileEnter != null && message.hasOwnProperty(\"ext4SyncFileEnter\"))\n                    $root.perfetto.protos.Ext4SyncFileEnterFtraceEvent.encode(message.ext4SyncFileEnter, writer.uint32(/* id 43, wireType 2 =*/346).fork()).ldelim();\n                if (message.ext4SyncFileExit != null && message.hasOwnProperty(\"ext4SyncFileExit\"))\n                    $root.perfetto.protos.Ext4SyncFileExitFtraceEvent.encode(message.ext4SyncFileExit, writer.uint32(/* id 44, wireType 2 =*/354).fork()).ldelim();\n                if (message.blockRqIssue != null && message.hasOwnProperty(\"blockRqIssue\"))\n                    $root.perfetto.protos.BlockRqIssueFtraceEvent.encode(message.blockRqIssue, writer.uint32(/* id 45, wireType 2 =*/362).fork()).ldelim();\n                if (message.mmVmscanDirectReclaimBegin != null && message.hasOwnProperty(\"mmVmscanDirectReclaimBegin\"))\n                    $root.perfetto.protos.MmVmscanDirectReclaimBeginFtraceEvent.encode(message.mmVmscanDirectReclaimBegin, writer.uint32(/* id 46, wireType 2 =*/370).fork()).ldelim();\n                if (message.mmVmscanDirectReclaimEnd != null && message.hasOwnProperty(\"mmVmscanDirectReclaimEnd\"))\n                    $root.perfetto.protos.MmVmscanDirectReclaimEndFtraceEvent.encode(message.mmVmscanDirectReclaimEnd, writer.uint32(/* id 47, wireType 2 =*/378).fork()).ldelim();\n                if (message.mmVmscanKswapdWake != null && message.hasOwnProperty(\"mmVmscanKswapdWake\"))\n                    $root.perfetto.protos.MmVmscanKswapdWakeFtraceEvent.encode(message.mmVmscanKswapdWake, writer.uint32(/* id 48, wireType 2 =*/386).fork()).ldelim();\n                if (message.mmVmscanKswapdSleep != null && message.hasOwnProperty(\"mmVmscanKswapdSleep\"))\n                    $root.perfetto.protos.MmVmscanKswapdSleepFtraceEvent.encode(message.mmVmscanKswapdSleep, writer.uint32(/* id 49, wireType 2 =*/394).fork()).ldelim();\n                if (message.binderTransaction != null && message.hasOwnProperty(\"binderTransaction\"))\n                    $root.perfetto.protos.BinderTransactionFtraceEvent.encode(message.binderTransaction, writer.uint32(/* id 50, wireType 2 =*/402).fork()).ldelim();\n                if (message.binderTransactionReceived != null && message.hasOwnProperty(\"binderTransactionReceived\"))\n                    $root.perfetto.protos.BinderTransactionReceivedFtraceEvent.encode(message.binderTransactionReceived, writer.uint32(/* id 51, wireType 2 =*/410).fork()).ldelim();\n                if (message.binderLock != null && message.hasOwnProperty(\"binderLock\"))\n                    $root.perfetto.protos.BinderLockFtraceEvent.encode(message.binderLock, writer.uint32(/* id 53, wireType 2 =*/426).fork()).ldelim();\n                if (message.binderLocked != null && message.hasOwnProperty(\"binderLocked\"))\n                    $root.perfetto.protos.BinderLockedFtraceEvent.encode(message.binderLocked, writer.uint32(/* id 54, wireType 2 =*/434).fork()).ldelim();\n                if (message.binderUnlock != null && message.hasOwnProperty(\"binderUnlock\"))\n                    $root.perfetto.protos.BinderUnlockFtraceEvent.encode(message.binderUnlock, writer.uint32(/* id 55, wireType 2 =*/442).fork()).ldelim();\n                if (message.cgroupAttachTask != null && message.hasOwnProperty(\"cgroupAttachTask\"))\n                    $root.perfetto.protos.CgroupAttachTaskFtraceEvent.encode(message.cgroupAttachTask, writer.uint32(/* id 67, wireType 2 =*/538).fork()).ldelim();\n                if (message.cgroupMkdir != null && message.hasOwnProperty(\"cgroupMkdir\"))\n                    $root.perfetto.protos.CgroupMkdirFtraceEvent.encode(message.cgroupMkdir, writer.uint32(/* id 68, wireType 2 =*/546).fork()).ldelim();\n                if (message.cgroupRemount != null && message.hasOwnProperty(\"cgroupRemount\"))\n                    $root.perfetto.protos.CgroupRemountFtraceEvent.encode(message.cgroupRemount, writer.uint32(/* id 69, wireType 2 =*/554).fork()).ldelim();\n                if (message.cgroupRmdir != null && message.hasOwnProperty(\"cgroupRmdir\"))\n                    $root.perfetto.protos.CgroupRmdirFtraceEvent.encode(message.cgroupRmdir, writer.uint32(/* id 70, wireType 2 =*/562).fork()).ldelim();\n                if (message.cgroupTransferTasks != null && message.hasOwnProperty(\"cgroupTransferTasks\"))\n                    $root.perfetto.protos.CgroupTransferTasksFtraceEvent.encode(message.cgroupTransferTasks, writer.uint32(/* id 71, wireType 2 =*/570).fork()).ldelim();\n                if (message.cgroupDestroyRoot != null && message.hasOwnProperty(\"cgroupDestroyRoot\"))\n                    $root.perfetto.protos.CgroupDestroyRootFtraceEvent.encode(message.cgroupDestroyRoot, writer.uint32(/* id 72, wireType 2 =*/578).fork()).ldelim();\n                if (message.cgroupRelease != null && message.hasOwnProperty(\"cgroupRelease\"))\n                    $root.perfetto.protos.CgroupReleaseFtraceEvent.encode(message.cgroupRelease, writer.uint32(/* id 73, wireType 2 =*/586).fork()).ldelim();\n                if (message.cgroupRename != null && message.hasOwnProperty(\"cgroupRename\"))\n                    $root.perfetto.protos.CgroupRenameFtraceEvent.encode(message.cgroupRename, writer.uint32(/* id 74, wireType 2 =*/594).fork()).ldelim();\n                if (message.cgroupSetupRoot != null && message.hasOwnProperty(\"cgroupSetupRoot\"))\n                    $root.perfetto.protos.CgroupSetupRootFtraceEvent.encode(message.cgroupSetupRoot, writer.uint32(/* id 75, wireType 2 =*/602).fork()).ldelim();\n                if (message.blockRqComplete != null && message.hasOwnProperty(\"blockRqComplete\"))\n                    $root.perfetto.protos.BlockRqCompleteFtraceEvent.encode(message.blockRqComplete, writer.uint32(/* id 125, wireType 2 =*/1002).fork()).ldelim();\n                if (message.ext4EsLookupExtentEnter != null && message.hasOwnProperty(\"ext4EsLookupExtentEnter\"))\n                    $root.perfetto.protos.Ext4EsLookupExtentEnterFtraceEvent.encode(message.ext4EsLookupExtentEnter, writer.uint32(/* id 153, wireType 2 =*/1226).fork()).ldelim();\n                if (message.ext4EsLookupExtentExit != null && message.hasOwnProperty(\"ext4EsLookupExtentExit\"))\n                    $root.perfetto.protos.Ext4EsLookupExtentExitFtraceEvent.encode(message.ext4EsLookupExtentExit, writer.uint32(/* id 154, wireType 2 =*/1234).fork()).ldelim();\n                if (message.ext4LoadInode != null && message.hasOwnProperty(\"ext4LoadInode\"))\n                    $root.perfetto.protos.Ext4LoadInodeFtraceEvent.encode(message.ext4LoadInode, writer.uint32(/* id 190, wireType 2 =*/1522).fork()).ldelim();\n                if (message.f2fsGetDataBlock != null && message.hasOwnProperty(\"f2fsGetDataBlock\"))\n                    $root.perfetto.protos.F2fsGetDataBlockFtraceEvent.encode(message.f2fsGetDataBlock, writer.uint32(/* id 246, wireType 2 =*/1970).fork()).ldelim();\n                if (message.f2fsIget != null && message.hasOwnProperty(\"f2fsIget\"))\n                    $root.perfetto.protos.F2fsIgetFtraceEvent.encode(message.f2fsIget, writer.uint32(/* id 248, wireType 2 =*/1986).fork()).ldelim();\n                if (message.f2fsSyncFileEnter != null && message.hasOwnProperty(\"f2fsSyncFileEnter\"))\n                    $root.perfetto.protos.F2fsSyncFileEnterFtraceEvent.encode(message.f2fsSyncFileEnter, writer.uint32(/* id 255, wireType 2 =*/2042).fork()).ldelim();\n                if (message.f2fsSyncFileExit != null && message.hasOwnProperty(\"f2fsSyncFileExit\"))\n                    $root.perfetto.protos.F2fsSyncFileExitFtraceEvent.encode(message.f2fsSyncFileExit, writer.uint32(/* id 256, wireType 2 =*/2050).fork()).ldelim();\n                if (message.f2fsWriteBegin != null && message.hasOwnProperty(\"f2fsWriteBegin\"))\n                    $root.perfetto.protos.F2fsWriteBeginFtraceEvent.encode(message.f2fsWriteBegin, writer.uint32(/* id 271, wireType 2 =*/2170).fork()).ldelim();\n                if (message.f2fsWriteEnd != null && message.hasOwnProperty(\"f2fsWriteEnd\"))\n                    $root.perfetto.protos.F2fsWriteEndFtraceEvent.encode(message.f2fsWriteEnd, writer.uint32(/* id 273, wireType 2 =*/2186).fork()).ldelim();\n                return writer;\n            };\n\n            /**\n             * Encodes the specified FtraceEvent message, length delimited. Does not implicitly {@link perfetto.protos.FtraceEvent.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof perfetto.protos.FtraceEvent\n             * @static\n             * @param {perfetto.protos.IFtraceEvent} message FtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            FtraceEvent.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a FtraceEvent message from the specified reader or buffer.\n             * @function decode\n             * @memberof perfetto.protos.FtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {perfetto.protos.FtraceEvent} FtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            FtraceEvent.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.FtraceEvent();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.timestamp = reader.uint64();\n                        break;\n                    case 2:\n                        message.pid = reader.uint32();\n                        break;\n                    case 4:\n                        message.schedSwitch = $root.perfetto.protos.SchedSwitchFtraceEvent.decode(reader, reader.uint32());\n                        break;\n                    case 5:\n                        message.cpufreqInteractiveAlready = $root.perfetto.protos.CpufreqInteractiveAlreadyFtraceEvent.decode(reader, reader.uint32());\n                        break;\n                    case 6:\n                        message.cpufreqInteractiveBoost = $root.perfetto.protos.CpufreqInteractiveBoostFtraceEvent.decode(reader, reader.uint32());\n                        break;\n                    case 7:\n                        message.cpufreqInteractiveNotyet = $root.perfetto.protos.CpufreqInteractiveNotyetFtraceEvent.decode(reader, reader.uint32());\n                        break;\n                    case 8:\n                        message.cpufreqInteractiveSetspeed = $root.perfetto.protos.CpufreqInteractiveSetspeedFtraceEvent.decode(reader, reader.uint32());\n                        break;\n                    case 9:\n                        message.cpufreqInteractiveTarget = $root.perfetto.protos.CpufreqInteractiveTargetFtraceEvent.decode(reader, reader.uint32());\n                        break;\n                    case 10:\n                        message.cpufreqInteractiveUnboost = $root.perfetto.protos.CpufreqInteractiveUnboostFtraceEvent.decode(reader, reader.uint32());\n                        break;\n                    case 11:\n                        message.cpuFrequency = $root.perfetto.protos.CpuFrequencyFtraceEvent.decode(reader, reader.uint32());\n                        break;\n                    case 12:\n                        message.cpuFrequencyLimits = $root.perfetto.protos.CpuFrequencyLimitsFtraceEvent.decode(reader, reader.uint32());\n                        break;\n                    case 13:\n                        message.cpuIdle = $root.perfetto.protos.CpuIdleFtraceEvent.decode(reader, reader.uint32());\n                        break;\n                    case 16:\n                        message.clockSetRate = $root.perfetto.protos.ClockSetRateFtraceEvent.decode(reader, reader.uint32());\n                        break;\n                    case 17:\n                        message.schedWakeup = $root.perfetto.protos.SchedWakeupFtraceEvent.decode(reader, reader.uint32());\n                        break;\n                    case 18:\n                        message.schedBlockedReason = $root.perfetto.protos.SchedBlockedReasonFtraceEvent.decode(reader, reader.uint32());\n                        break;\n                    case 19:\n                        message.schedCpuHotplug = $root.perfetto.protos.SchedCpuHotplugFtraceEvent.decode(reader, reader.uint32());\n                        break;\n                    case 35:\n                        message.lowmemoryKill = $root.perfetto.protos.LowmemoryKillFtraceEvent.decode(reader, reader.uint32());\n                        break;\n                    case 41:\n                        message.ext4DaWriteBegin = $root.perfetto.protos.Ext4DaWriteBeginFtraceEvent.decode(reader, reader.uint32());\n                        break;\n                    case 42:\n                        message.ext4DaWriteEnd = $root.perfetto.protos.Ext4DaWriteEndFtraceEvent.decode(reader, reader.uint32());\n                        break;\n                    case 43:\n                        message.ext4SyncFileEnter = $root.perfetto.protos.Ext4SyncFileEnterFtraceEvent.decode(reader, reader.uint32());\n                        break;\n                    case 44:\n                        message.ext4SyncFileExit = $root.perfetto.protos.Ext4SyncFileExitFtraceEvent.decode(reader, reader.uint32());\n                        break;\n                    case 45:\n                        message.blockRqIssue = $root.perfetto.protos.BlockRqIssueFtraceEvent.decode(reader, reader.uint32());\n                        break;\n                    case 46:\n                        message.mmVmscanDirectReclaimBegin = $root.perfetto.protos.MmVmscanDirectReclaimBeginFtraceEvent.decode(reader, reader.uint32());\n                        break;\n                    case 47:\n                        message.mmVmscanDirectReclaimEnd = $root.perfetto.protos.MmVmscanDirectReclaimEndFtraceEvent.decode(reader, reader.uint32());\n                        break;\n                    case 48:\n                        message.mmVmscanKswapdWake = $root.perfetto.protos.MmVmscanKswapdWakeFtraceEvent.decode(reader, reader.uint32());\n                        break;\n                    case 49:\n                        message.mmVmscanKswapdSleep = $root.perfetto.protos.MmVmscanKswapdSleepFtraceEvent.decode(reader, reader.uint32());\n                        break;\n                    case 50:\n                        message.binderTransaction = $root.perfetto.protos.BinderTransactionFtraceEvent.decode(reader, reader.uint32());\n                        break;\n                    case 51:\n                        message.binderTransactionReceived = $root.perfetto.protos.BinderTransactionReceivedFtraceEvent.decode(reader, reader.uint32());\n                        break;\n                    case 53:\n                        message.binderLock = $root.perfetto.protos.BinderLockFtraceEvent.decode(reader, reader.uint32());\n                        break;\n                    case 54:\n                        message.binderLocked = $root.perfetto.protos.BinderLockedFtraceEvent.decode(reader, reader.uint32());\n                        break;\n                    case 55:\n                        message.binderUnlock = $root.perfetto.protos.BinderUnlockFtraceEvent.decode(reader, reader.uint32());\n                        break;\n                    case 67:\n                        message.cgroupAttachTask = $root.perfetto.protos.CgroupAttachTaskFtraceEvent.decode(reader, reader.uint32());\n                        break;\n                    case 68:\n                        message.cgroupMkdir = $root.perfetto.protos.CgroupMkdirFtraceEvent.decode(reader, reader.uint32());\n                        break;\n                    case 69:\n                        message.cgroupRemount = $root.perfetto.protos.CgroupRemountFtraceEvent.decode(reader, reader.uint32());\n                        break;\n                    case 70:\n                        message.cgroupRmdir = $root.perfetto.protos.CgroupRmdirFtraceEvent.decode(reader, reader.uint32());\n                        break;\n                    case 71:\n                        message.cgroupTransferTasks = $root.perfetto.protos.CgroupTransferTasksFtraceEvent.decode(reader, reader.uint32());\n                        break;\n                    case 72:\n                        message.cgroupDestroyRoot = $root.perfetto.protos.CgroupDestroyRootFtraceEvent.decode(reader, reader.uint32());\n                        break;\n                    case 73:\n                        message.cgroupRelease = $root.perfetto.protos.CgroupReleaseFtraceEvent.decode(reader, reader.uint32());\n                        break;\n                    case 74:\n                        message.cgroupRename = $root.perfetto.protos.CgroupRenameFtraceEvent.decode(reader, reader.uint32());\n                        break;\n                    case 75:\n                        message.cgroupSetupRoot = $root.perfetto.protos.CgroupSetupRootFtraceEvent.decode(reader, reader.uint32());\n                        break;\n                    case 125:\n                        message.blockRqComplete = $root.perfetto.protos.BlockRqCompleteFtraceEvent.decode(reader, reader.uint32());\n                        break;\n                    case 153:\n                        message.ext4EsLookupExtentEnter = $root.perfetto.protos.Ext4EsLookupExtentEnterFtraceEvent.decode(reader, reader.uint32());\n                        break;\n                    case 154:\n                        message.ext4EsLookupExtentExit = $root.perfetto.protos.Ext4EsLookupExtentExitFtraceEvent.decode(reader, reader.uint32());\n                        break;\n                    case 190:\n                        message.ext4LoadInode = $root.perfetto.protos.Ext4LoadInodeFtraceEvent.decode(reader, reader.uint32());\n                        break;\n                    case 246:\n                        message.f2fsGetDataBlock = $root.perfetto.protos.F2fsGetDataBlockFtraceEvent.decode(reader, reader.uint32());\n                        break;\n                    case 248:\n                        message.f2fsIget = $root.perfetto.protos.F2fsIgetFtraceEvent.decode(reader, reader.uint32());\n                        break;\n                    case 255:\n                        message.f2fsSyncFileEnter = $root.perfetto.protos.F2fsSyncFileEnterFtraceEvent.decode(reader, reader.uint32());\n                        break;\n                    case 256:\n                        message.f2fsSyncFileExit = $root.perfetto.protos.F2fsSyncFileExitFtraceEvent.decode(reader, reader.uint32());\n                        break;\n                    case 271:\n                        message.f2fsWriteBegin = $root.perfetto.protos.F2fsWriteBeginFtraceEvent.decode(reader, reader.uint32());\n                        break;\n                    case 273:\n                        message.f2fsWriteEnd = $root.perfetto.protos.F2fsWriteEndFtraceEvent.decode(reader, reader.uint32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a FtraceEvent message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof perfetto.protos.FtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {perfetto.protos.FtraceEvent} FtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            FtraceEvent.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a FtraceEvent message.\n             * @function verify\n             * @memberof perfetto.protos.FtraceEvent\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            FtraceEvent.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                var properties = {};\n                if (message.timestamp != null && message.hasOwnProperty(\"timestamp\"))\n                    if (!$util.isInteger(message.timestamp) && !(message.timestamp && $util.isInteger(message.timestamp.low) && $util.isInteger(message.timestamp.high)))\n                        return \"timestamp: integer|Long expected\";\n                if (message.pid != null && message.hasOwnProperty(\"pid\"))\n                    if (!$util.isInteger(message.pid))\n                        return \"pid: integer expected\";\n                if (message.schedSwitch != null && message.hasOwnProperty(\"schedSwitch\")) {\n                    properties.event = 1;\n                    {\n                        var error = $root.perfetto.protos.SchedSwitchFtraceEvent.verify(message.schedSwitch);\n                        if (error)\n                            return \"schedSwitch.\" + error;\n                    }\n                }\n                if (message.cpufreqInteractiveAlready != null && message.hasOwnProperty(\"cpufreqInteractiveAlready\")) {\n                    if (properties.event === 1)\n                        return \"event: multiple values\";\n                    properties.event = 1;\n                    {\n                        var error = $root.perfetto.protos.CpufreqInteractiveAlreadyFtraceEvent.verify(message.cpufreqInteractiveAlready);\n                        if (error)\n                            return \"cpufreqInteractiveAlready.\" + error;\n                    }\n                }\n                if (message.cpufreqInteractiveBoost != null && message.hasOwnProperty(\"cpufreqInteractiveBoost\")) {\n                    if (properties.event === 1)\n                        return \"event: multiple values\";\n                    properties.event = 1;\n                    {\n                        var error = $root.perfetto.protos.CpufreqInteractiveBoostFtraceEvent.verify(message.cpufreqInteractiveBoost);\n                        if (error)\n                            return \"cpufreqInteractiveBoost.\" + error;\n                    }\n                }\n                if (message.cpufreqInteractiveNotyet != null && message.hasOwnProperty(\"cpufreqInteractiveNotyet\")) {\n                    if (properties.event === 1)\n                        return \"event: multiple values\";\n                    properties.event = 1;\n                    {\n                        var error = $root.perfetto.protos.CpufreqInteractiveNotyetFtraceEvent.verify(message.cpufreqInteractiveNotyet);\n                        if (error)\n                            return \"cpufreqInteractiveNotyet.\" + error;\n                    }\n                }\n                if (message.cpufreqInteractiveSetspeed != null && message.hasOwnProperty(\"cpufreqInteractiveSetspeed\")) {\n                    if (properties.event === 1)\n                        return \"event: multiple values\";\n                    properties.event = 1;\n                    {\n                        var error = $root.perfetto.protos.CpufreqInteractiveSetspeedFtraceEvent.verify(message.cpufreqInteractiveSetspeed);\n                        if (error)\n                            return \"cpufreqInteractiveSetspeed.\" + error;\n                    }\n                }\n                if (message.cpufreqInteractiveTarget != null && message.hasOwnProperty(\"cpufreqInteractiveTarget\")) {\n                    if (properties.event === 1)\n                        return \"event: multiple values\";\n                    properties.event = 1;\n                    {\n                        var error = $root.perfetto.protos.CpufreqInteractiveTargetFtraceEvent.verify(message.cpufreqInteractiveTarget);\n                        if (error)\n                            return \"cpufreqInteractiveTarget.\" + error;\n                    }\n                }\n                if (message.cpufreqInteractiveUnboost != null && message.hasOwnProperty(\"cpufreqInteractiveUnboost\")) {\n                    if (properties.event === 1)\n                        return \"event: multiple values\";\n                    properties.event = 1;\n                    {\n                        var error = $root.perfetto.protos.CpufreqInteractiveUnboostFtraceEvent.verify(message.cpufreqInteractiveUnboost);\n                        if (error)\n                            return \"cpufreqInteractiveUnboost.\" + error;\n                    }\n                }\n                if (message.cpuFrequency != null && message.hasOwnProperty(\"cpuFrequency\")) {\n                    if (properties.event === 1)\n                        return \"event: multiple values\";\n                    properties.event = 1;\n                    {\n                        var error = $root.perfetto.protos.CpuFrequencyFtraceEvent.verify(message.cpuFrequency);\n                        if (error)\n                            return \"cpuFrequency.\" + error;\n                    }\n                }\n                if (message.cpuFrequencyLimits != null && message.hasOwnProperty(\"cpuFrequencyLimits\")) {\n                    if (properties.event === 1)\n                        return \"event: multiple values\";\n                    properties.event = 1;\n                    {\n                        var error = $root.perfetto.protos.CpuFrequencyLimitsFtraceEvent.verify(message.cpuFrequencyLimits);\n                        if (error)\n                            return \"cpuFrequencyLimits.\" + error;\n                    }\n                }\n                if (message.cpuIdle != null && message.hasOwnProperty(\"cpuIdle\")) {\n                    if (properties.event === 1)\n                        return \"event: multiple values\";\n                    properties.event = 1;\n                    {\n                        var error = $root.perfetto.protos.CpuIdleFtraceEvent.verify(message.cpuIdle);\n                        if (error)\n                            return \"cpuIdle.\" + error;\n                    }\n                }\n                if (message.clockSetRate != null && message.hasOwnProperty(\"clockSetRate\")) {\n                    if (properties.event === 1)\n                        return \"event: multiple values\";\n                    properties.event = 1;\n                    {\n                        var error = $root.perfetto.protos.ClockSetRateFtraceEvent.verify(message.clockSetRate);\n                        if (error)\n                            return \"clockSetRate.\" + error;\n                    }\n                }\n                if (message.schedWakeup != null && message.hasOwnProperty(\"schedWakeup\")) {\n                    if (properties.event === 1)\n                        return \"event: multiple values\";\n                    properties.event = 1;\n                    {\n                        var error = $root.perfetto.protos.SchedWakeupFtraceEvent.verify(message.schedWakeup);\n                        if (error)\n                            return \"schedWakeup.\" + error;\n                    }\n                }\n                if (message.schedBlockedReason != null && message.hasOwnProperty(\"schedBlockedReason\")) {\n                    if (properties.event === 1)\n                        return \"event: multiple values\";\n                    properties.event = 1;\n                    {\n                        var error = $root.perfetto.protos.SchedBlockedReasonFtraceEvent.verify(message.schedBlockedReason);\n                        if (error)\n                            return \"schedBlockedReason.\" + error;\n                    }\n                }\n                if (message.schedCpuHotplug != null && message.hasOwnProperty(\"schedCpuHotplug\")) {\n                    if (properties.event === 1)\n                        return \"event: multiple values\";\n                    properties.event = 1;\n                    {\n                        var error = $root.perfetto.protos.SchedCpuHotplugFtraceEvent.verify(message.schedCpuHotplug);\n                        if (error)\n                            return \"schedCpuHotplug.\" + error;\n                    }\n                }\n                if (message.lowmemoryKill != null && message.hasOwnProperty(\"lowmemoryKill\")) {\n                    if (properties.event === 1)\n                        return \"event: multiple values\";\n                    properties.event = 1;\n                    {\n                        var error = $root.perfetto.protos.LowmemoryKillFtraceEvent.verify(message.lowmemoryKill);\n                        if (error)\n                            return \"lowmemoryKill.\" + error;\n                    }\n                }\n                if (message.ext4DaWriteBegin != null && message.hasOwnProperty(\"ext4DaWriteBegin\")) {\n                    if (properties.event === 1)\n                        return \"event: multiple values\";\n                    properties.event = 1;\n                    {\n                        var error = $root.perfetto.protos.Ext4DaWriteBeginFtraceEvent.verify(message.ext4DaWriteBegin);\n                        if (error)\n                            return \"ext4DaWriteBegin.\" + error;\n                    }\n                }\n                if (message.ext4DaWriteEnd != null && message.hasOwnProperty(\"ext4DaWriteEnd\")) {\n                    if (properties.event === 1)\n                        return \"event: multiple values\";\n                    properties.event = 1;\n                    {\n                        var error = $root.perfetto.protos.Ext4DaWriteEndFtraceEvent.verify(message.ext4DaWriteEnd);\n                        if (error)\n                            return \"ext4DaWriteEnd.\" + error;\n                    }\n                }\n                if (message.ext4SyncFileEnter != null && message.hasOwnProperty(\"ext4SyncFileEnter\")) {\n                    if (properties.event === 1)\n                        return \"event: multiple values\";\n                    properties.event = 1;\n                    {\n                        var error = $root.perfetto.protos.Ext4SyncFileEnterFtraceEvent.verify(message.ext4SyncFileEnter);\n                        if (error)\n                            return \"ext4SyncFileEnter.\" + error;\n                    }\n                }\n                if (message.ext4SyncFileExit != null && message.hasOwnProperty(\"ext4SyncFileExit\")) {\n                    if (properties.event === 1)\n                        return \"event: multiple values\";\n                    properties.event = 1;\n                    {\n                        var error = $root.perfetto.protos.Ext4SyncFileExitFtraceEvent.verify(message.ext4SyncFileExit);\n                        if (error)\n                            return \"ext4SyncFileExit.\" + error;\n                    }\n                }\n                if (message.blockRqIssue != null && message.hasOwnProperty(\"blockRqIssue\")) {\n                    if (properties.event === 1)\n                        return \"event: multiple values\";\n                    properties.event = 1;\n                    {\n                        var error = $root.perfetto.protos.BlockRqIssueFtraceEvent.verify(message.blockRqIssue);\n                        if (error)\n                            return \"blockRqIssue.\" + error;\n                    }\n                }\n                if (message.mmVmscanDirectReclaimBegin != null && message.hasOwnProperty(\"mmVmscanDirectReclaimBegin\")) {\n                    if (properties.event === 1)\n                        return \"event: multiple values\";\n                    properties.event = 1;\n                    {\n                        var error = $root.perfetto.protos.MmVmscanDirectReclaimBeginFtraceEvent.verify(message.mmVmscanDirectReclaimBegin);\n                        if (error)\n                            return \"mmVmscanDirectReclaimBegin.\" + error;\n                    }\n                }\n                if (message.mmVmscanDirectReclaimEnd != null && message.hasOwnProperty(\"mmVmscanDirectReclaimEnd\")) {\n                    if (properties.event === 1)\n                        return \"event: multiple values\";\n                    properties.event = 1;\n                    {\n                        var error = $root.perfetto.protos.MmVmscanDirectReclaimEndFtraceEvent.verify(message.mmVmscanDirectReclaimEnd);\n                        if (error)\n                            return \"mmVmscanDirectReclaimEnd.\" + error;\n                    }\n                }\n                if (message.mmVmscanKswapdWake != null && message.hasOwnProperty(\"mmVmscanKswapdWake\")) {\n                    if (properties.event === 1)\n                        return \"event: multiple values\";\n                    properties.event = 1;\n                    {\n                        var error = $root.perfetto.protos.MmVmscanKswapdWakeFtraceEvent.verify(message.mmVmscanKswapdWake);\n                        if (error)\n                            return \"mmVmscanKswapdWake.\" + error;\n                    }\n                }\n                if (message.mmVmscanKswapdSleep != null && message.hasOwnProperty(\"mmVmscanKswapdSleep\")) {\n                    if (properties.event === 1)\n                        return \"event: multiple values\";\n                    properties.event = 1;\n                    {\n                        var error = $root.perfetto.protos.MmVmscanKswapdSleepFtraceEvent.verify(message.mmVmscanKswapdSleep);\n                        if (error)\n                            return \"mmVmscanKswapdSleep.\" + error;\n                    }\n                }\n                if (message.binderTransaction != null && message.hasOwnProperty(\"binderTransaction\")) {\n                    if (properties.event === 1)\n                        return \"event: multiple values\";\n                    properties.event = 1;\n                    {\n                        var error = $root.perfetto.protos.BinderTransactionFtraceEvent.verify(message.binderTransaction);\n                        if (error)\n                            return \"binderTransaction.\" + error;\n                    }\n                }\n                if (message.binderTransactionReceived != null && message.hasOwnProperty(\"binderTransactionReceived\")) {\n                    if (properties.event === 1)\n                        return \"event: multiple values\";\n                    properties.event = 1;\n                    {\n                        var error = $root.perfetto.protos.BinderTransactionReceivedFtraceEvent.verify(message.binderTransactionReceived);\n                        if (error)\n                            return \"binderTransactionReceived.\" + error;\n                    }\n                }\n                if (message.binderLock != null && message.hasOwnProperty(\"binderLock\")) {\n                    if (properties.event === 1)\n                        return \"event: multiple values\";\n                    properties.event = 1;\n                    {\n                        var error = $root.perfetto.protos.BinderLockFtraceEvent.verify(message.binderLock);\n                        if (error)\n                            return \"binderLock.\" + error;\n                    }\n                }\n                if (message.binderLocked != null && message.hasOwnProperty(\"binderLocked\")) {\n                    if (properties.event === 1)\n                        return \"event: multiple values\";\n                    properties.event = 1;\n                    {\n                        var error = $root.perfetto.protos.BinderLockedFtraceEvent.verify(message.binderLocked);\n                        if (error)\n                            return \"binderLocked.\" + error;\n                    }\n                }\n                if (message.binderUnlock != null && message.hasOwnProperty(\"binderUnlock\")) {\n                    if (properties.event === 1)\n                        return \"event: multiple values\";\n                    properties.event = 1;\n                    {\n                        var error = $root.perfetto.protos.BinderUnlockFtraceEvent.verify(message.binderUnlock);\n                        if (error)\n                            return \"binderUnlock.\" + error;\n                    }\n                }\n                if (message.cgroupAttachTask != null && message.hasOwnProperty(\"cgroupAttachTask\")) {\n                    if (properties.event === 1)\n                        return \"event: multiple values\";\n                    properties.event = 1;\n                    {\n                        var error = $root.perfetto.protos.CgroupAttachTaskFtraceEvent.verify(message.cgroupAttachTask);\n                        if (error)\n                            return \"cgroupAttachTask.\" + error;\n                    }\n                }\n                if (message.cgroupMkdir != null && message.hasOwnProperty(\"cgroupMkdir\")) {\n                    if (properties.event === 1)\n                        return \"event: multiple values\";\n                    properties.event = 1;\n                    {\n                        var error = $root.perfetto.protos.CgroupMkdirFtraceEvent.verify(message.cgroupMkdir);\n                        if (error)\n                            return \"cgroupMkdir.\" + error;\n                    }\n                }\n                if (message.cgroupRemount != null && message.hasOwnProperty(\"cgroupRemount\")) {\n                    if (properties.event === 1)\n                        return \"event: multiple values\";\n                    properties.event = 1;\n                    {\n                        var error = $root.perfetto.protos.CgroupRemountFtraceEvent.verify(message.cgroupRemount);\n                        if (error)\n                            return \"cgroupRemount.\" + error;\n                    }\n                }\n                if (message.cgroupRmdir != null && message.hasOwnProperty(\"cgroupRmdir\")) {\n                    if (properties.event === 1)\n                        return \"event: multiple values\";\n                    properties.event = 1;\n                    {\n                        var error = $root.perfetto.protos.CgroupRmdirFtraceEvent.verify(message.cgroupRmdir);\n                        if (error)\n                            return \"cgroupRmdir.\" + error;\n                    }\n                }\n                if (message.cgroupTransferTasks != null && message.hasOwnProperty(\"cgroupTransferTasks\")) {\n                    if (properties.event === 1)\n                        return \"event: multiple values\";\n                    properties.event = 1;\n                    {\n                        var error = $root.perfetto.protos.CgroupTransferTasksFtraceEvent.verify(message.cgroupTransferTasks);\n                        if (error)\n                            return \"cgroupTransferTasks.\" + error;\n                    }\n                }\n                if (message.cgroupDestroyRoot != null && message.hasOwnProperty(\"cgroupDestroyRoot\")) {\n                    if (properties.event === 1)\n                        return \"event: multiple values\";\n                    properties.event = 1;\n                    {\n                        var error = $root.perfetto.protos.CgroupDestroyRootFtraceEvent.verify(message.cgroupDestroyRoot);\n                        if (error)\n                            return \"cgroupDestroyRoot.\" + error;\n                    }\n                }\n                if (message.cgroupRelease != null && message.hasOwnProperty(\"cgroupRelease\")) {\n                    if (properties.event === 1)\n                        return \"event: multiple values\";\n                    properties.event = 1;\n                    {\n                        var error = $root.perfetto.protos.CgroupReleaseFtraceEvent.verify(message.cgroupRelease);\n                        if (error)\n                            return \"cgroupRelease.\" + error;\n                    }\n                }\n                if (message.cgroupRename != null && message.hasOwnProperty(\"cgroupRename\")) {\n                    if (properties.event === 1)\n                        return \"event: multiple values\";\n                    properties.event = 1;\n                    {\n                        var error = $root.perfetto.protos.CgroupRenameFtraceEvent.verify(message.cgroupRename);\n                        if (error)\n                            return \"cgroupRename.\" + error;\n                    }\n                }\n                if (message.cgroupSetupRoot != null && message.hasOwnProperty(\"cgroupSetupRoot\")) {\n                    if (properties.event === 1)\n                        return \"event: multiple values\";\n                    properties.event = 1;\n                    {\n                        var error = $root.perfetto.protos.CgroupSetupRootFtraceEvent.verify(message.cgroupSetupRoot);\n                        if (error)\n                            return \"cgroupSetupRoot.\" + error;\n                    }\n                }\n                if (message.blockRqComplete != null && message.hasOwnProperty(\"blockRqComplete\")) {\n                    if (properties.event === 1)\n                        return \"event: multiple values\";\n                    properties.event = 1;\n                    {\n                        var error = $root.perfetto.protos.BlockRqCompleteFtraceEvent.verify(message.blockRqComplete);\n                        if (error)\n                            return \"blockRqComplete.\" + error;\n                    }\n                }\n                if (message.ext4EsLookupExtentEnter != null && message.hasOwnProperty(\"ext4EsLookupExtentEnter\")) {\n                    if (properties.event === 1)\n                        return \"event: multiple values\";\n                    properties.event = 1;\n                    {\n                        var error = $root.perfetto.protos.Ext4EsLookupExtentEnterFtraceEvent.verify(message.ext4EsLookupExtentEnter);\n                        if (error)\n                            return \"ext4EsLookupExtentEnter.\" + error;\n                    }\n                }\n                if (message.ext4EsLookupExtentExit != null && message.hasOwnProperty(\"ext4EsLookupExtentExit\")) {\n                    if (properties.event === 1)\n                        return \"event: multiple values\";\n                    properties.event = 1;\n                    {\n                        var error = $root.perfetto.protos.Ext4EsLookupExtentExitFtraceEvent.verify(message.ext4EsLookupExtentExit);\n                        if (error)\n                            return \"ext4EsLookupExtentExit.\" + error;\n                    }\n                }\n                if (message.ext4LoadInode != null && message.hasOwnProperty(\"ext4LoadInode\")) {\n                    if (properties.event === 1)\n                        return \"event: multiple values\";\n                    properties.event = 1;\n                    {\n                        var error = $root.perfetto.protos.Ext4LoadInodeFtraceEvent.verify(message.ext4LoadInode);\n                        if (error)\n                            return \"ext4LoadInode.\" + error;\n                    }\n                }\n                if (message.f2fsGetDataBlock != null && message.hasOwnProperty(\"f2fsGetDataBlock\")) {\n                    if (properties.event === 1)\n                        return \"event: multiple values\";\n                    properties.event = 1;\n                    {\n                        var error = $root.perfetto.protos.F2fsGetDataBlockFtraceEvent.verify(message.f2fsGetDataBlock);\n                        if (error)\n                            return \"f2fsGetDataBlock.\" + error;\n                    }\n                }\n                if (message.f2fsIget != null && message.hasOwnProperty(\"f2fsIget\")) {\n                    if (properties.event === 1)\n                        return \"event: multiple values\";\n                    properties.event = 1;\n                    {\n                        var error = $root.perfetto.protos.F2fsIgetFtraceEvent.verify(message.f2fsIget);\n                        if (error)\n                            return \"f2fsIget.\" + error;\n                    }\n                }\n                if (message.f2fsSyncFileEnter != null && message.hasOwnProperty(\"f2fsSyncFileEnter\")) {\n                    if (properties.event === 1)\n                        return \"event: multiple values\";\n                    properties.event = 1;\n                    {\n                        var error = $root.perfetto.protos.F2fsSyncFileEnterFtraceEvent.verify(message.f2fsSyncFileEnter);\n                        if (error)\n                            return \"f2fsSyncFileEnter.\" + error;\n                    }\n                }\n                if (message.f2fsSyncFileExit != null && message.hasOwnProperty(\"f2fsSyncFileExit\")) {\n                    if (properties.event === 1)\n                        return \"event: multiple values\";\n                    properties.event = 1;\n                    {\n                        var error = $root.perfetto.protos.F2fsSyncFileExitFtraceEvent.verify(message.f2fsSyncFileExit);\n                        if (error)\n                            return \"f2fsSyncFileExit.\" + error;\n                    }\n                }\n                if (message.f2fsWriteBegin != null && message.hasOwnProperty(\"f2fsWriteBegin\")) {\n                    if (properties.event === 1)\n                        return \"event: multiple values\";\n                    properties.event = 1;\n                    {\n                        var error = $root.perfetto.protos.F2fsWriteBeginFtraceEvent.verify(message.f2fsWriteBegin);\n                        if (error)\n                            return \"f2fsWriteBegin.\" + error;\n                    }\n                }\n                if (message.f2fsWriteEnd != null && message.hasOwnProperty(\"f2fsWriteEnd\")) {\n                    if (properties.event === 1)\n                        return \"event: multiple values\";\n                    properties.event = 1;\n                    {\n                        var error = $root.perfetto.protos.F2fsWriteEndFtraceEvent.verify(message.f2fsWriteEnd);\n                        if (error)\n                            return \"f2fsWriteEnd.\" + error;\n                    }\n                }\n                return null;\n            };\n\n            /**\n             * Creates a FtraceEvent message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof perfetto.protos.FtraceEvent\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {perfetto.protos.FtraceEvent} FtraceEvent\n             */\n            FtraceEvent.fromObject = function fromObject(object) {\n                if (object instanceof $root.perfetto.protos.FtraceEvent)\n                    return object;\n                var message = new $root.perfetto.protos.FtraceEvent();\n                if (object.timestamp != null)\n                    if ($util.Long)\n                        (message.timestamp = $util.Long.fromValue(object.timestamp)).unsigned = true;\n                    else if (typeof object.timestamp === \"string\")\n                        message.timestamp = parseInt(object.timestamp, 10);\n                    else if (typeof object.timestamp === \"number\")\n                        message.timestamp = object.timestamp;\n                    else if (typeof object.timestamp === \"object\")\n                        message.timestamp = new $util.LongBits(object.timestamp.low >>> 0, object.timestamp.high >>> 0).toNumber(true);\n                if (object.pid != null)\n                    message.pid = object.pid >>> 0;\n                if (object.schedSwitch != null) {\n                    if (typeof object.schedSwitch !== \"object\")\n                        throw TypeError(\".perfetto.protos.FtraceEvent.schedSwitch: object expected\");\n                    message.schedSwitch = $root.perfetto.protos.SchedSwitchFtraceEvent.fromObject(object.schedSwitch);\n                }\n                if (object.cpufreqInteractiveAlready != null) {\n                    if (typeof object.cpufreqInteractiveAlready !== \"object\")\n                        throw TypeError(\".perfetto.protos.FtraceEvent.cpufreqInteractiveAlready: object expected\");\n                    message.cpufreqInteractiveAlready = $root.perfetto.protos.CpufreqInteractiveAlreadyFtraceEvent.fromObject(object.cpufreqInteractiveAlready);\n                }\n                if (object.cpufreqInteractiveBoost != null) {\n                    if (typeof object.cpufreqInteractiveBoost !== \"object\")\n                        throw TypeError(\".perfetto.protos.FtraceEvent.cpufreqInteractiveBoost: object expected\");\n                    message.cpufreqInteractiveBoost = $root.perfetto.protos.CpufreqInteractiveBoostFtraceEvent.fromObject(object.cpufreqInteractiveBoost);\n                }\n                if (object.cpufreqInteractiveNotyet != null) {\n                    if (typeof object.cpufreqInteractiveNotyet !== \"object\")\n                        throw TypeError(\".perfetto.protos.FtraceEvent.cpufreqInteractiveNotyet: object expected\");\n                    message.cpufreqInteractiveNotyet = $root.perfetto.protos.CpufreqInteractiveNotyetFtraceEvent.fromObject(object.cpufreqInteractiveNotyet);\n                }\n                if (object.cpufreqInteractiveSetspeed != null) {\n                    if (typeof object.cpufreqInteractiveSetspeed !== \"object\")\n                        throw TypeError(\".perfetto.protos.FtraceEvent.cpufreqInteractiveSetspeed: object expected\");\n                    message.cpufreqInteractiveSetspeed = $root.perfetto.protos.CpufreqInteractiveSetspeedFtraceEvent.fromObject(object.cpufreqInteractiveSetspeed);\n                }\n                if (object.cpufreqInteractiveTarget != null) {\n                    if (typeof object.cpufreqInteractiveTarget !== \"object\")\n                        throw TypeError(\".perfetto.protos.FtraceEvent.cpufreqInteractiveTarget: object expected\");\n                    message.cpufreqInteractiveTarget = $root.perfetto.protos.CpufreqInteractiveTargetFtraceEvent.fromObject(object.cpufreqInteractiveTarget);\n                }\n                if (object.cpufreqInteractiveUnboost != null) {\n                    if (typeof object.cpufreqInteractiveUnboost !== \"object\")\n                        throw TypeError(\".perfetto.protos.FtraceEvent.cpufreqInteractiveUnboost: object expected\");\n                    message.cpufreqInteractiveUnboost = $root.perfetto.protos.CpufreqInteractiveUnboostFtraceEvent.fromObject(object.cpufreqInteractiveUnboost);\n                }\n                if (object.cpuFrequency != null) {\n                    if (typeof object.cpuFrequency !== \"object\")\n                        throw TypeError(\".perfetto.protos.FtraceEvent.cpuFrequency: object expected\");\n                    message.cpuFrequency = $root.perfetto.protos.CpuFrequencyFtraceEvent.fromObject(object.cpuFrequency);\n                }\n                if (object.cpuFrequencyLimits != null) {\n                    if (typeof object.cpuFrequencyLimits !== \"object\")\n                        throw TypeError(\".perfetto.protos.FtraceEvent.cpuFrequencyLimits: object expected\");\n                    message.cpuFrequencyLimits = $root.perfetto.protos.CpuFrequencyLimitsFtraceEvent.fromObject(object.cpuFrequencyLimits);\n                }\n                if (object.cpuIdle != null) {\n                    if (typeof object.cpuIdle !== \"object\")\n                        throw TypeError(\".perfetto.protos.FtraceEvent.cpuIdle: object expected\");\n                    message.cpuIdle = $root.perfetto.protos.CpuIdleFtraceEvent.fromObject(object.cpuIdle);\n                }\n                if (object.clockSetRate != null) {\n                    if (typeof object.clockSetRate !== \"object\")\n                        throw TypeError(\".perfetto.protos.FtraceEvent.clockSetRate: object expected\");\n                    message.clockSetRate = $root.perfetto.protos.ClockSetRateFtraceEvent.fromObject(object.clockSetRate);\n                }\n                if (object.schedWakeup != null) {\n                    if (typeof object.schedWakeup !== \"object\")\n                        throw TypeError(\".perfetto.protos.FtraceEvent.schedWakeup: object expected\");\n                    message.schedWakeup = $root.perfetto.protos.SchedWakeupFtraceEvent.fromObject(object.schedWakeup);\n                }\n                if (object.schedBlockedReason != null) {\n                    if (typeof object.schedBlockedReason !== \"object\")\n                        throw TypeError(\".perfetto.protos.FtraceEvent.schedBlockedReason: object expected\");\n                    message.schedBlockedReason = $root.perfetto.protos.SchedBlockedReasonFtraceEvent.fromObject(object.schedBlockedReason);\n                }\n                if (object.schedCpuHotplug != null) {\n                    if (typeof object.schedCpuHotplug !== \"object\")\n                        throw TypeError(\".perfetto.protos.FtraceEvent.schedCpuHotplug: object expected\");\n                    message.schedCpuHotplug = $root.perfetto.protos.SchedCpuHotplugFtraceEvent.fromObject(object.schedCpuHotplug);\n                }\n                if (object.lowmemoryKill != null) {\n                    if (typeof object.lowmemoryKill !== \"object\")\n                        throw TypeError(\".perfetto.protos.FtraceEvent.lowmemoryKill: object expected\");\n                    message.lowmemoryKill = $root.perfetto.protos.LowmemoryKillFtraceEvent.fromObject(object.lowmemoryKill);\n                }\n                if (object.ext4DaWriteBegin != null) {\n                    if (typeof object.ext4DaWriteBegin !== \"object\")\n                        throw TypeError(\".perfetto.protos.FtraceEvent.ext4DaWriteBegin: object expected\");\n                    message.ext4DaWriteBegin = $root.perfetto.protos.Ext4DaWriteBeginFtraceEvent.fromObject(object.ext4DaWriteBegin);\n                }\n                if (object.ext4DaWriteEnd != null) {\n                    if (typeof object.ext4DaWriteEnd !== \"object\")\n                        throw TypeError(\".perfetto.protos.FtraceEvent.ext4DaWriteEnd: object expected\");\n                    message.ext4DaWriteEnd = $root.perfetto.protos.Ext4DaWriteEndFtraceEvent.fromObject(object.ext4DaWriteEnd);\n                }\n                if (object.ext4SyncFileEnter != null) {\n                    if (typeof object.ext4SyncFileEnter !== \"object\")\n                        throw TypeError(\".perfetto.protos.FtraceEvent.ext4SyncFileEnter: object expected\");\n                    message.ext4SyncFileEnter = $root.perfetto.protos.Ext4SyncFileEnterFtraceEvent.fromObject(object.ext4SyncFileEnter);\n                }\n                if (object.ext4SyncFileExit != null) {\n                    if (typeof object.ext4SyncFileExit !== \"object\")\n                        throw TypeError(\".perfetto.protos.FtraceEvent.ext4SyncFileExit: object expected\");\n                    message.ext4SyncFileExit = $root.perfetto.protos.Ext4SyncFileExitFtraceEvent.fromObject(object.ext4SyncFileExit);\n                }\n                if (object.blockRqIssue != null) {\n                    if (typeof object.blockRqIssue !== \"object\")\n                        throw TypeError(\".perfetto.protos.FtraceEvent.blockRqIssue: object expected\");\n                    message.blockRqIssue = $root.perfetto.protos.BlockRqIssueFtraceEvent.fromObject(object.blockRqIssue);\n                }\n                if (object.mmVmscanDirectReclaimBegin != null) {\n                    if (typeof object.mmVmscanDirectReclaimBegin !== \"object\")\n                        throw TypeError(\".perfetto.protos.FtraceEvent.mmVmscanDirectReclaimBegin: object expected\");\n                    message.mmVmscanDirectReclaimBegin = $root.perfetto.protos.MmVmscanDirectReclaimBeginFtraceEvent.fromObject(object.mmVmscanDirectReclaimBegin);\n                }\n                if (object.mmVmscanDirectReclaimEnd != null) {\n                    if (typeof object.mmVmscanDirectReclaimEnd !== \"object\")\n                        throw TypeError(\".perfetto.protos.FtraceEvent.mmVmscanDirectReclaimEnd: object expected\");\n                    message.mmVmscanDirectReclaimEnd = $root.perfetto.protos.MmVmscanDirectReclaimEndFtraceEvent.fromObject(object.mmVmscanDirectReclaimEnd);\n                }\n                if (object.mmVmscanKswapdWake != null) {\n                    if (typeof object.mmVmscanKswapdWake !== \"object\")\n                        throw TypeError(\".perfetto.protos.FtraceEvent.mmVmscanKswapdWake: object expected\");\n                    message.mmVmscanKswapdWake = $root.perfetto.protos.MmVmscanKswapdWakeFtraceEvent.fromObject(object.mmVmscanKswapdWake);\n                }\n                if (object.mmVmscanKswapdSleep != null) {\n                    if (typeof object.mmVmscanKswapdSleep !== \"object\")\n                        throw TypeError(\".perfetto.protos.FtraceEvent.mmVmscanKswapdSleep: object expected\");\n                    message.mmVmscanKswapdSleep = $root.perfetto.protos.MmVmscanKswapdSleepFtraceEvent.fromObject(object.mmVmscanKswapdSleep);\n                }\n                if (object.binderTransaction != null) {\n                    if (typeof object.binderTransaction !== \"object\")\n                        throw TypeError(\".perfetto.protos.FtraceEvent.binderTransaction: object expected\");\n                    message.binderTransaction = $root.perfetto.protos.BinderTransactionFtraceEvent.fromObject(object.binderTransaction);\n                }\n                if (object.binderTransactionReceived != null) {\n                    if (typeof object.binderTransactionReceived !== \"object\")\n                        throw TypeError(\".perfetto.protos.FtraceEvent.binderTransactionReceived: object expected\");\n                    message.binderTransactionReceived = $root.perfetto.protos.BinderTransactionReceivedFtraceEvent.fromObject(object.binderTransactionReceived);\n                }\n                if (object.binderLock != null) {\n                    if (typeof object.binderLock !== \"object\")\n                        throw TypeError(\".perfetto.protos.FtraceEvent.binderLock: object expected\");\n                    message.binderLock = $root.perfetto.protos.BinderLockFtraceEvent.fromObject(object.binderLock);\n                }\n                if (object.binderLocked != null) {\n                    if (typeof object.binderLocked !== \"object\")\n                        throw TypeError(\".perfetto.protos.FtraceEvent.binderLocked: object expected\");\n                    message.binderLocked = $root.perfetto.protos.BinderLockedFtraceEvent.fromObject(object.binderLocked);\n                }\n                if (object.binderUnlock != null) {\n                    if (typeof object.binderUnlock !== \"object\")\n                        throw TypeError(\".perfetto.protos.FtraceEvent.binderUnlock: object expected\");\n                    message.binderUnlock = $root.perfetto.protos.BinderUnlockFtraceEvent.fromObject(object.binderUnlock);\n                }\n                if (object.cgroupAttachTask != null) {\n                    if (typeof object.cgroupAttachTask !== \"object\")\n                        throw TypeError(\".perfetto.protos.FtraceEvent.cgroupAttachTask: object expected\");\n                    message.cgroupAttachTask = $root.perfetto.protos.CgroupAttachTaskFtraceEvent.fromObject(object.cgroupAttachTask);\n                }\n                if (object.cgroupMkdir != null) {\n                    if (typeof object.cgroupMkdir !== \"object\")\n                        throw TypeError(\".perfetto.protos.FtraceEvent.cgroupMkdir: object expected\");\n                    message.cgroupMkdir = $root.perfetto.protos.CgroupMkdirFtraceEvent.fromObject(object.cgroupMkdir);\n                }\n                if (object.cgroupRemount != null) {\n                    if (typeof object.cgroupRemount !== \"object\")\n                        throw TypeError(\".perfetto.protos.FtraceEvent.cgroupRemount: object expected\");\n                    message.cgroupRemount = $root.perfetto.protos.CgroupRemountFtraceEvent.fromObject(object.cgroupRemount);\n                }\n                if (object.cgroupRmdir != null) {\n                    if (typeof object.cgroupRmdir !== \"object\")\n                        throw TypeError(\".perfetto.protos.FtraceEvent.cgroupRmdir: object expected\");\n                    message.cgroupRmdir = $root.perfetto.protos.CgroupRmdirFtraceEvent.fromObject(object.cgroupRmdir);\n                }\n                if (object.cgroupTransferTasks != null) {\n                    if (typeof object.cgroupTransferTasks !== \"object\")\n                        throw TypeError(\".perfetto.protos.FtraceEvent.cgroupTransferTasks: object expected\");\n                    message.cgroupTransferTasks = $root.perfetto.protos.CgroupTransferTasksFtraceEvent.fromObject(object.cgroupTransferTasks);\n                }\n                if (object.cgroupDestroyRoot != null) {\n                    if (typeof object.cgroupDestroyRoot !== \"object\")\n                        throw TypeError(\".perfetto.protos.FtraceEvent.cgroupDestroyRoot: object expected\");\n                    message.cgroupDestroyRoot = $root.perfetto.protos.CgroupDestroyRootFtraceEvent.fromObject(object.cgroupDestroyRoot);\n                }\n                if (object.cgroupRelease != null) {\n                    if (typeof object.cgroupRelease !== \"object\")\n                        throw TypeError(\".perfetto.protos.FtraceEvent.cgroupRelease: object expected\");\n                    message.cgroupRelease = $root.perfetto.protos.CgroupReleaseFtraceEvent.fromObject(object.cgroupRelease);\n                }\n                if (object.cgroupRename != null) {\n                    if (typeof object.cgroupRename !== \"object\")\n                        throw TypeError(\".perfetto.protos.FtraceEvent.cgroupRename: object expected\");\n                    message.cgroupRename = $root.perfetto.protos.CgroupRenameFtraceEvent.fromObject(object.cgroupRename);\n                }\n                if (object.cgroupSetupRoot != null) {\n                    if (typeof object.cgroupSetupRoot !== \"object\")\n                        throw TypeError(\".perfetto.protos.FtraceEvent.cgroupSetupRoot: object expected\");\n                    message.cgroupSetupRoot = $root.perfetto.protos.CgroupSetupRootFtraceEvent.fromObject(object.cgroupSetupRoot);\n                }\n                if (object.blockRqComplete != null) {\n                    if (typeof object.blockRqComplete !== \"object\")\n                        throw TypeError(\".perfetto.protos.FtraceEvent.blockRqComplete: object expected\");\n                    message.blockRqComplete = $root.perfetto.protos.BlockRqCompleteFtraceEvent.fromObject(object.blockRqComplete);\n                }\n                if (object.ext4EsLookupExtentEnter != null) {\n                    if (typeof object.ext4EsLookupExtentEnter !== \"object\")\n                        throw TypeError(\".perfetto.protos.FtraceEvent.ext4EsLookupExtentEnter: object expected\");\n                    message.ext4EsLookupExtentEnter = $root.perfetto.protos.Ext4EsLookupExtentEnterFtraceEvent.fromObject(object.ext4EsLookupExtentEnter);\n                }\n                if (object.ext4EsLookupExtentExit != null) {\n                    if (typeof object.ext4EsLookupExtentExit !== \"object\")\n                        throw TypeError(\".perfetto.protos.FtraceEvent.ext4EsLookupExtentExit: object expected\");\n                    message.ext4EsLookupExtentExit = $root.perfetto.protos.Ext4EsLookupExtentExitFtraceEvent.fromObject(object.ext4EsLookupExtentExit);\n                }\n                if (object.ext4LoadInode != null) {\n                    if (typeof object.ext4LoadInode !== \"object\")\n                        throw TypeError(\".perfetto.protos.FtraceEvent.ext4LoadInode: object expected\");\n                    message.ext4LoadInode = $root.perfetto.protos.Ext4LoadInodeFtraceEvent.fromObject(object.ext4LoadInode);\n                }\n                if (object.f2fsGetDataBlock != null) {\n                    if (typeof object.f2fsGetDataBlock !== \"object\")\n                        throw TypeError(\".perfetto.protos.FtraceEvent.f2fsGetDataBlock: object expected\");\n                    message.f2fsGetDataBlock = $root.perfetto.protos.F2fsGetDataBlockFtraceEvent.fromObject(object.f2fsGetDataBlock);\n                }\n                if (object.f2fsIget != null) {\n                    if (typeof object.f2fsIget !== \"object\")\n                        throw TypeError(\".perfetto.protos.FtraceEvent.f2fsIget: object expected\");\n                    message.f2fsIget = $root.perfetto.protos.F2fsIgetFtraceEvent.fromObject(object.f2fsIget);\n                }\n                if (object.f2fsSyncFileEnter != null) {\n                    if (typeof object.f2fsSyncFileEnter !== \"object\")\n                        throw TypeError(\".perfetto.protos.FtraceEvent.f2fsSyncFileEnter: object expected\");\n                    message.f2fsSyncFileEnter = $root.perfetto.protos.F2fsSyncFileEnterFtraceEvent.fromObject(object.f2fsSyncFileEnter);\n                }\n                if (object.f2fsSyncFileExit != null) {\n                    if (typeof object.f2fsSyncFileExit !== \"object\")\n                        throw TypeError(\".perfetto.protos.FtraceEvent.f2fsSyncFileExit: object expected\");\n                    message.f2fsSyncFileExit = $root.perfetto.protos.F2fsSyncFileExitFtraceEvent.fromObject(object.f2fsSyncFileExit);\n                }\n                if (object.f2fsWriteBegin != null) {\n                    if (typeof object.f2fsWriteBegin !== \"object\")\n                        throw TypeError(\".perfetto.protos.FtraceEvent.f2fsWriteBegin: object expected\");\n                    message.f2fsWriteBegin = $root.perfetto.protos.F2fsWriteBeginFtraceEvent.fromObject(object.f2fsWriteBegin);\n                }\n                if (object.f2fsWriteEnd != null) {\n                    if (typeof object.f2fsWriteEnd !== \"object\")\n                        throw TypeError(\".perfetto.protos.FtraceEvent.f2fsWriteEnd: object expected\");\n                    message.f2fsWriteEnd = $root.perfetto.protos.F2fsWriteEndFtraceEvent.fromObject(object.f2fsWriteEnd);\n                }\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a FtraceEvent message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof perfetto.protos.FtraceEvent\n             * @static\n             * @param {perfetto.protos.FtraceEvent} message FtraceEvent\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            FtraceEvent.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, true);\n                        object.timestamp = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.timestamp = options.longs === String ? \"0\" : 0;\n                    object.pid = 0;\n                }\n                if (message.timestamp != null && message.hasOwnProperty(\"timestamp\"))\n                    if (typeof message.timestamp === \"number\")\n                        object.timestamp = options.longs === String ? String(message.timestamp) : message.timestamp;\n                    else\n                        object.timestamp = options.longs === String ? $util.Long.prototype.toString.call(message.timestamp) : options.longs === Number ? new $util.LongBits(message.timestamp.low >>> 0, message.timestamp.high >>> 0).toNumber(true) : message.timestamp;\n                if (message.pid != null && message.hasOwnProperty(\"pid\"))\n                    object.pid = message.pid;\n                if (message.schedSwitch != null && message.hasOwnProperty(\"schedSwitch\")) {\n                    object.schedSwitch = $root.perfetto.protos.SchedSwitchFtraceEvent.toObject(message.schedSwitch, options);\n                    if (options.oneofs)\n                        object.event = \"schedSwitch\";\n                }\n                if (message.cpufreqInteractiveAlready != null && message.hasOwnProperty(\"cpufreqInteractiveAlready\")) {\n                    object.cpufreqInteractiveAlready = $root.perfetto.protos.CpufreqInteractiveAlreadyFtraceEvent.toObject(message.cpufreqInteractiveAlready, options);\n                    if (options.oneofs)\n                        object.event = \"cpufreqInteractiveAlready\";\n                }\n                if (message.cpufreqInteractiveBoost != null && message.hasOwnProperty(\"cpufreqInteractiveBoost\")) {\n                    object.cpufreqInteractiveBoost = $root.perfetto.protos.CpufreqInteractiveBoostFtraceEvent.toObject(message.cpufreqInteractiveBoost, options);\n                    if (options.oneofs)\n                        object.event = \"cpufreqInteractiveBoost\";\n                }\n                if (message.cpufreqInteractiveNotyet != null && message.hasOwnProperty(\"cpufreqInteractiveNotyet\")) {\n                    object.cpufreqInteractiveNotyet = $root.perfetto.protos.CpufreqInteractiveNotyetFtraceEvent.toObject(message.cpufreqInteractiveNotyet, options);\n                    if (options.oneofs)\n                        object.event = \"cpufreqInteractiveNotyet\";\n                }\n                if (message.cpufreqInteractiveSetspeed != null && message.hasOwnProperty(\"cpufreqInteractiveSetspeed\")) {\n                    object.cpufreqInteractiveSetspeed = $root.perfetto.protos.CpufreqInteractiveSetspeedFtraceEvent.toObject(message.cpufreqInteractiveSetspeed, options);\n                    if (options.oneofs)\n                        object.event = \"cpufreqInteractiveSetspeed\";\n                }\n                if (message.cpufreqInteractiveTarget != null && message.hasOwnProperty(\"cpufreqInteractiveTarget\")) {\n                    object.cpufreqInteractiveTarget = $root.perfetto.protos.CpufreqInteractiveTargetFtraceEvent.toObject(message.cpufreqInteractiveTarget, options);\n                    if (options.oneofs)\n                        object.event = \"cpufreqInteractiveTarget\";\n                }\n                if (message.cpufreqInteractiveUnboost != null && message.hasOwnProperty(\"cpufreqInteractiveUnboost\")) {\n                    object.cpufreqInteractiveUnboost = $root.perfetto.protos.CpufreqInteractiveUnboostFtraceEvent.toObject(message.cpufreqInteractiveUnboost, options);\n                    if (options.oneofs)\n                        object.event = \"cpufreqInteractiveUnboost\";\n                }\n                if (message.cpuFrequency != null && message.hasOwnProperty(\"cpuFrequency\")) {\n                    object.cpuFrequency = $root.perfetto.protos.CpuFrequencyFtraceEvent.toObject(message.cpuFrequency, options);\n                    if (options.oneofs)\n                        object.event = \"cpuFrequency\";\n                }\n                if (message.cpuFrequencyLimits != null && message.hasOwnProperty(\"cpuFrequencyLimits\")) {\n                    object.cpuFrequencyLimits = $root.perfetto.protos.CpuFrequencyLimitsFtraceEvent.toObject(message.cpuFrequencyLimits, options);\n                    if (options.oneofs)\n                        object.event = \"cpuFrequencyLimits\";\n                }\n                if (message.cpuIdle != null && message.hasOwnProperty(\"cpuIdle\")) {\n                    object.cpuIdle = $root.perfetto.protos.CpuIdleFtraceEvent.toObject(message.cpuIdle, options);\n                    if (options.oneofs)\n                        object.event = \"cpuIdle\";\n                }\n                if (message.clockSetRate != null && message.hasOwnProperty(\"clockSetRate\")) {\n                    object.clockSetRate = $root.perfetto.protos.ClockSetRateFtraceEvent.toObject(message.clockSetRate, options);\n                    if (options.oneofs)\n                        object.event = \"clockSetRate\";\n                }\n                if (message.schedWakeup != null && message.hasOwnProperty(\"schedWakeup\")) {\n                    object.schedWakeup = $root.perfetto.protos.SchedWakeupFtraceEvent.toObject(message.schedWakeup, options);\n                    if (options.oneofs)\n                        object.event = \"schedWakeup\";\n                }\n                if (message.schedBlockedReason != null && message.hasOwnProperty(\"schedBlockedReason\")) {\n                    object.schedBlockedReason = $root.perfetto.protos.SchedBlockedReasonFtraceEvent.toObject(message.schedBlockedReason, options);\n                    if (options.oneofs)\n                        object.event = \"schedBlockedReason\";\n                }\n                if (message.schedCpuHotplug != null && message.hasOwnProperty(\"schedCpuHotplug\")) {\n                    object.schedCpuHotplug = $root.perfetto.protos.SchedCpuHotplugFtraceEvent.toObject(message.schedCpuHotplug, options);\n                    if (options.oneofs)\n                        object.event = \"schedCpuHotplug\";\n                }\n                if (message.lowmemoryKill != null && message.hasOwnProperty(\"lowmemoryKill\")) {\n                    object.lowmemoryKill = $root.perfetto.protos.LowmemoryKillFtraceEvent.toObject(message.lowmemoryKill, options);\n                    if (options.oneofs)\n                        object.event = \"lowmemoryKill\";\n                }\n                if (message.ext4DaWriteBegin != null && message.hasOwnProperty(\"ext4DaWriteBegin\")) {\n                    object.ext4DaWriteBegin = $root.perfetto.protos.Ext4DaWriteBeginFtraceEvent.toObject(message.ext4DaWriteBegin, options);\n                    if (options.oneofs)\n                        object.event = \"ext4DaWriteBegin\";\n                }\n                if (message.ext4DaWriteEnd != null && message.hasOwnProperty(\"ext4DaWriteEnd\")) {\n                    object.ext4DaWriteEnd = $root.perfetto.protos.Ext4DaWriteEndFtraceEvent.toObject(message.ext4DaWriteEnd, options);\n                    if (options.oneofs)\n                        object.event = \"ext4DaWriteEnd\";\n                }\n                if (message.ext4SyncFileEnter != null && message.hasOwnProperty(\"ext4SyncFileEnter\")) {\n                    object.ext4SyncFileEnter = $root.perfetto.protos.Ext4SyncFileEnterFtraceEvent.toObject(message.ext4SyncFileEnter, options);\n                    if (options.oneofs)\n                        object.event = \"ext4SyncFileEnter\";\n                }\n                if (message.ext4SyncFileExit != null && message.hasOwnProperty(\"ext4SyncFileExit\")) {\n                    object.ext4SyncFileExit = $root.perfetto.protos.Ext4SyncFileExitFtraceEvent.toObject(message.ext4SyncFileExit, options);\n                    if (options.oneofs)\n                        object.event = \"ext4SyncFileExit\";\n                }\n                if (message.blockRqIssue != null && message.hasOwnProperty(\"blockRqIssue\")) {\n                    object.blockRqIssue = $root.perfetto.protos.BlockRqIssueFtraceEvent.toObject(message.blockRqIssue, options);\n                    if (options.oneofs)\n                        object.event = \"blockRqIssue\";\n                }\n                if (message.mmVmscanDirectReclaimBegin != null && message.hasOwnProperty(\"mmVmscanDirectReclaimBegin\")) {\n                    object.mmVmscanDirectReclaimBegin = $root.perfetto.protos.MmVmscanDirectReclaimBeginFtraceEvent.toObject(message.mmVmscanDirectReclaimBegin, options);\n                    if (options.oneofs)\n                        object.event = \"mmVmscanDirectReclaimBegin\";\n                }\n                if (message.mmVmscanDirectReclaimEnd != null && message.hasOwnProperty(\"mmVmscanDirectReclaimEnd\")) {\n                    object.mmVmscanDirectReclaimEnd = $root.perfetto.protos.MmVmscanDirectReclaimEndFtraceEvent.toObject(message.mmVmscanDirectReclaimEnd, options);\n                    if (options.oneofs)\n                        object.event = \"mmVmscanDirectReclaimEnd\";\n                }\n                if (message.mmVmscanKswapdWake != null && message.hasOwnProperty(\"mmVmscanKswapdWake\")) {\n                    object.mmVmscanKswapdWake = $root.perfetto.protos.MmVmscanKswapdWakeFtraceEvent.toObject(message.mmVmscanKswapdWake, options);\n                    if (options.oneofs)\n                        object.event = \"mmVmscanKswapdWake\";\n                }\n                if (message.mmVmscanKswapdSleep != null && message.hasOwnProperty(\"mmVmscanKswapdSleep\")) {\n                    object.mmVmscanKswapdSleep = $root.perfetto.protos.MmVmscanKswapdSleepFtraceEvent.toObject(message.mmVmscanKswapdSleep, options);\n                    if (options.oneofs)\n                        object.event = \"mmVmscanKswapdSleep\";\n                }\n                if (message.binderTransaction != null && message.hasOwnProperty(\"binderTransaction\")) {\n                    object.binderTransaction = $root.perfetto.protos.BinderTransactionFtraceEvent.toObject(message.binderTransaction, options);\n                    if (options.oneofs)\n                        object.event = \"binderTransaction\";\n                }\n                if (message.binderTransactionReceived != null && message.hasOwnProperty(\"binderTransactionReceived\")) {\n                    object.binderTransactionReceived = $root.perfetto.protos.BinderTransactionReceivedFtraceEvent.toObject(message.binderTransactionReceived, options);\n                    if (options.oneofs)\n                        object.event = \"binderTransactionReceived\";\n                }\n                if (message.binderLock != null && message.hasOwnProperty(\"binderLock\")) {\n                    object.binderLock = $root.perfetto.protos.BinderLockFtraceEvent.toObject(message.binderLock, options);\n                    if (options.oneofs)\n                        object.event = \"binderLock\";\n                }\n                if (message.binderLocked != null && message.hasOwnProperty(\"binderLocked\")) {\n                    object.binderLocked = $root.perfetto.protos.BinderLockedFtraceEvent.toObject(message.binderLocked, options);\n                    if (options.oneofs)\n                        object.event = \"binderLocked\";\n                }\n                if (message.binderUnlock != null && message.hasOwnProperty(\"binderUnlock\")) {\n                    object.binderUnlock = $root.perfetto.protos.BinderUnlockFtraceEvent.toObject(message.binderUnlock, options);\n                    if (options.oneofs)\n                        object.event = \"binderUnlock\";\n                }\n                if (message.cgroupAttachTask != null && message.hasOwnProperty(\"cgroupAttachTask\")) {\n                    object.cgroupAttachTask = $root.perfetto.protos.CgroupAttachTaskFtraceEvent.toObject(message.cgroupAttachTask, options);\n                    if (options.oneofs)\n                        object.event = \"cgroupAttachTask\";\n                }\n                if (message.cgroupMkdir != null && message.hasOwnProperty(\"cgroupMkdir\")) {\n                    object.cgroupMkdir = $root.perfetto.protos.CgroupMkdirFtraceEvent.toObject(message.cgroupMkdir, options);\n                    if (options.oneofs)\n                        object.event = \"cgroupMkdir\";\n                }\n                if (message.cgroupRemount != null && message.hasOwnProperty(\"cgroupRemount\")) {\n                    object.cgroupRemount = $root.perfetto.protos.CgroupRemountFtraceEvent.toObject(message.cgroupRemount, options);\n                    if (options.oneofs)\n                        object.event = \"cgroupRemount\";\n                }\n                if (message.cgroupRmdir != null && message.hasOwnProperty(\"cgroupRmdir\")) {\n                    object.cgroupRmdir = $root.perfetto.protos.CgroupRmdirFtraceEvent.toObject(message.cgroupRmdir, options);\n                    if (options.oneofs)\n                        object.event = \"cgroupRmdir\";\n                }\n                if (message.cgroupTransferTasks != null && message.hasOwnProperty(\"cgroupTransferTasks\")) {\n                    object.cgroupTransferTasks = $root.perfetto.protos.CgroupTransferTasksFtraceEvent.toObject(message.cgroupTransferTasks, options);\n                    if (options.oneofs)\n                        object.event = \"cgroupTransferTasks\";\n                }\n                if (message.cgroupDestroyRoot != null && message.hasOwnProperty(\"cgroupDestroyRoot\")) {\n                    object.cgroupDestroyRoot = $root.perfetto.protos.CgroupDestroyRootFtraceEvent.toObject(message.cgroupDestroyRoot, options);\n                    if (options.oneofs)\n                        object.event = \"cgroupDestroyRoot\";\n                }\n                if (message.cgroupRelease != null && message.hasOwnProperty(\"cgroupRelease\")) {\n                    object.cgroupRelease = $root.perfetto.protos.CgroupReleaseFtraceEvent.toObject(message.cgroupRelease, options);\n                    if (options.oneofs)\n                        object.event = \"cgroupRelease\";\n                }\n                if (message.cgroupRename != null && message.hasOwnProperty(\"cgroupRename\")) {\n                    object.cgroupRename = $root.perfetto.protos.CgroupRenameFtraceEvent.toObject(message.cgroupRename, options);\n                    if (options.oneofs)\n                        object.event = \"cgroupRename\";\n                }\n                if (message.cgroupSetupRoot != null && message.hasOwnProperty(\"cgroupSetupRoot\")) {\n                    object.cgroupSetupRoot = $root.perfetto.protos.CgroupSetupRootFtraceEvent.toObject(message.cgroupSetupRoot, options);\n                    if (options.oneofs)\n                        object.event = \"cgroupSetupRoot\";\n                }\n                if (message.blockRqComplete != null && message.hasOwnProperty(\"blockRqComplete\")) {\n                    object.blockRqComplete = $root.perfetto.protos.BlockRqCompleteFtraceEvent.toObject(message.blockRqComplete, options);\n                    if (options.oneofs)\n                        object.event = \"blockRqComplete\";\n                }\n                if (message.ext4EsLookupExtentEnter != null && message.hasOwnProperty(\"ext4EsLookupExtentEnter\")) {\n                    object.ext4EsLookupExtentEnter = $root.perfetto.protos.Ext4EsLookupExtentEnterFtraceEvent.toObject(message.ext4EsLookupExtentEnter, options);\n                    if (options.oneofs)\n                        object.event = \"ext4EsLookupExtentEnter\";\n                }\n                if (message.ext4EsLookupExtentExit != null && message.hasOwnProperty(\"ext4EsLookupExtentExit\")) {\n                    object.ext4EsLookupExtentExit = $root.perfetto.protos.Ext4EsLookupExtentExitFtraceEvent.toObject(message.ext4EsLookupExtentExit, options);\n                    if (options.oneofs)\n                        object.event = \"ext4EsLookupExtentExit\";\n                }\n                if (message.ext4LoadInode != null && message.hasOwnProperty(\"ext4LoadInode\")) {\n                    object.ext4LoadInode = $root.perfetto.protos.Ext4LoadInodeFtraceEvent.toObject(message.ext4LoadInode, options);\n                    if (options.oneofs)\n                        object.event = \"ext4LoadInode\";\n                }\n                if (message.f2fsGetDataBlock != null && message.hasOwnProperty(\"f2fsGetDataBlock\")) {\n                    object.f2fsGetDataBlock = $root.perfetto.protos.F2fsGetDataBlockFtraceEvent.toObject(message.f2fsGetDataBlock, options);\n                    if (options.oneofs)\n                        object.event = \"f2fsGetDataBlock\";\n                }\n                if (message.f2fsIget != null && message.hasOwnProperty(\"f2fsIget\")) {\n                    object.f2fsIget = $root.perfetto.protos.F2fsIgetFtraceEvent.toObject(message.f2fsIget, options);\n                    if (options.oneofs)\n                        object.event = \"f2fsIget\";\n                }\n                if (message.f2fsSyncFileEnter != null && message.hasOwnProperty(\"f2fsSyncFileEnter\")) {\n                    object.f2fsSyncFileEnter = $root.perfetto.protos.F2fsSyncFileEnterFtraceEvent.toObject(message.f2fsSyncFileEnter, options);\n                    if (options.oneofs)\n                        object.event = \"f2fsSyncFileEnter\";\n                }\n                if (message.f2fsSyncFileExit != null && message.hasOwnProperty(\"f2fsSyncFileExit\")) {\n                    object.f2fsSyncFileExit = $root.perfetto.protos.F2fsSyncFileExitFtraceEvent.toObject(message.f2fsSyncFileExit, options);\n                    if (options.oneofs)\n                        object.event = \"f2fsSyncFileExit\";\n                }\n                if (message.f2fsWriteBegin != null && message.hasOwnProperty(\"f2fsWriteBegin\")) {\n                    object.f2fsWriteBegin = $root.perfetto.protos.F2fsWriteBeginFtraceEvent.toObject(message.f2fsWriteBegin, options);\n                    if (options.oneofs)\n                        object.event = \"f2fsWriteBegin\";\n                }\n                if (message.f2fsWriteEnd != null && message.hasOwnProperty(\"f2fsWriteEnd\")) {\n                    object.f2fsWriteEnd = $root.perfetto.protos.F2fsWriteEndFtraceEvent.toObject(message.f2fsWriteEnd, options);\n                    if (options.oneofs)\n                        object.event = \"f2fsWriteEnd\";\n                }\n                return object;\n            };\n\n            /**\n             * Converts this FtraceEvent to JSON.\n             * @function toJSON\n             * @memberof perfetto.protos.FtraceEvent\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            FtraceEvent.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return FtraceEvent;\n        })();\n\n        protos.InodeFileMap = (function() {\n\n            /**\n             * Properties of an InodeFileMap.\n             * @memberof perfetto.protos\n             * @interface IInodeFileMap\n             * @property {number|Long|null} [blockDeviceId] InodeFileMap blockDeviceId\n             * @property {Array.<string>|null} [mountPoints] InodeFileMap mountPoints\n             * @property {Array.<perfetto.protos.InodeFileMap.IEntry>|null} [entries] InodeFileMap entries\n             */\n\n            /**\n             * Constructs a new InodeFileMap.\n             * @memberof perfetto.protos\n             * @classdesc Represents an InodeFileMap.\n             * @implements IInodeFileMap\n             * @constructor\n             * @param {perfetto.protos.IInodeFileMap=} [properties] Properties to set\n             */\n            function InodeFileMap(properties) {\n                this.mountPoints = [];\n                this.entries = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * InodeFileMap blockDeviceId.\n             * @member {number|Long} blockDeviceId\n             * @memberof perfetto.protos.InodeFileMap\n             * @instance\n             */\n            InodeFileMap.prototype.blockDeviceId = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n            /**\n             * InodeFileMap mountPoints.\n             * @member {Array.<string>} mountPoints\n             * @memberof perfetto.protos.InodeFileMap\n             * @instance\n             */\n            InodeFileMap.prototype.mountPoints = $util.emptyArray;\n\n            /**\n             * InodeFileMap entries.\n             * @member {Array.<perfetto.protos.InodeFileMap.IEntry>} entries\n             * @memberof perfetto.protos.InodeFileMap\n             * @instance\n             */\n            InodeFileMap.prototype.entries = $util.emptyArray;\n\n            /**\n             * Creates a new InodeFileMap instance using the specified properties.\n             * @function create\n             * @memberof perfetto.protos.InodeFileMap\n             * @static\n             * @param {perfetto.protos.IInodeFileMap=} [properties] Properties to set\n             * @returns {perfetto.protos.InodeFileMap} InodeFileMap instance\n             */\n            InodeFileMap.create = function create(properties) {\n                return new InodeFileMap(properties);\n            };\n\n            /**\n             * Encodes the specified InodeFileMap message. Does not implicitly {@link perfetto.protos.InodeFileMap.verify|verify} messages.\n             * @function encode\n             * @memberof perfetto.protos.InodeFileMap\n             * @static\n             * @param {perfetto.protos.IInodeFileMap} message InodeFileMap message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            InodeFileMap.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.blockDeviceId != null && message.hasOwnProperty(\"blockDeviceId\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.blockDeviceId);\n                if (message.mountPoints != null && message.mountPoints.length)\n                    for (var i = 0; i < message.mountPoints.length; ++i)\n                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.mountPoints[i]);\n                if (message.entries != null && message.entries.length)\n                    for (var i = 0; i < message.entries.length; ++i)\n                        $root.perfetto.protos.InodeFileMap.Entry.encode(message.entries[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n                return writer;\n            };\n\n            /**\n             * Encodes the specified InodeFileMap message, length delimited. Does not implicitly {@link perfetto.protos.InodeFileMap.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof perfetto.protos.InodeFileMap\n             * @static\n             * @param {perfetto.protos.IInodeFileMap} message InodeFileMap message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            InodeFileMap.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes an InodeFileMap message from the specified reader or buffer.\n             * @function decode\n             * @memberof perfetto.protos.InodeFileMap\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {perfetto.protos.InodeFileMap} InodeFileMap\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            InodeFileMap.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.InodeFileMap();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.blockDeviceId = reader.uint64();\n                        break;\n                    case 2:\n                        if (!(message.mountPoints && message.mountPoints.length))\n                            message.mountPoints = [];\n                        message.mountPoints.push(reader.string());\n                        break;\n                    case 3:\n                        if (!(message.entries && message.entries.length))\n                            message.entries = [];\n                        message.entries.push($root.perfetto.protos.InodeFileMap.Entry.decode(reader, reader.uint32()));\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes an InodeFileMap message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof perfetto.protos.InodeFileMap\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {perfetto.protos.InodeFileMap} InodeFileMap\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            InodeFileMap.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies an InodeFileMap message.\n             * @function verify\n             * @memberof perfetto.protos.InodeFileMap\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            InodeFileMap.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.blockDeviceId != null && message.hasOwnProperty(\"blockDeviceId\"))\n                    if (!$util.isInteger(message.blockDeviceId) && !(message.blockDeviceId && $util.isInteger(message.blockDeviceId.low) && $util.isInteger(message.blockDeviceId.high)))\n                        return \"blockDeviceId: integer|Long expected\";\n                if (message.mountPoints != null && message.hasOwnProperty(\"mountPoints\")) {\n                    if (!Array.isArray(message.mountPoints))\n                        return \"mountPoints: array expected\";\n                    for (var i = 0; i < message.mountPoints.length; ++i)\n                        if (!$util.isString(message.mountPoints[i]))\n                            return \"mountPoints: string[] expected\";\n                }\n                if (message.entries != null && message.hasOwnProperty(\"entries\")) {\n                    if (!Array.isArray(message.entries))\n                        return \"entries: array expected\";\n                    for (var i = 0; i < message.entries.length; ++i) {\n                        var error = $root.perfetto.protos.InodeFileMap.Entry.verify(message.entries[i]);\n                        if (error)\n                            return \"entries.\" + error;\n                    }\n                }\n                return null;\n            };\n\n            /**\n             * Creates an InodeFileMap message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof perfetto.protos.InodeFileMap\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {perfetto.protos.InodeFileMap} InodeFileMap\n             */\n            InodeFileMap.fromObject = function fromObject(object) {\n                if (object instanceof $root.perfetto.protos.InodeFileMap)\n                    return object;\n                var message = new $root.perfetto.protos.InodeFileMap();\n                if (object.blockDeviceId != null)\n                    if ($util.Long)\n                        (message.blockDeviceId = $util.Long.fromValue(object.blockDeviceId)).unsigned = true;\n                    else if (typeof object.blockDeviceId === \"string\")\n                        message.blockDeviceId = parseInt(object.blockDeviceId, 10);\n                    else if (typeof object.blockDeviceId === \"number\")\n                        message.blockDeviceId = object.blockDeviceId;\n                    else if (typeof object.blockDeviceId === \"object\")\n                        message.blockDeviceId = new $util.LongBits(object.blockDeviceId.low >>> 0, object.blockDeviceId.high >>> 0).toNumber(true);\n                if (object.mountPoints) {\n                    if (!Array.isArray(object.mountPoints))\n                        throw TypeError(\".perfetto.protos.InodeFileMap.mountPoints: array expected\");\n                    message.mountPoints = [];\n                    for (var i = 0; i < object.mountPoints.length; ++i)\n                        message.mountPoints[i] = String(object.mountPoints[i]);\n                }\n                if (object.entries) {\n                    if (!Array.isArray(object.entries))\n                        throw TypeError(\".perfetto.protos.InodeFileMap.entries: array expected\");\n                    message.entries = [];\n                    for (var i = 0; i < object.entries.length; ++i) {\n                        if (typeof object.entries[i] !== \"object\")\n                            throw TypeError(\".perfetto.protos.InodeFileMap.entries: object expected\");\n                        message.entries[i] = $root.perfetto.protos.InodeFileMap.Entry.fromObject(object.entries[i]);\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Creates a plain object from an InodeFileMap message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof perfetto.protos.InodeFileMap\n             * @static\n             * @param {perfetto.protos.InodeFileMap} message InodeFileMap\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            InodeFileMap.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults) {\n                    object.mountPoints = [];\n                    object.entries = [];\n                }\n                if (options.defaults)\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, true);\n                        object.blockDeviceId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.blockDeviceId = options.longs === String ? \"0\" : 0;\n                if (message.blockDeviceId != null && message.hasOwnProperty(\"blockDeviceId\"))\n                    if (typeof message.blockDeviceId === \"number\")\n                        object.blockDeviceId = options.longs === String ? String(message.blockDeviceId) : message.blockDeviceId;\n                    else\n                        object.blockDeviceId = options.longs === String ? $util.Long.prototype.toString.call(message.blockDeviceId) : options.longs === Number ? new $util.LongBits(message.blockDeviceId.low >>> 0, message.blockDeviceId.high >>> 0).toNumber(true) : message.blockDeviceId;\n                if (message.mountPoints && message.mountPoints.length) {\n                    object.mountPoints = [];\n                    for (var j = 0; j < message.mountPoints.length; ++j)\n                        object.mountPoints[j] = message.mountPoints[j];\n                }\n                if (message.entries && message.entries.length) {\n                    object.entries = [];\n                    for (var j = 0; j < message.entries.length; ++j)\n                        object.entries[j] = $root.perfetto.protos.InodeFileMap.Entry.toObject(message.entries[j], options);\n                }\n                return object;\n            };\n\n            /**\n             * Converts this InodeFileMap to JSON.\n             * @function toJSON\n             * @memberof perfetto.protos.InodeFileMap\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            InodeFileMap.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            InodeFileMap.Entry = (function() {\n\n                /**\n                 * Properties of an Entry.\n                 * @memberof perfetto.protos.InodeFileMap\n                 * @interface IEntry\n                 * @property {number|Long|null} [inodeNumber] Entry inodeNumber\n                 * @property {Array.<string>|null} [paths] Entry paths\n                 * @property {perfetto.protos.InodeFileMap.Entry.Type|null} [type] Entry type\n                 */\n\n                /**\n                 * Constructs a new Entry.\n                 * @memberof perfetto.protos.InodeFileMap\n                 * @classdesc Represents an Entry.\n                 * @implements IEntry\n                 * @constructor\n                 * @param {perfetto.protos.InodeFileMap.IEntry=} [properties] Properties to set\n                 */\n                function Entry(properties) {\n                    this.paths = [];\n                    if (properties)\n                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                            if (properties[keys[i]] != null)\n                                this[keys[i]] = properties[keys[i]];\n                }\n\n                /**\n                 * Entry inodeNumber.\n                 * @member {number|Long} inodeNumber\n                 * @memberof perfetto.protos.InodeFileMap.Entry\n                 * @instance\n                 */\n                Entry.prototype.inodeNumber = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n                /**\n                 * Entry paths.\n                 * @member {Array.<string>} paths\n                 * @memberof perfetto.protos.InodeFileMap.Entry\n                 * @instance\n                 */\n                Entry.prototype.paths = $util.emptyArray;\n\n                /**\n                 * Entry type.\n                 * @member {perfetto.protos.InodeFileMap.Entry.Type} type\n                 * @memberof perfetto.protos.InodeFileMap.Entry\n                 * @instance\n                 */\n                Entry.prototype.type = 0;\n\n                /**\n                 * Creates a new Entry instance using the specified properties.\n                 * @function create\n                 * @memberof perfetto.protos.InodeFileMap.Entry\n                 * @static\n                 * @param {perfetto.protos.InodeFileMap.IEntry=} [properties] Properties to set\n                 * @returns {perfetto.protos.InodeFileMap.Entry} Entry instance\n                 */\n                Entry.create = function create(properties) {\n                    return new Entry(properties);\n                };\n\n                /**\n                 * Encodes the specified Entry message. Does not implicitly {@link perfetto.protos.InodeFileMap.Entry.verify|verify} messages.\n                 * @function encode\n                 * @memberof perfetto.protos.InodeFileMap.Entry\n                 * @static\n                 * @param {perfetto.protos.InodeFileMap.IEntry} message Entry message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                Entry.encode = function encode(message, writer) {\n                    if (!writer)\n                        writer = $Writer.create();\n                    if (message.inodeNumber != null && message.hasOwnProperty(\"inodeNumber\"))\n                        writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.inodeNumber);\n                    if (message.paths != null && message.paths.length)\n                        for (var i = 0; i < message.paths.length; ++i)\n                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.paths[i]);\n                    if (message.type != null && message.hasOwnProperty(\"type\"))\n                        writer.uint32(/* id 3, wireType 0 =*/24).int32(message.type);\n                    return writer;\n                };\n\n                /**\n                 * Encodes the specified Entry message, length delimited. Does not implicitly {@link perfetto.protos.InodeFileMap.Entry.verify|verify} messages.\n                 * @function encodeDelimited\n                 * @memberof perfetto.protos.InodeFileMap.Entry\n                 * @static\n                 * @param {perfetto.protos.InodeFileMap.IEntry} message Entry message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                Entry.encodeDelimited = function encodeDelimited(message, writer) {\n                    return this.encode(message, writer).ldelim();\n                };\n\n                /**\n                 * Decodes an Entry message from the specified reader or buffer.\n                 * @function decode\n                 * @memberof perfetto.protos.InodeFileMap.Entry\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @param {number} [length] Message length if known beforehand\n                 * @returns {perfetto.protos.InodeFileMap.Entry} Entry\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                Entry.decode = function decode(reader, length) {\n                    if (!(reader instanceof $Reader))\n                        reader = $Reader.create(reader);\n                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.InodeFileMap.Entry();\n                    while (reader.pos < end) {\n                        var tag = reader.uint32();\n                        switch (tag >>> 3) {\n                        case 1:\n                            message.inodeNumber = reader.uint64();\n                            break;\n                        case 2:\n                            if (!(message.paths && message.paths.length))\n                                message.paths = [];\n                            message.paths.push(reader.string());\n                            break;\n                        case 3:\n                            message.type = reader.int32();\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                    return message;\n                };\n\n                /**\n                 * Decodes an Entry message from the specified reader or buffer, length delimited.\n                 * @function decodeDelimited\n                 * @memberof perfetto.protos.InodeFileMap.Entry\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @returns {perfetto.protos.InodeFileMap.Entry} Entry\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                Entry.decodeDelimited = function decodeDelimited(reader) {\n                    if (!(reader instanceof $Reader))\n                        reader = new $Reader(reader);\n                    return this.decode(reader, reader.uint32());\n                };\n\n                /**\n                 * Verifies an Entry message.\n                 * @function verify\n                 * @memberof perfetto.protos.InodeFileMap.Entry\n                 * @static\n                 * @param {Object.<string,*>} message Plain object to verify\n                 * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                 */\n                Entry.verify = function verify(message) {\n                    if (typeof message !== \"object\" || message === null)\n                        return \"object expected\";\n                    if (message.inodeNumber != null && message.hasOwnProperty(\"inodeNumber\"))\n                        if (!$util.isInteger(message.inodeNumber) && !(message.inodeNumber && $util.isInteger(message.inodeNumber.low) && $util.isInteger(message.inodeNumber.high)))\n                            return \"inodeNumber: integer|Long expected\";\n                    if (message.paths != null && message.hasOwnProperty(\"paths\")) {\n                        if (!Array.isArray(message.paths))\n                            return \"paths: array expected\";\n                        for (var i = 0; i < message.paths.length; ++i)\n                            if (!$util.isString(message.paths[i]))\n                                return \"paths: string[] expected\";\n                    }\n                    if (message.type != null && message.hasOwnProperty(\"type\"))\n                        switch (message.type) {\n                        default:\n                            return \"type: enum value expected\";\n                        case 0:\n                        case 1:\n                        case 2:\n                            break;\n                        }\n                    return null;\n                };\n\n                /**\n                 * Creates an Entry message from a plain object. Also converts values to their respective internal types.\n                 * @function fromObject\n                 * @memberof perfetto.protos.InodeFileMap.Entry\n                 * @static\n                 * @param {Object.<string,*>} object Plain object\n                 * @returns {perfetto.protos.InodeFileMap.Entry} Entry\n                 */\n                Entry.fromObject = function fromObject(object) {\n                    if (object instanceof $root.perfetto.protos.InodeFileMap.Entry)\n                        return object;\n                    var message = new $root.perfetto.protos.InodeFileMap.Entry();\n                    if (object.inodeNumber != null)\n                        if ($util.Long)\n                            (message.inodeNumber = $util.Long.fromValue(object.inodeNumber)).unsigned = true;\n                        else if (typeof object.inodeNumber === \"string\")\n                            message.inodeNumber = parseInt(object.inodeNumber, 10);\n                        else if (typeof object.inodeNumber === \"number\")\n                            message.inodeNumber = object.inodeNumber;\n                        else if (typeof object.inodeNumber === \"object\")\n                            message.inodeNumber = new $util.LongBits(object.inodeNumber.low >>> 0, object.inodeNumber.high >>> 0).toNumber(true);\n                    if (object.paths) {\n                        if (!Array.isArray(object.paths))\n                            throw TypeError(\".perfetto.protos.InodeFileMap.Entry.paths: array expected\");\n                        message.paths = [];\n                        for (var i = 0; i < object.paths.length; ++i)\n                            message.paths[i] = String(object.paths[i]);\n                    }\n                    switch (object.type) {\n                    case \"UNKNOWN\":\n                    case 0:\n                        message.type = 0;\n                        break;\n                    case \"FILE\":\n                    case 1:\n                        message.type = 1;\n                        break;\n                    case \"DIRECTORY\":\n                    case 2:\n                        message.type = 2;\n                        break;\n                    }\n                    return message;\n                };\n\n                /**\n                 * Creates a plain object from an Entry message. Also converts values to other types if specified.\n                 * @function toObject\n                 * @memberof perfetto.protos.InodeFileMap.Entry\n                 * @static\n                 * @param {perfetto.protos.InodeFileMap.Entry} message Entry\n                 * @param {$protobuf.IConversionOptions} [options] Conversion options\n                 * @returns {Object.<string,*>} Plain object\n                 */\n                Entry.toObject = function toObject(message, options) {\n                    if (!options)\n                        options = {};\n                    var object = {};\n                    if (options.arrays || options.defaults)\n                        object.paths = [];\n                    if (options.defaults) {\n                        if ($util.Long) {\n                            var long = new $util.Long(0, 0, true);\n                            object.inodeNumber = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                        } else\n                            object.inodeNumber = options.longs === String ? \"0\" : 0;\n                        object.type = options.enums === String ? \"UNKNOWN\" : 0;\n                    }\n                    if (message.inodeNumber != null && message.hasOwnProperty(\"inodeNumber\"))\n                        if (typeof message.inodeNumber === \"number\")\n                            object.inodeNumber = options.longs === String ? String(message.inodeNumber) : message.inodeNumber;\n                        else\n                            object.inodeNumber = options.longs === String ? $util.Long.prototype.toString.call(message.inodeNumber) : options.longs === Number ? new $util.LongBits(message.inodeNumber.low >>> 0, message.inodeNumber.high >>> 0).toNumber(true) : message.inodeNumber;\n                    if (message.paths && message.paths.length) {\n                        object.paths = [];\n                        for (var j = 0; j < message.paths.length; ++j)\n                            object.paths[j] = message.paths[j];\n                    }\n                    if (message.type != null && message.hasOwnProperty(\"type\"))\n                        object.type = options.enums === String ? $root.perfetto.protos.InodeFileMap.Entry.Type[message.type] : message.type;\n                    return object;\n                };\n\n                /**\n                 * Converts this Entry to JSON.\n                 * @function toJSON\n                 * @memberof perfetto.protos.InodeFileMap.Entry\n                 * @instance\n                 * @returns {Object.<string,*>} JSON object\n                 */\n                Entry.prototype.toJSON = function toJSON() {\n                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                };\n\n                /**\n                 * Type enum.\n                 * @name perfetto.protos.InodeFileMap.Entry.Type\n                 * @enum {string}\n                 * @property {number} UNKNOWN=0 UNKNOWN value\n                 * @property {number} FILE=1 FILE value\n                 * @property {number} DIRECTORY=2 DIRECTORY value\n                 */\n                Entry.Type = (function() {\n                    var valuesById = {}, values = Object.create(valuesById);\n                    values[valuesById[0] = \"UNKNOWN\"] = 0;\n                    values[valuesById[1] = \"FILE\"] = 1;\n                    values[valuesById[2] = \"DIRECTORY\"] = 2;\n                    return values;\n                })();\n\n                return Entry;\n            })();\n\n            return InodeFileMap;\n        })();\n\n        protos.ProcessTree = (function() {\n\n            /**\n             * Properties of a ProcessTree.\n             * @memberof perfetto.protos\n             * @interface IProcessTree\n             * @property {Array.<perfetto.protos.ProcessTree.IProcess>|null} [processes] ProcessTree processes\n             * @property {Array.<perfetto.protos.ProcessTree.IThread>|null} [threads] ProcessTree threads\n             */\n\n            /**\n             * Constructs a new ProcessTree.\n             * @memberof perfetto.protos\n             * @classdesc Represents a ProcessTree.\n             * @implements IProcessTree\n             * @constructor\n             * @param {perfetto.protos.IProcessTree=} [properties] Properties to set\n             */\n            function ProcessTree(properties) {\n                this.processes = [];\n                this.threads = [];\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * ProcessTree processes.\n             * @member {Array.<perfetto.protos.ProcessTree.IProcess>} processes\n             * @memberof perfetto.protos.ProcessTree\n             * @instance\n             */\n            ProcessTree.prototype.processes = $util.emptyArray;\n\n            /**\n             * ProcessTree threads.\n             * @member {Array.<perfetto.protos.ProcessTree.IThread>} threads\n             * @memberof perfetto.protos.ProcessTree\n             * @instance\n             */\n            ProcessTree.prototype.threads = $util.emptyArray;\n\n            /**\n             * Creates a new ProcessTree instance using the specified properties.\n             * @function create\n             * @memberof perfetto.protos.ProcessTree\n             * @static\n             * @param {perfetto.protos.IProcessTree=} [properties] Properties to set\n             * @returns {perfetto.protos.ProcessTree} ProcessTree instance\n             */\n            ProcessTree.create = function create(properties) {\n                return new ProcessTree(properties);\n            };\n\n            /**\n             * Encodes the specified ProcessTree message. Does not implicitly {@link perfetto.protos.ProcessTree.verify|verify} messages.\n             * @function encode\n             * @memberof perfetto.protos.ProcessTree\n             * @static\n             * @param {perfetto.protos.IProcessTree} message ProcessTree message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            ProcessTree.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.processes != null && message.processes.length)\n                    for (var i = 0; i < message.processes.length; ++i)\n                        $root.perfetto.protos.ProcessTree.Process.encode(message.processes[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n                if (message.threads != null && message.threads.length)\n                    for (var i = 0; i < message.threads.length; ++i)\n                        $root.perfetto.protos.ProcessTree.Thread.encode(message.threads[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                return writer;\n            };\n\n            /**\n             * Encodes the specified ProcessTree message, length delimited. Does not implicitly {@link perfetto.protos.ProcessTree.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof perfetto.protos.ProcessTree\n             * @static\n             * @param {perfetto.protos.IProcessTree} message ProcessTree message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            ProcessTree.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a ProcessTree message from the specified reader or buffer.\n             * @function decode\n             * @memberof perfetto.protos.ProcessTree\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {perfetto.protos.ProcessTree} ProcessTree\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            ProcessTree.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.ProcessTree();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        if (!(message.processes && message.processes.length))\n                            message.processes = [];\n                        message.processes.push($root.perfetto.protos.ProcessTree.Process.decode(reader, reader.uint32()));\n                        break;\n                    case 2:\n                        if (!(message.threads && message.threads.length))\n                            message.threads = [];\n                        message.threads.push($root.perfetto.protos.ProcessTree.Thread.decode(reader, reader.uint32()));\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a ProcessTree message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof perfetto.protos.ProcessTree\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {perfetto.protos.ProcessTree} ProcessTree\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            ProcessTree.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a ProcessTree message.\n             * @function verify\n             * @memberof perfetto.protos.ProcessTree\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            ProcessTree.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.processes != null && message.hasOwnProperty(\"processes\")) {\n                    if (!Array.isArray(message.processes))\n                        return \"processes: array expected\";\n                    for (var i = 0; i < message.processes.length; ++i) {\n                        var error = $root.perfetto.protos.ProcessTree.Process.verify(message.processes[i]);\n                        if (error)\n                            return \"processes.\" + error;\n                    }\n                }\n                if (message.threads != null && message.hasOwnProperty(\"threads\")) {\n                    if (!Array.isArray(message.threads))\n                        return \"threads: array expected\";\n                    for (var i = 0; i < message.threads.length; ++i) {\n                        var error = $root.perfetto.protos.ProcessTree.Thread.verify(message.threads[i]);\n                        if (error)\n                            return \"threads.\" + error;\n                    }\n                }\n                return null;\n            };\n\n            /**\n             * Creates a ProcessTree message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof perfetto.protos.ProcessTree\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {perfetto.protos.ProcessTree} ProcessTree\n             */\n            ProcessTree.fromObject = function fromObject(object) {\n                if (object instanceof $root.perfetto.protos.ProcessTree)\n                    return object;\n                var message = new $root.perfetto.protos.ProcessTree();\n                if (object.processes) {\n                    if (!Array.isArray(object.processes))\n                        throw TypeError(\".perfetto.protos.ProcessTree.processes: array expected\");\n                    message.processes = [];\n                    for (var i = 0; i < object.processes.length; ++i) {\n                        if (typeof object.processes[i] !== \"object\")\n                            throw TypeError(\".perfetto.protos.ProcessTree.processes: object expected\");\n                        message.processes[i] = $root.perfetto.protos.ProcessTree.Process.fromObject(object.processes[i]);\n                    }\n                }\n                if (object.threads) {\n                    if (!Array.isArray(object.threads))\n                        throw TypeError(\".perfetto.protos.ProcessTree.threads: array expected\");\n                    message.threads = [];\n                    for (var i = 0; i < object.threads.length; ++i) {\n                        if (typeof object.threads[i] !== \"object\")\n                            throw TypeError(\".perfetto.protos.ProcessTree.threads: object expected\");\n                        message.threads[i] = $root.perfetto.protos.ProcessTree.Thread.fromObject(object.threads[i]);\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a ProcessTree message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof perfetto.protos.ProcessTree\n             * @static\n             * @param {perfetto.protos.ProcessTree} message ProcessTree\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            ProcessTree.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.arrays || options.defaults) {\n                    object.processes = [];\n                    object.threads = [];\n                }\n                if (message.processes && message.processes.length) {\n                    object.processes = [];\n                    for (var j = 0; j < message.processes.length; ++j)\n                        object.processes[j] = $root.perfetto.protos.ProcessTree.Process.toObject(message.processes[j], options);\n                }\n                if (message.threads && message.threads.length) {\n                    object.threads = [];\n                    for (var j = 0; j < message.threads.length; ++j)\n                        object.threads[j] = $root.perfetto.protos.ProcessTree.Thread.toObject(message.threads[j], options);\n                }\n                return object;\n            };\n\n            /**\n             * Converts this ProcessTree to JSON.\n             * @function toJSON\n             * @memberof perfetto.protos.ProcessTree\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            ProcessTree.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            ProcessTree.Thread = (function() {\n\n                /**\n                 * Properties of a Thread.\n                 * @memberof perfetto.protos.ProcessTree\n                 * @interface IThread\n                 * @property {number|null} [tid] Thread tid\n                 * @property {number|null} [tgid] Thread tgid\n                 * @property {string|null} [name] Thread name\n                 */\n\n                /**\n                 * Constructs a new Thread.\n                 * @memberof perfetto.protos.ProcessTree\n                 * @classdesc Represents a Thread.\n                 * @implements IThread\n                 * @constructor\n                 * @param {perfetto.protos.ProcessTree.IThread=} [properties] Properties to set\n                 */\n                function Thread(properties) {\n                    if (properties)\n                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                            if (properties[keys[i]] != null)\n                                this[keys[i]] = properties[keys[i]];\n                }\n\n                /**\n                 * Thread tid.\n                 * @member {number} tid\n                 * @memberof perfetto.protos.ProcessTree.Thread\n                 * @instance\n                 */\n                Thread.prototype.tid = 0;\n\n                /**\n                 * Thread tgid.\n                 * @member {number} tgid\n                 * @memberof perfetto.protos.ProcessTree.Thread\n                 * @instance\n                 */\n                Thread.prototype.tgid = 0;\n\n                /**\n                 * Thread name.\n                 * @member {string} name\n                 * @memberof perfetto.protos.ProcessTree.Thread\n                 * @instance\n                 */\n                Thread.prototype.name = \"\";\n\n                /**\n                 * Creates a new Thread instance using the specified properties.\n                 * @function create\n                 * @memberof perfetto.protos.ProcessTree.Thread\n                 * @static\n                 * @param {perfetto.protos.ProcessTree.IThread=} [properties] Properties to set\n                 * @returns {perfetto.protos.ProcessTree.Thread} Thread instance\n                 */\n                Thread.create = function create(properties) {\n                    return new Thread(properties);\n                };\n\n                /**\n                 * Encodes the specified Thread message. Does not implicitly {@link perfetto.protos.ProcessTree.Thread.verify|verify} messages.\n                 * @function encode\n                 * @memberof perfetto.protos.ProcessTree.Thread\n                 * @static\n                 * @param {perfetto.protos.ProcessTree.IThread} message Thread message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                Thread.encode = function encode(message, writer) {\n                    if (!writer)\n                        writer = $Writer.create();\n                    if (message.tid != null && message.hasOwnProperty(\"tid\"))\n                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.tid);\n                    if (message.name != null && message.hasOwnProperty(\"name\"))\n                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.name);\n                    if (message.tgid != null && message.hasOwnProperty(\"tgid\"))\n                        writer.uint32(/* id 3, wireType 0 =*/24).int32(message.tgid);\n                    return writer;\n                };\n\n                /**\n                 * Encodes the specified Thread message, length delimited. Does not implicitly {@link perfetto.protos.ProcessTree.Thread.verify|verify} messages.\n                 * @function encodeDelimited\n                 * @memberof perfetto.protos.ProcessTree.Thread\n                 * @static\n                 * @param {perfetto.protos.ProcessTree.IThread} message Thread message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                Thread.encodeDelimited = function encodeDelimited(message, writer) {\n                    return this.encode(message, writer).ldelim();\n                };\n\n                /**\n                 * Decodes a Thread message from the specified reader or buffer.\n                 * @function decode\n                 * @memberof perfetto.protos.ProcessTree.Thread\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @param {number} [length] Message length if known beforehand\n                 * @returns {perfetto.protos.ProcessTree.Thread} Thread\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                Thread.decode = function decode(reader, length) {\n                    if (!(reader instanceof $Reader))\n                        reader = $Reader.create(reader);\n                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.ProcessTree.Thread();\n                    while (reader.pos < end) {\n                        var tag = reader.uint32();\n                        switch (tag >>> 3) {\n                        case 1:\n                            message.tid = reader.int32();\n                            break;\n                        case 3:\n                            message.tgid = reader.int32();\n                            break;\n                        case 2:\n                            message.name = reader.string();\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                    return message;\n                };\n\n                /**\n                 * Decodes a Thread message from the specified reader or buffer, length delimited.\n                 * @function decodeDelimited\n                 * @memberof perfetto.protos.ProcessTree.Thread\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @returns {perfetto.protos.ProcessTree.Thread} Thread\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                Thread.decodeDelimited = function decodeDelimited(reader) {\n                    if (!(reader instanceof $Reader))\n                        reader = new $Reader(reader);\n                    return this.decode(reader, reader.uint32());\n                };\n\n                /**\n                 * Verifies a Thread message.\n                 * @function verify\n                 * @memberof perfetto.protos.ProcessTree.Thread\n                 * @static\n                 * @param {Object.<string,*>} message Plain object to verify\n                 * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                 */\n                Thread.verify = function verify(message) {\n                    if (typeof message !== \"object\" || message === null)\n                        return \"object expected\";\n                    if (message.tid != null && message.hasOwnProperty(\"tid\"))\n                        if (!$util.isInteger(message.tid))\n                            return \"tid: integer expected\";\n                    if (message.tgid != null && message.hasOwnProperty(\"tgid\"))\n                        if (!$util.isInteger(message.tgid))\n                            return \"tgid: integer expected\";\n                    if (message.name != null && message.hasOwnProperty(\"name\"))\n                        if (!$util.isString(message.name))\n                            return \"name: string expected\";\n                    return null;\n                };\n\n                /**\n                 * Creates a Thread message from a plain object. Also converts values to their respective internal types.\n                 * @function fromObject\n                 * @memberof perfetto.protos.ProcessTree.Thread\n                 * @static\n                 * @param {Object.<string,*>} object Plain object\n                 * @returns {perfetto.protos.ProcessTree.Thread} Thread\n                 */\n                Thread.fromObject = function fromObject(object) {\n                    if (object instanceof $root.perfetto.protos.ProcessTree.Thread)\n                        return object;\n                    var message = new $root.perfetto.protos.ProcessTree.Thread();\n                    if (object.tid != null)\n                        message.tid = object.tid | 0;\n                    if (object.tgid != null)\n                        message.tgid = object.tgid | 0;\n                    if (object.name != null)\n                        message.name = String(object.name);\n                    return message;\n                };\n\n                /**\n                 * Creates a plain object from a Thread message. Also converts values to other types if specified.\n                 * @function toObject\n                 * @memberof perfetto.protos.ProcessTree.Thread\n                 * @static\n                 * @param {perfetto.protos.ProcessTree.Thread} message Thread\n                 * @param {$protobuf.IConversionOptions} [options] Conversion options\n                 * @returns {Object.<string,*>} Plain object\n                 */\n                Thread.toObject = function toObject(message, options) {\n                    if (!options)\n                        options = {};\n                    var object = {};\n                    if (options.defaults) {\n                        object.tid = 0;\n                        object.name = \"\";\n                        object.tgid = 0;\n                    }\n                    if (message.tid != null && message.hasOwnProperty(\"tid\"))\n                        object.tid = message.tid;\n                    if (message.name != null && message.hasOwnProperty(\"name\"))\n                        object.name = message.name;\n                    if (message.tgid != null && message.hasOwnProperty(\"tgid\"))\n                        object.tgid = message.tgid;\n                    return object;\n                };\n\n                /**\n                 * Converts this Thread to JSON.\n                 * @function toJSON\n                 * @memberof perfetto.protos.ProcessTree.Thread\n                 * @instance\n                 * @returns {Object.<string,*>} JSON object\n                 */\n                Thread.prototype.toJSON = function toJSON() {\n                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                };\n\n                return Thread;\n            })();\n\n            ProcessTree.Process = (function() {\n\n                /**\n                 * Properties of a Process.\n                 * @memberof perfetto.protos.ProcessTree\n                 * @interface IProcess\n                 * @property {number|null} [pid] Process pid\n                 * @property {number|null} [ppid] Process ppid\n                 * @property {Array.<string>|null} [cmdline] Process cmdline\n                 * @property {Array.<perfetto.protos.ProcessTree.IThread>|null} [threadsDeprecated] Process threadsDeprecated\n                 */\n\n                /**\n                 * Constructs a new Process.\n                 * @memberof perfetto.protos.ProcessTree\n                 * @classdesc Represents a Process.\n                 * @implements IProcess\n                 * @constructor\n                 * @param {perfetto.protos.ProcessTree.IProcess=} [properties] Properties to set\n                 */\n                function Process(properties) {\n                    this.cmdline = [];\n                    this.threadsDeprecated = [];\n                    if (properties)\n                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                            if (properties[keys[i]] != null)\n                                this[keys[i]] = properties[keys[i]];\n                }\n\n                /**\n                 * Process pid.\n                 * @member {number} pid\n                 * @memberof perfetto.protos.ProcessTree.Process\n                 * @instance\n                 */\n                Process.prototype.pid = 0;\n\n                /**\n                 * Process ppid.\n                 * @member {number} ppid\n                 * @memberof perfetto.protos.ProcessTree.Process\n                 * @instance\n                 */\n                Process.prototype.ppid = 0;\n\n                /**\n                 * Process cmdline.\n                 * @member {Array.<string>} cmdline\n                 * @memberof perfetto.protos.ProcessTree.Process\n                 * @instance\n                 */\n                Process.prototype.cmdline = $util.emptyArray;\n\n                /**\n                 * Process threadsDeprecated.\n                 * @member {Array.<perfetto.protos.ProcessTree.IThread>} threadsDeprecated\n                 * @memberof perfetto.protos.ProcessTree.Process\n                 * @instance\n                 */\n                Process.prototype.threadsDeprecated = $util.emptyArray;\n\n                /**\n                 * Creates a new Process instance using the specified properties.\n                 * @function create\n                 * @memberof perfetto.protos.ProcessTree.Process\n                 * @static\n                 * @param {perfetto.protos.ProcessTree.IProcess=} [properties] Properties to set\n                 * @returns {perfetto.protos.ProcessTree.Process} Process instance\n                 */\n                Process.create = function create(properties) {\n                    return new Process(properties);\n                };\n\n                /**\n                 * Encodes the specified Process message. Does not implicitly {@link perfetto.protos.ProcessTree.Process.verify|verify} messages.\n                 * @function encode\n                 * @memberof perfetto.protos.ProcessTree.Process\n                 * @static\n                 * @param {perfetto.protos.ProcessTree.IProcess} message Process message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                Process.encode = function encode(message, writer) {\n                    if (!writer)\n                        writer = $Writer.create();\n                    if (message.pid != null && message.hasOwnProperty(\"pid\"))\n                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.pid);\n                    if (message.ppid != null && message.hasOwnProperty(\"ppid\"))\n                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.ppid);\n                    if (message.cmdline != null && message.cmdline.length)\n                        for (var i = 0; i < message.cmdline.length; ++i)\n                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.cmdline[i]);\n                    if (message.threadsDeprecated != null && message.threadsDeprecated.length)\n                        for (var i = 0; i < message.threadsDeprecated.length; ++i)\n                            $root.perfetto.protos.ProcessTree.Thread.encode(message.threadsDeprecated[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();\n                    return writer;\n                };\n\n                /**\n                 * Encodes the specified Process message, length delimited. Does not implicitly {@link perfetto.protos.ProcessTree.Process.verify|verify} messages.\n                 * @function encodeDelimited\n                 * @memberof perfetto.protos.ProcessTree.Process\n                 * @static\n                 * @param {perfetto.protos.ProcessTree.IProcess} message Process message or plain object to encode\n                 * @param {$protobuf.Writer} [writer] Writer to encode to\n                 * @returns {$protobuf.Writer} Writer\n                 */\n                Process.encodeDelimited = function encodeDelimited(message, writer) {\n                    return this.encode(message, writer).ldelim();\n                };\n\n                /**\n                 * Decodes a Process message from the specified reader or buffer.\n                 * @function decode\n                 * @memberof perfetto.protos.ProcessTree.Process\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @param {number} [length] Message length if known beforehand\n                 * @returns {perfetto.protos.ProcessTree.Process} Process\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                Process.decode = function decode(reader, length) {\n                    if (!(reader instanceof $Reader))\n                        reader = $Reader.create(reader);\n                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.ProcessTree.Process();\n                    while (reader.pos < end) {\n                        var tag = reader.uint32();\n                        switch (tag >>> 3) {\n                        case 1:\n                            message.pid = reader.int32();\n                            break;\n                        case 2:\n                            message.ppid = reader.int32();\n                            break;\n                        case 3:\n                            if (!(message.cmdline && message.cmdline.length))\n                                message.cmdline = [];\n                            message.cmdline.push(reader.string());\n                            break;\n                        case 4:\n                            if (!(message.threadsDeprecated && message.threadsDeprecated.length))\n                                message.threadsDeprecated = [];\n                            message.threadsDeprecated.push($root.perfetto.protos.ProcessTree.Thread.decode(reader, reader.uint32()));\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                    return message;\n                };\n\n                /**\n                 * Decodes a Process message from the specified reader or buffer, length delimited.\n                 * @function decodeDelimited\n                 * @memberof perfetto.protos.ProcessTree.Process\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @returns {perfetto.protos.ProcessTree.Process} Process\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                Process.decodeDelimited = function decodeDelimited(reader) {\n                    if (!(reader instanceof $Reader))\n                        reader = new $Reader(reader);\n                    return this.decode(reader, reader.uint32());\n                };\n\n                /**\n                 * Verifies a Process message.\n                 * @function verify\n                 * @memberof perfetto.protos.ProcessTree.Process\n                 * @static\n                 * @param {Object.<string,*>} message Plain object to verify\n                 * @returns {string|null} `null` if valid, otherwise the reason why it is not\n                 */\n                Process.verify = function verify(message) {\n                    if (typeof message !== \"object\" || message === null)\n                        return \"object expected\";\n                    if (message.pid != null && message.hasOwnProperty(\"pid\"))\n                        if (!$util.isInteger(message.pid))\n                            return \"pid: integer expected\";\n                    if (message.ppid != null && message.hasOwnProperty(\"ppid\"))\n                        if (!$util.isInteger(message.ppid))\n                            return \"ppid: integer expected\";\n                    if (message.cmdline != null && message.hasOwnProperty(\"cmdline\")) {\n                        if (!Array.isArray(message.cmdline))\n                            return \"cmdline: array expected\";\n                        for (var i = 0; i < message.cmdline.length; ++i)\n                            if (!$util.isString(message.cmdline[i]))\n                                return \"cmdline: string[] expected\";\n                    }\n                    if (message.threadsDeprecated != null && message.hasOwnProperty(\"threadsDeprecated\")) {\n                        if (!Array.isArray(message.threadsDeprecated))\n                            return \"threadsDeprecated: array expected\";\n                        for (var i = 0; i < message.threadsDeprecated.length; ++i) {\n                            var error = $root.perfetto.protos.ProcessTree.Thread.verify(message.threadsDeprecated[i]);\n                            if (error)\n                                return \"threadsDeprecated.\" + error;\n                        }\n                    }\n                    return null;\n                };\n\n                /**\n                 * Creates a Process message from a plain object. Also converts values to their respective internal types.\n                 * @function fromObject\n                 * @memberof perfetto.protos.ProcessTree.Process\n                 * @static\n                 * @param {Object.<string,*>} object Plain object\n                 * @returns {perfetto.protos.ProcessTree.Process} Process\n                 */\n                Process.fromObject = function fromObject(object) {\n                    if (object instanceof $root.perfetto.protos.ProcessTree.Process)\n                        return object;\n                    var message = new $root.perfetto.protos.ProcessTree.Process();\n                    if (object.pid != null)\n                        message.pid = object.pid | 0;\n                    if (object.ppid != null)\n                        message.ppid = object.ppid | 0;\n                    if (object.cmdline) {\n                        if (!Array.isArray(object.cmdline))\n                            throw TypeError(\".perfetto.protos.ProcessTree.Process.cmdline: array expected\");\n                        message.cmdline = [];\n                        for (var i = 0; i < object.cmdline.length; ++i)\n                            message.cmdline[i] = String(object.cmdline[i]);\n                    }\n                    if (object.threadsDeprecated) {\n                        if (!Array.isArray(object.threadsDeprecated))\n                            throw TypeError(\".perfetto.protos.ProcessTree.Process.threadsDeprecated: array expected\");\n                        message.threadsDeprecated = [];\n                        for (var i = 0; i < object.threadsDeprecated.length; ++i) {\n                            if (typeof object.threadsDeprecated[i] !== \"object\")\n                                throw TypeError(\".perfetto.protos.ProcessTree.Process.threadsDeprecated: object expected\");\n                            message.threadsDeprecated[i] = $root.perfetto.protos.ProcessTree.Thread.fromObject(object.threadsDeprecated[i]);\n                        }\n                    }\n                    return message;\n                };\n\n                /**\n                 * Creates a plain object from a Process message. Also converts values to other types if specified.\n                 * @function toObject\n                 * @memberof perfetto.protos.ProcessTree.Process\n                 * @static\n                 * @param {perfetto.protos.ProcessTree.Process} message Process\n                 * @param {$protobuf.IConversionOptions} [options] Conversion options\n                 * @returns {Object.<string,*>} Plain object\n                 */\n                Process.toObject = function toObject(message, options) {\n                    if (!options)\n                        options = {};\n                    var object = {};\n                    if (options.arrays || options.defaults) {\n                        object.cmdline = [];\n                        object.threadsDeprecated = [];\n                    }\n                    if (options.defaults) {\n                        object.pid = 0;\n                        object.ppid = 0;\n                    }\n                    if (message.pid != null && message.hasOwnProperty(\"pid\"))\n                        object.pid = message.pid;\n                    if (message.ppid != null && message.hasOwnProperty(\"ppid\"))\n                        object.ppid = message.ppid;\n                    if (message.cmdline && message.cmdline.length) {\n                        object.cmdline = [];\n                        for (var j = 0; j < message.cmdline.length; ++j)\n                            object.cmdline[j] = message.cmdline[j];\n                    }\n                    if (message.threadsDeprecated && message.threadsDeprecated.length) {\n                        object.threadsDeprecated = [];\n                        for (var j = 0; j < message.threadsDeprecated.length; ++j)\n                            object.threadsDeprecated[j] = $root.perfetto.protos.ProcessTree.Thread.toObject(message.threadsDeprecated[j], options);\n                    }\n                    return object;\n                };\n\n                /**\n                 * Converts this Process to JSON.\n                 * @function toJSON\n                 * @memberof perfetto.protos.ProcessTree.Process\n                 * @instance\n                 * @returns {Object.<string,*>} JSON object\n                 */\n                Process.prototype.toJSON = function toJSON() {\n                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                };\n\n                return Process;\n            })();\n\n            return ProcessTree;\n        })();\n\n        protos.BinderLockedFtraceEvent = (function() {\n\n            /**\n             * Properties of a BinderLockedFtraceEvent.\n             * @memberof perfetto.protos\n             * @interface IBinderLockedFtraceEvent\n             * @property {string|null} [tag] BinderLockedFtraceEvent tag\n             */\n\n            /**\n             * Constructs a new BinderLockedFtraceEvent.\n             * @memberof perfetto.protos\n             * @classdesc Represents a BinderLockedFtraceEvent.\n             * @implements IBinderLockedFtraceEvent\n             * @constructor\n             * @param {perfetto.protos.IBinderLockedFtraceEvent=} [properties] Properties to set\n             */\n            function BinderLockedFtraceEvent(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * BinderLockedFtraceEvent tag.\n             * @member {string} tag\n             * @memberof perfetto.protos.BinderLockedFtraceEvent\n             * @instance\n             */\n            BinderLockedFtraceEvent.prototype.tag = \"\";\n\n            /**\n             * Creates a new BinderLockedFtraceEvent instance using the specified properties.\n             * @function create\n             * @memberof perfetto.protos.BinderLockedFtraceEvent\n             * @static\n             * @param {perfetto.protos.IBinderLockedFtraceEvent=} [properties] Properties to set\n             * @returns {perfetto.protos.BinderLockedFtraceEvent} BinderLockedFtraceEvent instance\n             */\n            BinderLockedFtraceEvent.create = function create(properties) {\n                return new BinderLockedFtraceEvent(properties);\n            };\n\n            /**\n             * Encodes the specified BinderLockedFtraceEvent message. Does not implicitly {@link perfetto.protos.BinderLockedFtraceEvent.verify|verify} messages.\n             * @function encode\n             * @memberof perfetto.protos.BinderLockedFtraceEvent\n             * @static\n             * @param {perfetto.protos.IBinderLockedFtraceEvent} message BinderLockedFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            BinderLockedFtraceEvent.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.tag != null && message.hasOwnProperty(\"tag\"))\n                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.tag);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified BinderLockedFtraceEvent message, length delimited. Does not implicitly {@link perfetto.protos.BinderLockedFtraceEvent.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof perfetto.protos.BinderLockedFtraceEvent\n             * @static\n             * @param {perfetto.protos.IBinderLockedFtraceEvent} message BinderLockedFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            BinderLockedFtraceEvent.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a BinderLockedFtraceEvent message from the specified reader or buffer.\n             * @function decode\n             * @memberof perfetto.protos.BinderLockedFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {perfetto.protos.BinderLockedFtraceEvent} BinderLockedFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            BinderLockedFtraceEvent.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.BinderLockedFtraceEvent();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.tag = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a BinderLockedFtraceEvent message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof perfetto.protos.BinderLockedFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {perfetto.protos.BinderLockedFtraceEvent} BinderLockedFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            BinderLockedFtraceEvent.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a BinderLockedFtraceEvent message.\n             * @function verify\n             * @memberof perfetto.protos.BinderLockedFtraceEvent\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            BinderLockedFtraceEvent.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.tag != null && message.hasOwnProperty(\"tag\"))\n                    if (!$util.isString(message.tag))\n                        return \"tag: string expected\";\n                return null;\n            };\n\n            /**\n             * Creates a BinderLockedFtraceEvent message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof perfetto.protos.BinderLockedFtraceEvent\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {perfetto.protos.BinderLockedFtraceEvent} BinderLockedFtraceEvent\n             */\n            BinderLockedFtraceEvent.fromObject = function fromObject(object) {\n                if (object instanceof $root.perfetto.protos.BinderLockedFtraceEvent)\n                    return object;\n                var message = new $root.perfetto.protos.BinderLockedFtraceEvent();\n                if (object.tag != null)\n                    message.tag = String(object.tag);\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a BinderLockedFtraceEvent message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof perfetto.protos.BinderLockedFtraceEvent\n             * @static\n             * @param {perfetto.protos.BinderLockedFtraceEvent} message BinderLockedFtraceEvent\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            BinderLockedFtraceEvent.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults)\n                    object.tag = \"\";\n                if (message.tag != null && message.hasOwnProperty(\"tag\"))\n                    object.tag = message.tag;\n                return object;\n            };\n\n            /**\n             * Converts this BinderLockedFtraceEvent to JSON.\n             * @function toJSON\n             * @memberof perfetto.protos.BinderLockedFtraceEvent\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            BinderLockedFtraceEvent.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return BinderLockedFtraceEvent;\n        })();\n\n        protos.BinderLockFtraceEvent = (function() {\n\n            /**\n             * Properties of a BinderLockFtraceEvent.\n             * @memberof perfetto.protos\n             * @interface IBinderLockFtraceEvent\n             * @property {string|null} [tag] BinderLockFtraceEvent tag\n             */\n\n            /**\n             * Constructs a new BinderLockFtraceEvent.\n             * @memberof perfetto.protos\n             * @classdesc Represents a BinderLockFtraceEvent.\n             * @implements IBinderLockFtraceEvent\n             * @constructor\n             * @param {perfetto.protos.IBinderLockFtraceEvent=} [properties] Properties to set\n             */\n            function BinderLockFtraceEvent(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * BinderLockFtraceEvent tag.\n             * @member {string} tag\n             * @memberof perfetto.protos.BinderLockFtraceEvent\n             * @instance\n             */\n            BinderLockFtraceEvent.prototype.tag = \"\";\n\n            /**\n             * Creates a new BinderLockFtraceEvent instance using the specified properties.\n             * @function create\n             * @memberof perfetto.protos.BinderLockFtraceEvent\n             * @static\n             * @param {perfetto.protos.IBinderLockFtraceEvent=} [properties] Properties to set\n             * @returns {perfetto.protos.BinderLockFtraceEvent} BinderLockFtraceEvent instance\n             */\n            BinderLockFtraceEvent.create = function create(properties) {\n                return new BinderLockFtraceEvent(properties);\n            };\n\n            /**\n             * Encodes the specified BinderLockFtraceEvent message. Does not implicitly {@link perfetto.protos.BinderLockFtraceEvent.verify|verify} messages.\n             * @function encode\n             * @memberof perfetto.protos.BinderLockFtraceEvent\n             * @static\n             * @param {perfetto.protos.IBinderLockFtraceEvent} message BinderLockFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            BinderLockFtraceEvent.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.tag != null && message.hasOwnProperty(\"tag\"))\n                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.tag);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified BinderLockFtraceEvent message, length delimited. Does not implicitly {@link perfetto.protos.BinderLockFtraceEvent.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof perfetto.protos.BinderLockFtraceEvent\n             * @static\n             * @param {perfetto.protos.IBinderLockFtraceEvent} message BinderLockFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            BinderLockFtraceEvent.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a BinderLockFtraceEvent message from the specified reader or buffer.\n             * @function decode\n             * @memberof perfetto.protos.BinderLockFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {perfetto.protos.BinderLockFtraceEvent} BinderLockFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            BinderLockFtraceEvent.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.BinderLockFtraceEvent();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.tag = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a BinderLockFtraceEvent message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof perfetto.protos.BinderLockFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {perfetto.protos.BinderLockFtraceEvent} BinderLockFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            BinderLockFtraceEvent.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a BinderLockFtraceEvent message.\n             * @function verify\n             * @memberof perfetto.protos.BinderLockFtraceEvent\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            BinderLockFtraceEvent.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.tag != null && message.hasOwnProperty(\"tag\"))\n                    if (!$util.isString(message.tag))\n                        return \"tag: string expected\";\n                return null;\n            };\n\n            /**\n             * Creates a BinderLockFtraceEvent message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof perfetto.protos.BinderLockFtraceEvent\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {perfetto.protos.BinderLockFtraceEvent} BinderLockFtraceEvent\n             */\n            BinderLockFtraceEvent.fromObject = function fromObject(object) {\n                if (object instanceof $root.perfetto.protos.BinderLockFtraceEvent)\n                    return object;\n                var message = new $root.perfetto.protos.BinderLockFtraceEvent();\n                if (object.tag != null)\n                    message.tag = String(object.tag);\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a BinderLockFtraceEvent message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof perfetto.protos.BinderLockFtraceEvent\n             * @static\n             * @param {perfetto.protos.BinderLockFtraceEvent} message BinderLockFtraceEvent\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            BinderLockFtraceEvent.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults)\n                    object.tag = \"\";\n                if (message.tag != null && message.hasOwnProperty(\"tag\"))\n                    object.tag = message.tag;\n                return object;\n            };\n\n            /**\n             * Converts this BinderLockFtraceEvent to JSON.\n             * @function toJSON\n             * @memberof perfetto.protos.BinderLockFtraceEvent\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            BinderLockFtraceEvent.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return BinderLockFtraceEvent;\n        })();\n\n        protos.BinderTransactionFtraceEvent = (function() {\n\n            /**\n             * Properties of a BinderTransactionFtraceEvent.\n             * @memberof perfetto.protos\n             * @interface IBinderTransactionFtraceEvent\n             * @property {number|null} [debugId] BinderTransactionFtraceEvent debugId\n             * @property {number|null} [targetNode] BinderTransactionFtraceEvent targetNode\n             * @property {number|null} [toProc] BinderTransactionFtraceEvent toProc\n             * @property {number|null} [toThread] BinderTransactionFtraceEvent toThread\n             * @property {number|null} [reply] BinderTransactionFtraceEvent reply\n             * @property {number|null} [code] BinderTransactionFtraceEvent code\n             * @property {number|null} [flags] BinderTransactionFtraceEvent flags\n             */\n\n            /**\n             * Constructs a new BinderTransactionFtraceEvent.\n             * @memberof perfetto.protos\n             * @classdesc Represents a BinderTransactionFtraceEvent.\n             * @implements IBinderTransactionFtraceEvent\n             * @constructor\n             * @param {perfetto.protos.IBinderTransactionFtraceEvent=} [properties] Properties to set\n             */\n            function BinderTransactionFtraceEvent(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * BinderTransactionFtraceEvent debugId.\n             * @member {number} debugId\n             * @memberof perfetto.protos.BinderTransactionFtraceEvent\n             * @instance\n             */\n            BinderTransactionFtraceEvent.prototype.debugId = 0;\n\n            /**\n             * BinderTransactionFtraceEvent targetNode.\n             * @member {number} targetNode\n             * @memberof perfetto.protos.BinderTransactionFtraceEvent\n             * @instance\n             */\n            BinderTransactionFtraceEvent.prototype.targetNode = 0;\n\n            /**\n             * BinderTransactionFtraceEvent toProc.\n             * @member {number} toProc\n             * @memberof perfetto.protos.BinderTransactionFtraceEvent\n             * @instance\n             */\n            BinderTransactionFtraceEvent.prototype.toProc = 0;\n\n            /**\n             * BinderTransactionFtraceEvent toThread.\n             * @member {number} toThread\n             * @memberof perfetto.protos.BinderTransactionFtraceEvent\n             * @instance\n             */\n            BinderTransactionFtraceEvent.prototype.toThread = 0;\n\n            /**\n             * BinderTransactionFtraceEvent reply.\n             * @member {number} reply\n             * @memberof perfetto.protos.BinderTransactionFtraceEvent\n             * @instance\n             */\n            BinderTransactionFtraceEvent.prototype.reply = 0;\n\n            /**\n             * BinderTransactionFtraceEvent code.\n             * @member {number} code\n             * @memberof perfetto.protos.BinderTransactionFtraceEvent\n             * @instance\n             */\n            BinderTransactionFtraceEvent.prototype.code = 0;\n\n            /**\n             * BinderTransactionFtraceEvent flags.\n             * @member {number} flags\n             * @memberof perfetto.protos.BinderTransactionFtraceEvent\n             * @instance\n             */\n            BinderTransactionFtraceEvent.prototype.flags = 0;\n\n            /**\n             * Creates a new BinderTransactionFtraceEvent instance using the specified properties.\n             * @function create\n             * @memberof perfetto.protos.BinderTransactionFtraceEvent\n             * @static\n             * @param {perfetto.protos.IBinderTransactionFtraceEvent=} [properties] Properties to set\n             * @returns {perfetto.protos.BinderTransactionFtraceEvent} BinderTransactionFtraceEvent instance\n             */\n            BinderTransactionFtraceEvent.create = function create(properties) {\n                return new BinderTransactionFtraceEvent(properties);\n            };\n\n            /**\n             * Encodes the specified BinderTransactionFtraceEvent message. Does not implicitly {@link perfetto.protos.BinderTransactionFtraceEvent.verify|verify} messages.\n             * @function encode\n             * @memberof perfetto.protos.BinderTransactionFtraceEvent\n             * @static\n             * @param {perfetto.protos.IBinderTransactionFtraceEvent} message BinderTransactionFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            BinderTransactionFtraceEvent.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.debugId != null && message.hasOwnProperty(\"debugId\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.debugId);\n                if (message.targetNode != null && message.hasOwnProperty(\"targetNode\"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.targetNode);\n                if (message.toProc != null && message.hasOwnProperty(\"toProc\"))\n                    writer.uint32(/* id 3, wireType 0 =*/24).int32(message.toProc);\n                if (message.toThread != null && message.hasOwnProperty(\"toThread\"))\n                    writer.uint32(/* id 4, wireType 0 =*/32).int32(message.toThread);\n                if (message.reply != null && message.hasOwnProperty(\"reply\"))\n                    writer.uint32(/* id 5, wireType 0 =*/40).int32(message.reply);\n                if (message.code != null && message.hasOwnProperty(\"code\"))\n                    writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.code);\n                if (message.flags != null && message.hasOwnProperty(\"flags\"))\n                    writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.flags);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified BinderTransactionFtraceEvent message, length delimited. Does not implicitly {@link perfetto.protos.BinderTransactionFtraceEvent.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof perfetto.protos.BinderTransactionFtraceEvent\n             * @static\n             * @param {perfetto.protos.IBinderTransactionFtraceEvent} message BinderTransactionFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            BinderTransactionFtraceEvent.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a BinderTransactionFtraceEvent message from the specified reader or buffer.\n             * @function decode\n             * @memberof perfetto.protos.BinderTransactionFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {perfetto.protos.BinderTransactionFtraceEvent} BinderTransactionFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            BinderTransactionFtraceEvent.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.BinderTransactionFtraceEvent();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.debugId = reader.int32();\n                        break;\n                    case 2:\n                        message.targetNode = reader.int32();\n                        break;\n                    case 3:\n                        message.toProc = reader.int32();\n                        break;\n                    case 4:\n                        message.toThread = reader.int32();\n                        break;\n                    case 5:\n                        message.reply = reader.int32();\n                        break;\n                    case 6:\n                        message.code = reader.uint32();\n                        break;\n                    case 7:\n                        message.flags = reader.uint32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a BinderTransactionFtraceEvent message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof perfetto.protos.BinderTransactionFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {perfetto.protos.BinderTransactionFtraceEvent} BinderTransactionFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            BinderTransactionFtraceEvent.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a BinderTransactionFtraceEvent message.\n             * @function verify\n             * @memberof perfetto.protos.BinderTransactionFtraceEvent\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            BinderTransactionFtraceEvent.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.debugId != null && message.hasOwnProperty(\"debugId\"))\n                    if (!$util.isInteger(message.debugId))\n                        return \"debugId: integer expected\";\n                if (message.targetNode != null && message.hasOwnProperty(\"targetNode\"))\n                    if (!$util.isInteger(message.targetNode))\n                        return \"targetNode: integer expected\";\n                if (message.toProc != null && message.hasOwnProperty(\"toProc\"))\n                    if (!$util.isInteger(message.toProc))\n                        return \"toProc: integer expected\";\n                if (message.toThread != null && message.hasOwnProperty(\"toThread\"))\n                    if (!$util.isInteger(message.toThread))\n                        return \"toThread: integer expected\";\n                if (message.reply != null && message.hasOwnProperty(\"reply\"))\n                    if (!$util.isInteger(message.reply))\n                        return \"reply: integer expected\";\n                if (message.code != null && message.hasOwnProperty(\"code\"))\n                    if (!$util.isInteger(message.code))\n                        return \"code: integer expected\";\n                if (message.flags != null && message.hasOwnProperty(\"flags\"))\n                    if (!$util.isInteger(message.flags))\n                        return \"flags: integer expected\";\n                return null;\n            };\n\n            /**\n             * Creates a BinderTransactionFtraceEvent message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof perfetto.protos.BinderTransactionFtraceEvent\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {perfetto.protos.BinderTransactionFtraceEvent} BinderTransactionFtraceEvent\n             */\n            BinderTransactionFtraceEvent.fromObject = function fromObject(object) {\n                if (object instanceof $root.perfetto.protos.BinderTransactionFtraceEvent)\n                    return object;\n                var message = new $root.perfetto.protos.BinderTransactionFtraceEvent();\n                if (object.debugId != null)\n                    message.debugId = object.debugId | 0;\n                if (object.targetNode != null)\n                    message.targetNode = object.targetNode | 0;\n                if (object.toProc != null)\n                    message.toProc = object.toProc | 0;\n                if (object.toThread != null)\n                    message.toThread = object.toThread | 0;\n                if (object.reply != null)\n                    message.reply = object.reply | 0;\n                if (object.code != null)\n                    message.code = object.code >>> 0;\n                if (object.flags != null)\n                    message.flags = object.flags >>> 0;\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a BinderTransactionFtraceEvent message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof perfetto.protos.BinderTransactionFtraceEvent\n             * @static\n             * @param {perfetto.protos.BinderTransactionFtraceEvent} message BinderTransactionFtraceEvent\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            BinderTransactionFtraceEvent.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.debugId = 0;\n                    object.targetNode = 0;\n                    object.toProc = 0;\n                    object.toThread = 0;\n                    object.reply = 0;\n                    object.code = 0;\n                    object.flags = 0;\n                }\n                if (message.debugId != null && message.hasOwnProperty(\"debugId\"))\n                    object.debugId = message.debugId;\n                if (message.targetNode != null && message.hasOwnProperty(\"targetNode\"))\n                    object.targetNode = message.targetNode;\n                if (message.toProc != null && message.hasOwnProperty(\"toProc\"))\n                    object.toProc = message.toProc;\n                if (message.toThread != null && message.hasOwnProperty(\"toThread\"))\n                    object.toThread = message.toThread;\n                if (message.reply != null && message.hasOwnProperty(\"reply\"))\n                    object.reply = message.reply;\n                if (message.code != null && message.hasOwnProperty(\"code\"))\n                    object.code = message.code;\n                if (message.flags != null && message.hasOwnProperty(\"flags\"))\n                    object.flags = message.flags;\n                return object;\n            };\n\n            /**\n             * Converts this BinderTransactionFtraceEvent to JSON.\n             * @function toJSON\n             * @memberof perfetto.protos.BinderTransactionFtraceEvent\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            BinderTransactionFtraceEvent.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return BinderTransactionFtraceEvent;\n        })();\n\n        protos.BinderTransactionReceivedFtraceEvent = (function() {\n\n            /**\n             * Properties of a BinderTransactionReceivedFtraceEvent.\n             * @memberof perfetto.protos\n             * @interface IBinderTransactionReceivedFtraceEvent\n             * @property {number|null} [debugId] BinderTransactionReceivedFtraceEvent debugId\n             */\n\n            /**\n             * Constructs a new BinderTransactionReceivedFtraceEvent.\n             * @memberof perfetto.protos\n             * @classdesc Represents a BinderTransactionReceivedFtraceEvent.\n             * @implements IBinderTransactionReceivedFtraceEvent\n             * @constructor\n             * @param {perfetto.protos.IBinderTransactionReceivedFtraceEvent=} [properties] Properties to set\n             */\n            function BinderTransactionReceivedFtraceEvent(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * BinderTransactionReceivedFtraceEvent debugId.\n             * @member {number} debugId\n             * @memberof perfetto.protos.BinderTransactionReceivedFtraceEvent\n             * @instance\n             */\n            BinderTransactionReceivedFtraceEvent.prototype.debugId = 0;\n\n            /**\n             * Creates a new BinderTransactionReceivedFtraceEvent instance using the specified properties.\n             * @function create\n             * @memberof perfetto.protos.BinderTransactionReceivedFtraceEvent\n             * @static\n             * @param {perfetto.protos.IBinderTransactionReceivedFtraceEvent=} [properties] Properties to set\n             * @returns {perfetto.protos.BinderTransactionReceivedFtraceEvent} BinderTransactionReceivedFtraceEvent instance\n             */\n            BinderTransactionReceivedFtraceEvent.create = function create(properties) {\n                return new BinderTransactionReceivedFtraceEvent(properties);\n            };\n\n            /**\n             * Encodes the specified BinderTransactionReceivedFtraceEvent message. Does not implicitly {@link perfetto.protos.BinderTransactionReceivedFtraceEvent.verify|verify} messages.\n             * @function encode\n             * @memberof perfetto.protos.BinderTransactionReceivedFtraceEvent\n             * @static\n             * @param {perfetto.protos.IBinderTransactionReceivedFtraceEvent} message BinderTransactionReceivedFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            BinderTransactionReceivedFtraceEvent.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.debugId != null && message.hasOwnProperty(\"debugId\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.debugId);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified BinderTransactionReceivedFtraceEvent message, length delimited. Does not implicitly {@link perfetto.protos.BinderTransactionReceivedFtraceEvent.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof perfetto.protos.BinderTransactionReceivedFtraceEvent\n             * @static\n             * @param {perfetto.protos.IBinderTransactionReceivedFtraceEvent} message BinderTransactionReceivedFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            BinderTransactionReceivedFtraceEvent.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a BinderTransactionReceivedFtraceEvent message from the specified reader or buffer.\n             * @function decode\n             * @memberof perfetto.protos.BinderTransactionReceivedFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {perfetto.protos.BinderTransactionReceivedFtraceEvent} BinderTransactionReceivedFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            BinderTransactionReceivedFtraceEvent.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.BinderTransactionReceivedFtraceEvent();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.debugId = reader.int32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a BinderTransactionReceivedFtraceEvent message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof perfetto.protos.BinderTransactionReceivedFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {perfetto.protos.BinderTransactionReceivedFtraceEvent} BinderTransactionReceivedFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            BinderTransactionReceivedFtraceEvent.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a BinderTransactionReceivedFtraceEvent message.\n             * @function verify\n             * @memberof perfetto.protos.BinderTransactionReceivedFtraceEvent\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            BinderTransactionReceivedFtraceEvent.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.debugId != null && message.hasOwnProperty(\"debugId\"))\n                    if (!$util.isInteger(message.debugId))\n                        return \"debugId: integer expected\";\n                return null;\n            };\n\n            /**\n             * Creates a BinderTransactionReceivedFtraceEvent message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof perfetto.protos.BinderTransactionReceivedFtraceEvent\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {perfetto.protos.BinderTransactionReceivedFtraceEvent} BinderTransactionReceivedFtraceEvent\n             */\n            BinderTransactionReceivedFtraceEvent.fromObject = function fromObject(object) {\n                if (object instanceof $root.perfetto.protos.BinderTransactionReceivedFtraceEvent)\n                    return object;\n                var message = new $root.perfetto.protos.BinderTransactionReceivedFtraceEvent();\n                if (object.debugId != null)\n                    message.debugId = object.debugId | 0;\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a BinderTransactionReceivedFtraceEvent message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof perfetto.protos.BinderTransactionReceivedFtraceEvent\n             * @static\n             * @param {perfetto.protos.BinderTransactionReceivedFtraceEvent} message BinderTransactionReceivedFtraceEvent\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            BinderTransactionReceivedFtraceEvent.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults)\n                    object.debugId = 0;\n                if (message.debugId != null && message.hasOwnProperty(\"debugId\"))\n                    object.debugId = message.debugId;\n                return object;\n            };\n\n            /**\n             * Converts this BinderTransactionReceivedFtraceEvent to JSON.\n             * @function toJSON\n             * @memberof perfetto.protos.BinderTransactionReceivedFtraceEvent\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            BinderTransactionReceivedFtraceEvent.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return BinderTransactionReceivedFtraceEvent;\n        })();\n\n        protos.BinderUnlockFtraceEvent = (function() {\n\n            /**\n             * Properties of a BinderUnlockFtraceEvent.\n             * @memberof perfetto.protos\n             * @interface IBinderUnlockFtraceEvent\n             * @property {string|null} [tag] BinderUnlockFtraceEvent tag\n             */\n\n            /**\n             * Constructs a new BinderUnlockFtraceEvent.\n             * @memberof perfetto.protos\n             * @classdesc Represents a BinderUnlockFtraceEvent.\n             * @implements IBinderUnlockFtraceEvent\n             * @constructor\n             * @param {perfetto.protos.IBinderUnlockFtraceEvent=} [properties] Properties to set\n             */\n            function BinderUnlockFtraceEvent(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * BinderUnlockFtraceEvent tag.\n             * @member {string} tag\n             * @memberof perfetto.protos.BinderUnlockFtraceEvent\n             * @instance\n             */\n            BinderUnlockFtraceEvent.prototype.tag = \"\";\n\n            /**\n             * Creates a new BinderUnlockFtraceEvent instance using the specified properties.\n             * @function create\n             * @memberof perfetto.protos.BinderUnlockFtraceEvent\n             * @static\n             * @param {perfetto.protos.IBinderUnlockFtraceEvent=} [properties] Properties to set\n             * @returns {perfetto.protos.BinderUnlockFtraceEvent} BinderUnlockFtraceEvent instance\n             */\n            BinderUnlockFtraceEvent.create = function create(properties) {\n                return new BinderUnlockFtraceEvent(properties);\n            };\n\n            /**\n             * Encodes the specified BinderUnlockFtraceEvent message. Does not implicitly {@link perfetto.protos.BinderUnlockFtraceEvent.verify|verify} messages.\n             * @function encode\n             * @memberof perfetto.protos.BinderUnlockFtraceEvent\n             * @static\n             * @param {perfetto.protos.IBinderUnlockFtraceEvent} message BinderUnlockFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            BinderUnlockFtraceEvent.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.tag != null && message.hasOwnProperty(\"tag\"))\n                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.tag);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified BinderUnlockFtraceEvent message, length delimited. Does not implicitly {@link perfetto.protos.BinderUnlockFtraceEvent.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof perfetto.protos.BinderUnlockFtraceEvent\n             * @static\n             * @param {perfetto.protos.IBinderUnlockFtraceEvent} message BinderUnlockFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            BinderUnlockFtraceEvent.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a BinderUnlockFtraceEvent message from the specified reader or buffer.\n             * @function decode\n             * @memberof perfetto.protos.BinderUnlockFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {perfetto.protos.BinderUnlockFtraceEvent} BinderUnlockFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            BinderUnlockFtraceEvent.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.BinderUnlockFtraceEvent();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.tag = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a BinderUnlockFtraceEvent message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof perfetto.protos.BinderUnlockFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {perfetto.protos.BinderUnlockFtraceEvent} BinderUnlockFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            BinderUnlockFtraceEvent.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a BinderUnlockFtraceEvent message.\n             * @function verify\n             * @memberof perfetto.protos.BinderUnlockFtraceEvent\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            BinderUnlockFtraceEvent.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.tag != null && message.hasOwnProperty(\"tag\"))\n                    if (!$util.isString(message.tag))\n                        return \"tag: string expected\";\n                return null;\n            };\n\n            /**\n             * Creates a BinderUnlockFtraceEvent message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof perfetto.protos.BinderUnlockFtraceEvent\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {perfetto.protos.BinderUnlockFtraceEvent} BinderUnlockFtraceEvent\n             */\n            BinderUnlockFtraceEvent.fromObject = function fromObject(object) {\n                if (object instanceof $root.perfetto.protos.BinderUnlockFtraceEvent)\n                    return object;\n                var message = new $root.perfetto.protos.BinderUnlockFtraceEvent();\n                if (object.tag != null)\n                    message.tag = String(object.tag);\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a BinderUnlockFtraceEvent message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof perfetto.protos.BinderUnlockFtraceEvent\n             * @static\n             * @param {perfetto.protos.BinderUnlockFtraceEvent} message BinderUnlockFtraceEvent\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            BinderUnlockFtraceEvent.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults)\n                    object.tag = \"\";\n                if (message.tag != null && message.hasOwnProperty(\"tag\"))\n                    object.tag = message.tag;\n                return object;\n            };\n\n            /**\n             * Converts this BinderUnlockFtraceEvent to JSON.\n             * @function toJSON\n             * @memberof perfetto.protos.BinderUnlockFtraceEvent\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            BinderUnlockFtraceEvent.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return BinderUnlockFtraceEvent;\n        })();\n\n        protos.BlockRqCompleteFtraceEvent = (function() {\n\n            /**\n             * Properties of a BlockRqCompleteFtraceEvent.\n             * @memberof perfetto.protos\n             * @interface IBlockRqCompleteFtraceEvent\n             * @property {number|Long|null} [dev] BlockRqCompleteFtraceEvent dev\n             * @property {number|Long|null} [sector] BlockRqCompleteFtraceEvent sector\n             * @property {number|null} [nrSector] BlockRqCompleteFtraceEvent nrSector\n             * @property {number|null} [errors] BlockRqCompleteFtraceEvent errors\n             * @property {string|null} [rwbs] BlockRqCompleteFtraceEvent rwbs\n             * @property {string|null} [cmd] BlockRqCompleteFtraceEvent cmd\n             */\n\n            /**\n             * Constructs a new BlockRqCompleteFtraceEvent.\n             * @memberof perfetto.protos\n             * @classdesc Represents a BlockRqCompleteFtraceEvent.\n             * @implements IBlockRqCompleteFtraceEvent\n             * @constructor\n             * @param {perfetto.protos.IBlockRqCompleteFtraceEvent=} [properties] Properties to set\n             */\n            function BlockRqCompleteFtraceEvent(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * BlockRqCompleteFtraceEvent dev.\n             * @member {number|Long} dev\n             * @memberof perfetto.protos.BlockRqCompleteFtraceEvent\n             * @instance\n             */\n            BlockRqCompleteFtraceEvent.prototype.dev = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n            /**\n             * BlockRqCompleteFtraceEvent sector.\n             * @member {number|Long} sector\n             * @memberof perfetto.protos.BlockRqCompleteFtraceEvent\n             * @instance\n             */\n            BlockRqCompleteFtraceEvent.prototype.sector = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n            /**\n             * BlockRqCompleteFtraceEvent nrSector.\n             * @member {number} nrSector\n             * @memberof perfetto.protos.BlockRqCompleteFtraceEvent\n             * @instance\n             */\n            BlockRqCompleteFtraceEvent.prototype.nrSector = 0;\n\n            /**\n             * BlockRqCompleteFtraceEvent errors.\n             * @member {number} errors\n             * @memberof perfetto.protos.BlockRqCompleteFtraceEvent\n             * @instance\n             */\n            BlockRqCompleteFtraceEvent.prototype.errors = 0;\n\n            /**\n             * BlockRqCompleteFtraceEvent rwbs.\n             * @member {string} rwbs\n             * @memberof perfetto.protos.BlockRqCompleteFtraceEvent\n             * @instance\n             */\n            BlockRqCompleteFtraceEvent.prototype.rwbs = \"\";\n\n            /**\n             * BlockRqCompleteFtraceEvent cmd.\n             * @member {string} cmd\n             * @memberof perfetto.protos.BlockRqCompleteFtraceEvent\n             * @instance\n             */\n            BlockRqCompleteFtraceEvent.prototype.cmd = \"\";\n\n            /**\n             * Creates a new BlockRqCompleteFtraceEvent instance using the specified properties.\n             * @function create\n             * @memberof perfetto.protos.BlockRqCompleteFtraceEvent\n             * @static\n             * @param {perfetto.protos.IBlockRqCompleteFtraceEvent=} [properties] Properties to set\n             * @returns {perfetto.protos.BlockRqCompleteFtraceEvent} BlockRqCompleteFtraceEvent instance\n             */\n            BlockRqCompleteFtraceEvent.create = function create(properties) {\n                return new BlockRqCompleteFtraceEvent(properties);\n            };\n\n            /**\n             * Encodes the specified BlockRqCompleteFtraceEvent message. Does not implicitly {@link perfetto.protos.BlockRqCompleteFtraceEvent.verify|verify} messages.\n             * @function encode\n             * @memberof perfetto.protos.BlockRqCompleteFtraceEvent\n             * @static\n             * @param {perfetto.protos.IBlockRqCompleteFtraceEvent} message BlockRqCompleteFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            BlockRqCompleteFtraceEvent.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.dev != null && message.hasOwnProperty(\"dev\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.dev);\n                if (message.sector != null && message.hasOwnProperty(\"sector\"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.sector);\n                if (message.nrSector != null && message.hasOwnProperty(\"nrSector\"))\n                    writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.nrSector);\n                if (message.errors != null && message.hasOwnProperty(\"errors\"))\n                    writer.uint32(/* id 4, wireType 0 =*/32).int32(message.errors);\n                if (message.rwbs != null && message.hasOwnProperty(\"rwbs\"))\n                    writer.uint32(/* id 5, wireType 2 =*/42).string(message.rwbs);\n                if (message.cmd != null && message.hasOwnProperty(\"cmd\"))\n                    writer.uint32(/* id 6, wireType 2 =*/50).string(message.cmd);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified BlockRqCompleteFtraceEvent message, length delimited. Does not implicitly {@link perfetto.protos.BlockRqCompleteFtraceEvent.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof perfetto.protos.BlockRqCompleteFtraceEvent\n             * @static\n             * @param {perfetto.protos.IBlockRqCompleteFtraceEvent} message BlockRqCompleteFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            BlockRqCompleteFtraceEvent.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a BlockRqCompleteFtraceEvent message from the specified reader or buffer.\n             * @function decode\n             * @memberof perfetto.protos.BlockRqCompleteFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {perfetto.protos.BlockRqCompleteFtraceEvent} BlockRqCompleteFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            BlockRqCompleteFtraceEvent.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.BlockRqCompleteFtraceEvent();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.dev = reader.uint64();\n                        break;\n                    case 2:\n                        message.sector = reader.uint64();\n                        break;\n                    case 3:\n                        message.nrSector = reader.uint32();\n                        break;\n                    case 4:\n                        message.errors = reader.int32();\n                        break;\n                    case 5:\n                        message.rwbs = reader.string();\n                        break;\n                    case 6:\n                        message.cmd = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a BlockRqCompleteFtraceEvent message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof perfetto.protos.BlockRqCompleteFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {perfetto.protos.BlockRqCompleteFtraceEvent} BlockRqCompleteFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            BlockRqCompleteFtraceEvent.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a BlockRqCompleteFtraceEvent message.\n             * @function verify\n             * @memberof perfetto.protos.BlockRqCompleteFtraceEvent\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            BlockRqCompleteFtraceEvent.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.dev != null && message.hasOwnProperty(\"dev\"))\n                    if (!$util.isInteger(message.dev) && !(message.dev && $util.isInteger(message.dev.low) && $util.isInteger(message.dev.high)))\n                        return \"dev: integer|Long expected\";\n                if (message.sector != null && message.hasOwnProperty(\"sector\"))\n                    if (!$util.isInteger(message.sector) && !(message.sector && $util.isInteger(message.sector.low) && $util.isInteger(message.sector.high)))\n                        return \"sector: integer|Long expected\";\n                if (message.nrSector != null && message.hasOwnProperty(\"nrSector\"))\n                    if (!$util.isInteger(message.nrSector))\n                        return \"nrSector: integer expected\";\n                if (message.errors != null && message.hasOwnProperty(\"errors\"))\n                    if (!$util.isInteger(message.errors))\n                        return \"errors: integer expected\";\n                if (message.rwbs != null && message.hasOwnProperty(\"rwbs\"))\n                    if (!$util.isString(message.rwbs))\n                        return \"rwbs: string expected\";\n                if (message.cmd != null && message.hasOwnProperty(\"cmd\"))\n                    if (!$util.isString(message.cmd))\n                        return \"cmd: string expected\";\n                return null;\n            };\n\n            /**\n             * Creates a BlockRqCompleteFtraceEvent message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof perfetto.protos.BlockRqCompleteFtraceEvent\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {perfetto.protos.BlockRqCompleteFtraceEvent} BlockRqCompleteFtraceEvent\n             */\n            BlockRqCompleteFtraceEvent.fromObject = function fromObject(object) {\n                if (object instanceof $root.perfetto.protos.BlockRqCompleteFtraceEvent)\n                    return object;\n                var message = new $root.perfetto.protos.BlockRqCompleteFtraceEvent();\n                if (object.dev != null)\n                    if ($util.Long)\n                        (message.dev = $util.Long.fromValue(object.dev)).unsigned = true;\n                    else if (typeof object.dev === \"string\")\n                        message.dev = parseInt(object.dev, 10);\n                    else if (typeof object.dev === \"number\")\n                        message.dev = object.dev;\n                    else if (typeof object.dev === \"object\")\n                        message.dev = new $util.LongBits(object.dev.low >>> 0, object.dev.high >>> 0).toNumber(true);\n                if (object.sector != null)\n                    if ($util.Long)\n                        (message.sector = $util.Long.fromValue(object.sector)).unsigned = true;\n                    else if (typeof object.sector === \"string\")\n                        message.sector = parseInt(object.sector, 10);\n                    else if (typeof object.sector === \"number\")\n                        message.sector = object.sector;\n                    else if (typeof object.sector === \"object\")\n                        message.sector = new $util.LongBits(object.sector.low >>> 0, object.sector.high >>> 0).toNumber(true);\n                if (object.nrSector != null)\n                    message.nrSector = object.nrSector >>> 0;\n                if (object.errors != null)\n                    message.errors = object.errors | 0;\n                if (object.rwbs != null)\n                    message.rwbs = String(object.rwbs);\n                if (object.cmd != null)\n                    message.cmd = String(object.cmd);\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a BlockRqCompleteFtraceEvent message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof perfetto.protos.BlockRqCompleteFtraceEvent\n             * @static\n             * @param {perfetto.protos.BlockRqCompleteFtraceEvent} message BlockRqCompleteFtraceEvent\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            BlockRqCompleteFtraceEvent.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, true);\n                        object.dev = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.dev = options.longs === String ? \"0\" : 0;\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, true);\n                        object.sector = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.sector = options.longs === String ? \"0\" : 0;\n                    object.nrSector = 0;\n                    object.errors = 0;\n                    object.rwbs = \"\";\n                    object.cmd = \"\";\n                }\n                if (message.dev != null && message.hasOwnProperty(\"dev\"))\n                    if (typeof message.dev === \"number\")\n                        object.dev = options.longs === String ? String(message.dev) : message.dev;\n                    else\n                        object.dev = options.longs === String ? $util.Long.prototype.toString.call(message.dev) : options.longs === Number ? new $util.LongBits(message.dev.low >>> 0, message.dev.high >>> 0).toNumber(true) : message.dev;\n                if (message.sector != null && message.hasOwnProperty(\"sector\"))\n                    if (typeof message.sector === \"number\")\n                        object.sector = options.longs === String ? String(message.sector) : message.sector;\n                    else\n                        object.sector = options.longs === String ? $util.Long.prototype.toString.call(message.sector) : options.longs === Number ? new $util.LongBits(message.sector.low >>> 0, message.sector.high >>> 0).toNumber(true) : message.sector;\n                if (message.nrSector != null && message.hasOwnProperty(\"nrSector\"))\n                    object.nrSector = message.nrSector;\n                if (message.errors != null && message.hasOwnProperty(\"errors\"))\n                    object.errors = message.errors;\n                if (message.rwbs != null && message.hasOwnProperty(\"rwbs\"))\n                    object.rwbs = message.rwbs;\n                if (message.cmd != null && message.hasOwnProperty(\"cmd\"))\n                    object.cmd = message.cmd;\n                return object;\n            };\n\n            /**\n             * Converts this BlockRqCompleteFtraceEvent to JSON.\n             * @function toJSON\n             * @memberof perfetto.protos.BlockRqCompleteFtraceEvent\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            BlockRqCompleteFtraceEvent.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return BlockRqCompleteFtraceEvent;\n        })();\n\n        protos.BlockRqIssueFtraceEvent = (function() {\n\n            /**\n             * Properties of a BlockRqIssueFtraceEvent.\n             * @memberof perfetto.protos\n             * @interface IBlockRqIssueFtraceEvent\n             * @property {number|Long|null} [dev] BlockRqIssueFtraceEvent dev\n             * @property {number|Long|null} [sector] BlockRqIssueFtraceEvent sector\n             * @property {number|null} [nrSector] BlockRqIssueFtraceEvent nrSector\n             * @property {number|null} [bytes] BlockRqIssueFtraceEvent bytes\n             * @property {string|null} [rwbs] BlockRqIssueFtraceEvent rwbs\n             * @property {string|null} [comm] BlockRqIssueFtraceEvent comm\n             * @property {string|null} [cmd] BlockRqIssueFtraceEvent cmd\n             */\n\n            /**\n             * Constructs a new BlockRqIssueFtraceEvent.\n             * @memberof perfetto.protos\n             * @classdesc Represents a BlockRqIssueFtraceEvent.\n             * @implements IBlockRqIssueFtraceEvent\n             * @constructor\n             * @param {perfetto.protos.IBlockRqIssueFtraceEvent=} [properties] Properties to set\n             */\n            function BlockRqIssueFtraceEvent(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * BlockRqIssueFtraceEvent dev.\n             * @member {number|Long} dev\n             * @memberof perfetto.protos.BlockRqIssueFtraceEvent\n             * @instance\n             */\n            BlockRqIssueFtraceEvent.prototype.dev = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n            /**\n             * BlockRqIssueFtraceEvent sector.\n             * @member {number|Long} sector\n             * @memberof perfetto.protos.BlockRqIssueFtraceEvent\n             * @instance\n             */\n            BlockRqIssueFtraceEvent.prototype.sector = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n            /**\n             * BlockRqIssueFtraceEvent nrSector.\n             * @member {number} nrSector\n             * @memberof perfetto.protos.BlockRqIssueFtraceEvent\n             * @instance\n             */\n            BlockRqIssueFtraceEvent.prototype.nrSector = 0;\n\n            /**\n             * BlockRqIssueFtraceEvent bytes.\n             * @member {number} bytes\n             * @memberof perfetto.protos.BlockRqIssueFtraceEvent\n             * @instance\n             */\n            BlockRqIssueFtraceEvent.prototype.bytes = 0;\n\n            /**\n             * BlockRqIssueFtraceEvent rwbs.\n             * @member {string} rwbs\n             * @memberof perfetto.protos.BlockRqIssueFtraceEvent\n             * @instance\n             */\n            BlockRqIssueFtraceEvent.prototype.rwbs = \"\";\n\n            /**\n             * BlockRqIssueFtraceEvent comm.\n             * @member {string} comm\n             * @memberof perfetto.protos.BlockRqIssueFtraceEvent\n             * @instance\n             */\n            BlockRqIssueFtraceEvent.prototype.comm = \"\";\n\n            /**\n             * BlockRqIssueFtraceEvent cmd.\n             * @member {string} cmd\n             * @memberof perfetto.protos.BlockRqIssueFtraceEvent\n             * @instance\n             */\n            BlockRqIssueFtraceEvent.prototype.cmd = \"\";\n\n            /**\n             * Creates a new BlockRqIssueFtraceEvent instance using the specified properties.\n             * @function create\n             * @memberof perfetto.protos.BlockRqIssueFtraceEvent\n             * @static\n             * @param {perfetto.protos.IBlockRqIssueFtraceEvent=} [properties] Properties to set\n             * @returns {perfetto.protos.BlockRqIssueFtraceEvent} BlockRqIssueFtraceEvent instance\n             */\n            BlockRqIssueFtraceEvent.create = function create(properties) {\n                return new BlockRqIssueFtraceEvent(properties);\n            };\n\n            /**\n             * Encodes the specified BlockRqIssueFtraceEvent message. Does not implicitly {@link perfetto.protos.BlockRqIssueFtraceEvent.verify|verify} messages.\n             * @function encode\n             * @memberof perfetto.protos.BlockRqIssueFtraceEvent\n             * @static\n             * @param {perfetto.protos.IBlockRqIssueFtraceEvent} message BlockRqIssueFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            BlockRqIssueFtraceEvent.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.dev != null && message.hasOwnProperty(\"dev\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.dev);\n                if (message.sector != null && message.hasOwnProperty(\"sector\"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.sector);\n                if (message.nrSector != null && message.hasOwnProperty(\"nrSector\"))\n                    writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.nrSector);\n                if (message.bytes != null && message.hasOwnProperty(\"bytes\"))\n                    writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.bytes);\n                if (message.rwbs != null && message.hasOwnProperty(\"rwbs\"))\n                    writer.uint32(/* id 5, wireType 2 =*/42).string(message.rwbs);\n                if (message.comm != null && message.hasOwnProperty(\"comm\"))\n                    writer.uint32(/* id 6, wireType 2 =*/50).string(message.comm);\n                if (message.cmd != null && message.hasOwnProperty(\"cmd\"))\n                    writer.uint32(/* id 7, wireType 2 =*/58).string(message.cmd);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified BlockRqIssueFtraceEvent message, length delimited. Does not implicitly {@link perfetto.protos.BlockRqIssueFtraceEvent.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof perfetto.protos.BlockRqIssueFtraceEvent\n             * @static\n             * @param {perfetto.protos.IBlockRqIssueFtraceEvent} message BlockRqIssueFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            BlockRqIssueFtraceEvent.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a BlockRqIssueFtraceEvent message from the specified reader or buffer.\n             * @function decode\n             * @memberof perfetto.protos.BlockRqIssueFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {perfetto.protos.BlockRqIssueFtraceEvent} BlockRqIssueFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            BlockRqIssueFtraceEvent.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.BlockRqIssueFtraceEvent();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.dev = reader.uint64();\n                        break;\n                    case 2:\n                        message.sector = reader.uint64();\n                        break;\n                    case 3:\n                        message.nrSector = reader.uint32();\n                        break;\n                    case 4:\n                        message.bytes = reader.uint32();\n                        break;\n                    case 5:\n                        message.rwbs = reader.string();\n                        break;\n                    case 6:\n                        message.comm = reader.string();\n                        break;\n                    case 7:\n                        message.cmd = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a BlockRqIssueFtraceEvent message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof perfetto.protos.BlockRqIssueFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {perfetto.protos.BlockRqIssueFtraceEvent} BlockRqIssueFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            BlockRqIssueFtraceEvent.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a BlockRqIssueFtraceEvent message.\n             * @function verify\n             * @memberof perfetto.protos.BlockRqIssueFtraceEvent\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            BlockRqIssueFtraceEvent.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.dev != null && message.hasOwnProperty(\"dev\"))\n                    if (!$util.isInteger(message.dev) && !(message.dev && $util.isInteger(message.dev.low) && $util.isInteger(message.dev.high)))\n                        return \"dev: integer|Long expected\";\n                if (message.sector != null && message.hasOwnProperty(\"sector\"))\n                    if (!$util.isInteger(message.sector) && !(message.sector && $util.isInteger(message.sector.low) && $util.isInteger(message.sector.high)))\n                        return \"sector: integer|Long expected\";\n                if (message.nrSector != null && message.hasOwnProperty(\"nrSector\"))\n                    if (!$util.isInteger(message.nrSector))\n                        return \"nrSector: integer expected\";\n                if (message.bytes != null && message.hasOwnProperty(\"bytes\"))\n                    if (!$util.isInteger(message.bytes))\n                        return \"bytes: integer expected\";\n                if (message.rwbs != null && message.hasOwnProperty(\"rwbs\"))\n                    if (!$util.isString(message.rwbs))\n                        return \"rwbs: string expected\";\n                if (message.comm != null && message.hasOwnProperty(\"comm\"))\n                    if (!$util.isString(message.comm))\n                        return \"comm: string expected\";\n                if (message.cmd != null && message.hasOwnProperty(\"cmd\"))\n                    if (!$util.isString(message.cmd))\n                        return \"cmd: string expected\";\n                return null;\n            };\n\n            /**\n             * Creates a BlockRqIssueFtraceEvent message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof perfetto.protos.BlockRqIssueFtraceEvent\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {perfetto.protos.BlockRqIssueFtraceEvent} BlockRqIssueFtraceEvent\n             */\n            BlockRqIssueFtraceEvent.fromObject = function fromObject(object) {\n                if (object instanceof $root.perfetto.protos.BlockRqIssueFtraceEvent)\n                    return object;\n                var message = new $root.perfetto.protos.BlockRqIssueFtraceEvent();\n                if (object.dev != null)\n                    if ($util.Long)\n                        (message.dev = $util.Long.fromValue(object.dev)).unsigned = true;\n                    else if (typeof object.dev === \"string\")\n                        message.dev = parseInt(object.dev, 10);\n                    else if (typeof object.dev === \"number\")\n                        message.dev = object.dev;\n                    else if (typeof object.dev === \"object\")\n                        message.dev = new $util.LongBits(object.dev.low >>> 0, object.dev.high >>> 0).toNumber(true);\n                if (object.sector != null)\n                    if ($util.Long)\n                        (message.sector = $util.Long.fromValue(object.sector)).unsigned = true;\n                    else if (typeof object.sector === \"string\")\n                        message.sector = parseInt(object.sector, 10);\n                    else if (typeof object.sector === \"number\")\n                        message.sector = object.sector;\n                    else if (typeof object.sector === \"object\")\n                        message.sector = new $util.LongBits(object.sector.low >>> 0, object.sector.high >>> 0).toNumber(true);\n                if (object.nrSector != null)\n                    message.nrSector = object.nrSector >>> 0;\n                if (object.bytes != null)\n                    message.bytes = object.bytes >>> 0;\n                if (object.rwbs != null)\n                    message.rwbs = String(object.rwbs);\n                if (object.comm != null)\n                    message.comm = String(object.comm);\n                if (object.cmd != null)\n                    message.cmd = String(object.cmd);\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a BlockRqIssueFtraceEvent message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof perfetto.protos.BlockRqIssueFtraceEvent\n             * @static\n             * @param {perfetto.protos.BlockRqIssueFtraceEvent} message BlockRqIssueFtraceEvent\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            BlockRqIssueFtraceEvent.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, true);\n                        object.dev = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.dev = options.longs === String ? \"0\" : 0;\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, true);\n                        object.sector = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.sector = options.longs === String ? \"0\" : 0;\n                    object.nrSector = 0;\n                    object.bytes = 0;\n                    object.rwbs = \"\";\n                    object.comm = \"\";\n                    object.cmd = \"\";\n                }\n                if (message.dev != null && message.hasOwnProperty(\"dev\"))\n                    if (typeof message.dev === \"number\")\n                        object.dev = options.longs === String ? String(message.dev) : message.dev;\n                    else\n                        object.dev = options.longs === String ? $util.Long.prototype.toString.call(message.dev) : options.longs === Number ? new $util.LongBits(message.dev.low >>> 0, message.dev.high >>> 0).toNumber(true) : message.dev;\n                if (message.sector != null && message.hasOwnProperty(\"sector\"))\n                    if (typeof message.sector === \"number\")\n                        object.sector = options.longs === String ? String(message.sector) : message.sector;\n                    else\n                        object.sector = options.longs === String ? $util.Long.prototype.toString.call(message.sector) : options.longs === Number ? new $util.LongBits(message.sector.low >>> 0, message.sector.high >>> 0).toNumber(true) : message.sector;\n                if (message.nrSector != null && message.hasOwnProperty(\"nrSector\"))\n                    object.nrSector = message.nrSector;\n                if (message.bytes != null && message.hasOwnProperty(\"bytes\"))\n                    object.bytes = message.bytes;\n                if (message.rwbs != null && message.hasOwnProperty(\"rwbs\"))\n                    object.rwbs = message.rwbs;\n                if (message.comm != null && message.hasOwnProperty(\"comm\"))\n                    object.comm = message.comm;\n                if (message.cmd != null && message.hasOwnProperty(\"cmd\"))\n                    object.cmd = message.cmd;\n                return object;\n            };\n\n            /**\n             * Converts this BlockRqIssueFtraceEvent to JSON.\n             * @function toJSON\n             * @memberof perfetto.protos.BlockRqIssueFtraceEvent\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            BlockRqIssueFtraceEvent.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return BlockRqIssueFtraceEvent;\n        })();\n\n        protos.CgroupAttachTaskFtraceEvent = (function() {\n\n            /**\n             * Properties of a CgroupAttachTaskFtraceEvent.\n             * @memberof perfetto.protos\n             * @interface ICgroupAttachTaskFtraceEvent\n             * @property {number|null} [dstRoot] CgroupAttachTaskFtraceEvent dstRoot\n             * @property {number|null} [dstId] CgroupAttachTaskFtraceEvent dstId\n             * @property {number|null} [pid] CgroupAttachTaskFtraceEvent pid\n             * @property {string|null} [comm] CgroupAttachTaskFtraceEvent comm\n             * @property {string|null} [cname] CgroupAttachTaskFtraceEvent cname\n             */\n\n            /**\n             * Constructs a new CgroupAttachTaskFtraceEvent.\n             * @memberof perfetto.protos\n             * @classdesc Represents a CgroupAttachTaskFtraceEvent.\n             * @implements ICgroupAttachTaskFtraceEvent\n             * @constructor\n             * @param {perfetto.protos.ICgroupAttachTaskFtraceEvent=} [properties] Properties to set\n             */\n            function CgroupAttachTaskFtraceEvent(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * CgroupAttachTaskFtraceEvent dstRoot.\n             * @member {number} dstRoot\n             * @memberof perfetto.protos.CgroupAttachTaskFtraceEvent\n             * @instance\n             */\n            CgroupAttachTaskFtraceEvent.prototype.dstRoot = 0;\n\n            /**\n             * CgroupAttachTaskFtraceEvent dstId.\n             * @member {number} dstId\n             * @memberof perfetto.protos.CgroupAttachTaskFtraceEvent\n             * @instance\n             */\n            CgroupAttachTaskFtraceEvent.prototype.dstId = 0;\n\n            /**\n             * CgroupAttachTaskFtraceEvent pid.\n             * @member {number} pid\n             * @memberof perfetto.protos.CgroupAttachTaskFtraceEvent\n             * @instance\n             */\n            CgroupAttachTaskFtraceEvent.prototype.pid = 0;\n\n            /**\n             * CgroupAttachTaskFtraceEvent comm.\n             * @member {string} comm\n             * @memberof perfetto.protos.CgroupAttachTaskFtraceEvent\n             * @instance\n             */\n            CgroupAttachTaskFtraceEvent.prototype.comm = \"\";\n\n            /**\n             * CgroupAttachTaskFtraceEvent cname.\n             * @member {string} cname\n             * @memberof perfetto.protos.CgroupAttachTaskFtraceEvent\n             * @instance\n             */\n            CgroupAttachTaskFtraceEvent.prototype.cname = \"\";\n\n            /**\n             * Creates a new CgroupAttachTaskFtraceEvent instance using the specified properties.\n             * @function create\n             * @memberof perfetto.protos.CgroupAttachTaskFtraceEvent\n             * @static\n             * @param {perfetto.protos.ICgroupAttachTaskFtraceEvent=} [properties] Properties to set\n             * @returns {perfetto.protos.CgroupAttachTaskFtraceEvent} CgroupAttachTaskFtraceEvent instance\n             */\n            CgroupAttachTaskFtraceEvent.create = function create(properties) {\n                return new CgroupAttachTaskFtraceEvent(properties);\n            };\n\n            /**\n             * Encodes the specified CgroupAttachTaskFtraceEvent message. Does not implicitly {@link perfetto.protos.CgroupAttachTaskFtraceEvent.verify|verify} messages.\n             * @function encode\n             * @memberof perfetto.protos.CgroupAttachTaskFtraceEvent\n             * @static\n             * @param {perfetto.protos.ICgroupAttachTaskFtraceEvent} message CgroupAttachTaskFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            CgroupAttachTaskFtraceEvent.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.dstRoot != null && message.hasOwnProperty(\"dstRoot\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.dstRoot);\n                if (message.dstId != null && message.hasOwnProperty(\"dstId\"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.dstId);\n                if (message.pid != null && message.hasOwnProperty(\"pid\"))\n                    writer.uint32(/* id 3, wireType 0 =*/24).int32(message.pid);\n                if (message.comm != null && message.hasOwnProperty(\"comm\"))\n                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.comm);\n                if (message.cname != null && message.hasOwnProperty(\"cname\"))\n                    writer.uint32(/* id 5, wireType 2 =*/42).string(message.cname);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified CgroupAttachTaskFtraceEvent message, length delimited. Does not implicitly {@link perfetto.protos.CgroupAttachTaskFtraceEvent.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof perfetto.protos.CgroupAttachTaskFtraceEvent\n             * @static\n             * @param {perfetto.protos.ICgroupAttachTaskFtraceEvent} message CgroupAttachTaskFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            CgroupAttachTaskFtraceEvent.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a CgroupAttachTaskFtraceEvent message from the specified reader or buffer.\n             * @function decode\n             * @memberof perfetto.protos.CgroupAttachTaskFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {perfetto.protos.CgroupAttachTaskFtraceEvent} CgroupAttachTaskFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            CgroupAttachTaskFtraceEvent.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.CgroupAttachTaskFtraceEvent();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.dstRoot = reader.int32();\n                        break;\n                    case 2:\n                        message.dstId = reader.int32();\n                        break;\n                    case 3:\n                        message.pid = reader.int32();\n                        break;\n                    case 4:\n                        message.comm = reader.string();\n                        break;\n                    case 5:\n                        message.cname = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a CgroupAttachTaskFtraceEvent message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof perfetto.protos.CgroupAttachTaskFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {perfetto.protos.CgroupAttachTaskFtraceEvent} CgroupAttachTaskFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            CgroupAttachTaskFtraceEvent.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a CgroupAttachTaskFtraceEvent message.\n             * @function verify\n             * @memberof perfetto.protos.CgroupAttachTaskFtraceEvent\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            CgroupAttachTaskFtraceEvent.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.dstRoot != null && message.hasOwnProperty(\"dstRoot\"))\n                    if (!$util.isInteger(message.dstRoot))\n                        return \"dstRoot: integer expected\";\n                if (message.dstId != null && message.hasOwnProperty(\"dstId\"))\n                    if (!$util.isInteger(message.dstId))\n                        return \"dstId: integer expected\";\n                if (message.pid != null && message.hasOwnProperty(\"pid\"))\n                    if (!$util.isInteger(message.pid))\n                        return \"pid: integer expected\";\n                if (message.comm != null && message.hasOwnProperty(\"comm\"))\n                    if (!$util.isString(message.comm))\n                        return \"comm: string expected\";\n                if (message.cname != null && message.hasOwnProperty(\"cname\"))\n                    if (!$util.isString(message.cname))\n                        return \"cname: string expected\";\n                return null;\n            };\n\n            /**\n             * Creates a CgroupAttachTaskFtraceEvent message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof perfetto.protos.CgroupAttachTaskFtraceEvent\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {perfetto.protos.CgroupAttachTaskFtraceEvent} CgroupAttachTaskFtraceEvent\n             */\n            CgroupAttachTaskFtraceEvent.fromObject = function fromObject(object) {\n                if (object instanceof $root.perfetto.protos.CgroupAttachTaskFtraceEvent)\n                    return object;\n                var message = new $root.perfetto.protos.CgroupAttachTaskFtraceEvent();\n                if (object.dstRoot != null)\n                    message.dstRoot = object.dstRoot | 0;\n                if (object.dstId != null)\n                    message.dstId = object.dstId | 0;\n                if (object.pid != null)\n                    message.pid = object.pid | 0;\n                if (object.comm != null)\n                    message.comm = String(object.comm);\n                if (object.cname != null)\n                    message.cname = String(object.cname);\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a CgroupAttachTaskFtraceEvent message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof perfetto.protos.CgroupAttachTaskFtraceEvent\n             * @static\n             * @param {perfetto.protos.CgroupAttachTaskFtraceEvent} message CgroupAttachTaskFtraceEvent\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            CgroupAttachTaskFtraceEvent.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.dstRoot = 0;\n                    object.dstId = 0;\n                    object.pid = 0;\n                    object.comm = \"\";\n                    object.cname = \"\";\n                }\n                if (message.dstRoot != null && message.hasOwnProperty(\"dstRoot\"))\n                    object.dstRoot = message.dstRoot;\n                if (message.dstId != null && message.hasOwnProperty(\"dstId\"))\n                    object.dstId = message.dstId;\n                if (message.pid != null && message.hasOwnProperty(\"pid\"))\n                    object.pid = message.pid;\n                if (message.comm != null && message.hasOwnProperty(\"comm\"))\n                    object.comm = message.comm;\n                if (message.cname != null && message.hasOwnProperty(\"cname\"))\n                    object.cname = message.cname;\n                return object;\n            };\n\n            /**\n             * Converts this CgroupAttachTaskFtraceEvent to JSON.\n             * @function toJSON\n             * @memberof perfetto.protos.CgroupAttachTaskFtraceEvent\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            CgroupAttachTaskFtraceEvent.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return CgroupAttachTaskFtraceEvent;\n        })();\n\n        protos.CgroupDestroyRootFtraceEvent = (function() {\n\n            /**\n             * Properties of a CgroupDestroyRootFtraceEvent.\n             * @memberof perfetto.protos\n             * @interface ICgroupDestroyRootFtraceEvent\n             * @property {number|null} [root] CgroupDestroyRootFtraceEvent root\n             * @property {number|null} [ssMask] CgroupDestroyRootFtraceEvent ssMask\n             * @property {string|null} [name] CgroupDestroyRootFtraceEvent name\n             */\n\n            /**\n             * Constructs a new CgroupDestroyRootFtraceEvent.\n             * @memberof perfetto.protos\n             * @classdesc Represents a CgroupDestroyRootFtraceEvent.\n             * @implements ICgroupDestroyRootFtraceEvent\n             * @constructor\n             * @param {perfetto.protos.ICgroupDestroyRootFtraceEvent=} [properties] Properties to set\n             */\n            function CgroupDestroyRootFtraceEvent(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * CgroupDestroyRootFtraceEvent root.\n             * @member {number} root\n             * @memberof perfetto.protos.CgroupDestroyRootFtraceEvent\n             * @instance\n             */\n            CgroupDestroyRootFtraceEvent.prototype.root = 0;\n\n            /**\n             * CgroupDestroyRootFtraceEvent ssMask.\n             * @member {number} ssMask\n             * @memberof perfetto.protos.CgroupDestroyRootFtraceEvent\n             * @instance\n             */\n            CgroupDestroyRootFtraceEvent.prototype.ssMask = 0;\n\n            /**\n             * CgroupDestroyRootFtraceEvent name.\n             * @member {string} name\n             * @memberof perfetto.protos.CgroupDestroyRootFtraceEvent\n             * @instance\n             */\n            CgroupDestroyRootFtraceEvent.prototype.name = \"\";\n\n            /**\n             * Creates a new CgroupDestroyRootFtraceEvent instance using the specified properties.\n             * @function create\n             * @memberof perfetto.protos.CgroupDestroyRootFtraceEvent\n             * @static\n             * @param {perfetto.protos.ICgroupDestroyRootFtraceEvent=} [properties] Properties to set\n             * @returns {perfetto.protos.CgroupDestroyRootFtraceEvent} CgroupDestroyRootFtraceEvent instance\n             */\n            CgroupDestroyRootFtraceEvent.create = function create(properties) {\n                return new CgroupDestroyRootFtraceEvent(properties);\n            };\n\n            /**\n             * Encodes the specified CgroupDestroyRootFtraceEvent message. Does not implicitly {@link perfetto.protos.CgroupDestroyRootFtraceEvent.verify|verify} messages.\n             * @function encode\n             * @memberof perfetto.protos.CgroupDestroyRootFtraceEvent\n             * @static\n             * @param {perfetto.protos.ICgroupDestroyRootFtraceEvent} message CgroupDestroyRootFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            CgroupDestroyRootFtraceEvent.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.root != null && message.hasOwnProperty(\"root\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.root);\n                if (message.ssMask != null && message.hasOwnProperty(\"ssMask\"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.ssMask);\n                if (message.name != null && message.hasOwnProperty(\"name\"))\n                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.name);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified CgroupDestroyRootFtraceEvent message, length delimited. Does not implicitly {@link perfetto.protos.CgroupDestroyRootFtraceEvent.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof perfetto.protos.CgroupDestroyRootFtraceEvent\n             * @static\n             * @param {perfetto.protos.ICgroupDestroyRootFtraceEvent} message CgroupDestroyRootFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            CgroupDestroyRootFtraceEvent.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a CgroupDestroyRootFtraceEvent message from the specified reader or buffer.\n             * @function decode\n             * @memberof perfetto.protos.CgroupDestroyRootFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {perfetto.protos.CgroupDestroyRootFtraceEvent} CgroupDestroyRootFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            CgroupDestroyRootFtraceEvent.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.CgroupDestroyRootFtraceEvent();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.root = reader.int32();\n                        break;\n                    case 2:\n                        message.ssMask = reader.uint32();\n                        break;\n                    case 3:\n                        message.name = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a CgroupDestroyRootFtraceEvent message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof perfetto.protos.CgroupDestroyRootFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {perfetto.protos.CgroupDestroyRootFtraceEvent} CgroupDestroyRootFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            CgroupDestroyRootFtraceEvent.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a CgroupDestroyRootFtraceEvent message.\n             * @function verify\n             * @memberof perfetto.protos.CgroupDestroyRootFtraceEvent\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            CgroupDestroyRootFtraceEvent.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.root != null && message.hasOwnProperty(\"root\"))\n                    if (!$util.isInteger(message.root))\n                        return \"root: integer expected\";\n                if (message.ssMask != null && message.hasOwnProperty(\"ssMask\"))\n                    if (!$util.isInteger(message.ssMask))\n                        return \"ssMask: integer expected\";\n                if (message.name != null && message.hasOwnProperty(\"name\"))\n                    if (!$util.isString(message.name))\n                        return \"name: string expected\";\n                return null;\n            };\n\n            /**\n             * Creates a CgroupDestroyRootFtraceEvent message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof perfetto.protos.CgroupDestroyRootFtraceEvent\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {perfetto.protos.CgroupDestroyRootFtraceEvent} CgroupDestroyRootFtraceEvent\n             */\n            CgroupDestroyRootFtraceEvent.fromObject = function fromObject(object) {\n                if (object instanceof $root.perfetto.protos.CgroupDestroyRootFtraceEvent)\n                    return object;\n                var message = new $root.perfetto.protos.CgroupDestroyRootFtraceEvent();\n                if (object.root != null)\n                    message.root = object.root | 0;\n                if (object.ssMask != null)\n                    message.ssMask = object.ssMask >>> 0;\n                if (object.name != null)\n                    message.name = String(object.name);\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a CgroupDestroyRootFtraceEvent message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof perfetto.protos.CgroupDestroyRootFtraceEvent\n             * @static\n             * @param {perfetto.protos.CgroupDestroyRootFtraceEvent} message CgroupDestroyRootFtraceEvent\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            CgroupDestroyRootFtraceEvent.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.root = 0;\n                    object.ssMask = 0;\n                    object.name = \"\";\n                }\n                if (message.root != null && message.hasOwnProperty(\"root\"))\n                    object.root = message.root;\n                if (message.ssMask != null && message.hasOwnProperty(\"ssMask\"))\n                    object.ssMask = message.ssMask;\n                if (message.name != null && message.hasOwnProperty(\"name\"))\n                    object.name = message.name;\n                return object;\n            };\n\n            /**\n             * Converts this CgroupDestroyRootFtraceEvent to JSON.\n             * @function toJSON\n             * @memberof perfetto.protos.CgroupDestroyRootFtraceEvent\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            CgroupDestroyRootFtraceEvent.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return CgroupDestroyRootFtraceEvent;\n        })();\n\n        protos.CgroupMkdirFtraceEvent = (function() {\n\n            /**\n             * Properties of a CgroupMkdirFtraceEvent.\n             * @memberof perfetto.protos\n             * @interface ICgroupMkdirFtraceEvent\n             * @property {number|null} [root] CgroupMkdirFtraceEvent root\n             * @property {number|null} [id] CgroupMkdirFtraceEvent id\n             * @property {string|null} [cname] CgroupMkdirFtraceEvent cname\n             */\n\n            /**\n             * Constructs a new CgroupMkdirFtraceEvent.\n             * @memberof perfetto.protos\n             * @classdesc Represents a CgroupMkdirFtraceEvent.\n             * @implements ICgroupMkdirFtraceEvent\n             * @constructor\n             * @param {perfetto.protos.ICgroupMkdirFtraceEvent=} [properties] Properties to set\n             */\n            function CgroupMkdirFtraceEvent(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * CgroupMkdirFtraceEvent root.\n             * @member {number} root\n             * @memberof perfetto.protos.CgroupMkdirFtraceEvent\n             * @instance\n             */\n            CgroupMkdirFtraceEvent.prototype.root = 0;\n\n            /**\n             * CgroupMkdirFtraceEvent id.\n             * @member {number} id\n             * @memberof perfetto.protos.CgroupMkdirFtraceEvent\n             * @instance\n             */\n            CgroupMkdirFtraceEvent.prototype.id = 0;\n\n            /**\n             * CgroupMkdirFtraceEvent cname.\n             * @member {string} cname\n             * @memberof perfetto.protos.CgroupMkdirFtraceEvent\n             * @instance\n             */\n            CgroupMkdirFtraceEvent.prototype.cname = \"\";\n\n            /**\n             * Creates a new CgroupMkdirFtraceEvent instance using the specified properties.\n             * @function create\n             * @memberof perfetto.protos.CgroupMkdirFtraceEvent\n             * @static\n             * @param {perfetto.protos.ICgroupMkdirFtraceEvent=} [properties] Properties to set\n             * @returns {perfetto.protos.CgroupMkdirFtraceEvent} CgroupMkdirFtraceEvent instance\n             */\n            CgroupMkdirFtraceEvent.create = function create(properties) {\n                return new CgroupMkdirFtraceEvent(properties);\n            };\n\n            /**\n             * Encodes the specified CgroupMkdirFtraceEvent message. Does not implicitly {@link perfetto.protos.CgroupMkdirFtraceEvent.verify|verify} messages.\n             * @function encode\n             * @memberof perfetto.protos.CgroupMkdirFtraceEvent\n             * @static\n             * @param {perfetto.protos.ICgroupMkdirFtraceEvent} message CgroupMkdirFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            CgroupMkdirFtraceEvent.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.root != null && message.hasOwnProperty(\"root\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.root);\n                if (message.id != null && message.hasOwnProperty(\"id\"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.id);\n                if (message.cname != null && message.hasOwnProperty(\"cname\"))\n                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.cname);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified CgroupMkdirFtraceEvent message, length delimited. Does not implicitly {@link perfetto.protos.CgroupMkdirFtraceEvent.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof perfetto.protos.CgroupMkdirFtraceEvent\n             * @static\n             * @param {perfetto.protos.ICgroupMkdirFtraceEvent} message CgroupMkdirFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            CgroupMkdirFtraceEvent.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a CgroupMkdirFtraceEvent message from the specified reader or buffer.\n             * @function decode\n             * @memberof perfetto.protos.CgroupMkdirFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {perfetto.protos.CgroupMkdirFtraceEvent} CgroupMkdirFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            CgroupMkdirFtraceEvent.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.CgroupMkdirFtraceEvent();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.root = reader.int32();\n                        break;\n                    case 2:\n                        message.id = reader.int32();\n                        break;\n                    case 3:\n                        message.cname = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a CgroupMkdirFtraceEvent message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof perfetto.protos.CgroupMkdirFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {perfetto.protos.CgroupMkdirFtraceEvent} CgroupMkdirFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            CgroupMkdirFtraceEvent.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a CgroupMkdirFtraceEvent message.\n             * @function verify\n             * @memberof perfetto.protos.CgroupMkdirFtraceEvent\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            CgroupMkdirFtraceEvent.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.root != null && message.hasOwnProperty(\"root\"))\n                    if (!$util.isInteger(message.root))\n                        return \"root: integer expected\";\n                if (message.id != null && message.hasOwnProperty(\"id\"))\n                    if (!$util.isInteger(message.id))\n                        return \"id: integer expected\";\n                if (message.cname != null && message.hasOwnProperty(\"cname\"))\n                    if (!$util.isString(message.cname))\n                        return \"cname: string expected\";\n                return null;\n            };\n\n            /**\n             * Creates a CgroupMkdirFtraceEvent message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof perfetto.protos.CgroupMkdirFtraceEvent\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {perfetto.protos.CgroupMkdirFtraceEvent} CgroupMkdirFtraceEvent\n             */\n            CgroupMkdirFtraceEvent.fromObject = function fromObject(object) {\n                if (object instanceof $root.perfetto.protos.CgroupMkdirFtraceEvent)\n                    return object;\n                var message = new $root.perfetto.protos.CgroupMkdirFtraceEvent();\n                if (object.root != null)\n                    message.root = object.root | 0;\n                if (object.id != null)\n                    message.id = object.id | 0;\n                if (object.cname != null)\n                    message.cname = String(object.cname);\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a CgroupMkdirFtraceEvent message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof perfetto.protos.CgroupMkdirFtraceEvent\n             * @static\n             * @param {perfetto.protos.CgroupMkdirFtraceEvent} message CgroupMkdirFtraceEvent\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            CgroupMkdirFtraceEvent.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.root = 0;\n                    object.id = 0;\n                    object.cname = \"\";\n                }\n                if (message.root != null && message.hasOwnProperty(\"root\"))\n                    object.root = message.root;\n                if (message.id != null && message.hasOwnProperty(\"id\"))\n                    object.id = message.id;\n                if (message.cname != null && message.hasOwnProperty(\"cname\"))\n                    object.cname = message.cname;\n                return object;\n            };\n\n            /**\n             * Converts this CgroupMkdirFtraceEvent to JSON.\n             * @function toJSON\n             * @memberof perfetto.protos.CgroupMkdirFtraceEvent\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            CgroupMkdirFtraceEvent.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return CgroupMkdirFtraceEvent;\n        })();\n\n        protos.CgroupReleaseFtraceEvent = (function() {\n\n            /**\n             * Properties of a CgroupReleaseFtraceEvent.\n             * @memberof perfetto.protos\n             * @interface ICgroupReleaseFtraceEvent\n             * @property {number|null} [root] CgroupReleaseFtraceEvent root\n             * @property {number|null} [id] CgroupReleaseFtraceEvent id\n             * @property {string|null} [cname] CgroupReleaseFtraceEvent cname\n             */\n\n            /**\n             * Constructs a new CgroupReleaseFtraceEvent.\n             * @memberof perfetto.protos\n             * @classdesc Represents a CgroupReleaseFtraceEvent.\n             * @implements ICgroupReleaseFtraceEvent\n             * @constructor\n             * @param {perfetto.protos.ICgroupReleaseFtraceEvent=} [properties] Properties to set\n             */\n            function CgroupReleaseFtraceEvent(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * CgroupReleaseFtraceEvent root.\n             * @member {number} root\n             * @memberof perfetto.protos.CgroupReleaseFtraceEvent\n             * @instance\n             */\n            CgroupReleaseFtraceEvent.prototype.root = 0;\n\n            /**\n             * CgroupReleaseFtraceEvent id.\n             * @member {number} id\n             * @memberof perfetto.protos.CgroupReleaseFtraceEvent\n             * @instance\n             */\n            CgroupReleaseFtraceEvent.prototype.id = 0;\n\n            /**\n             * CgroupReleaseFtraceEvent cname.\n             * @member {string} cname\n             * @memberof perfetto.protos.CgroupReleaseFtraceEvent\n             * @instance\n             */\n            CgroupReleaseFtraceEvent.prototype.cname = \"\";\n\n            /**\n             * Creates a new CgroupReleaseFtraceEvent instance using the specified properties.\n             * @function create\n             * @memberof perfetto.protos.CgroupReleaseFtraceEvent\n             * @static\n             * @param {perfetto.protos.ICgroupReleaseFtraceEvent=} [properties] Properties to set\n             * @returns {perfetto.protos.CgroupReleaseFtraceEvent} CgroupReleaseFtraceEvent instance\n             */\n            CgroupReleaseFtraceEvent.create = function create(properties) {\n                return new CgroupReleaseFtraceEvent(properties);\n            };\n\n            /**\n             * Encodes the specified CgroupReleaseFtraceEvent message. Does not implicitly {@link perfetto.protos.CgroupReleaseFtraceEvent.verify|verify} messages.\n             * @function encode\n             * @memberof perfetto.protos.CgroupReleaseFtraceEvent\n             * @static\n             * @param {perfetto.protos.ICgroupReleaseFtraceEvent} message CgroupReleaseFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            CgroupReleaseFtraceEvent.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.root != null && message.hasOwnProperty(\"root\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.root);\n                if (message.id != null && message.hasOwnProperty(\"id\"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.id);\n                if (message.cname != null && message.hasOwnProperty(\"cname\"))\n                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.cname);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified CgroupReleaseFtraceEvent message, length delimited. Does not implicitly {@link perfetto.protos.CgroupReleaseFtraceEvent.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof perfetto.protos.CgroupReleaseFtraceEvent\n             * @static\n             * @param {perfetto.protos.ICgroupReleaseFtraceEvent} message CgroupReleaseFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            CgroupReleaseFtraceEvent.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a CgroupReleaseFtraceEvent message from the specified reader or buffer.\n             * @function decode\n             * @memberof perfetto.protos.CgroupReleaseFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {perfetto.protos.CgroupReleaseFtraceEvent} CgroupReleaseFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            CgroupReleaseFtraceEvent.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.CgroupReleaseFtraceEvent();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.root = reader.int32();\n                        break;\n                    case 2:\n                        message.id = reader.int32();\n                        break;\n                    case 3:\n                        message.cname = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a CgroupReleaseFtraceEvent message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof perfetto.protos.CgroupReleaseFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {perfetto.protos.CgroupReleaseFtraceEvent} CgroupReleaseFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            CgroupReleaseFtraceEvent.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a CgroupReleaseFtraceEvent message.\n             * @function verify\n             * @memberof perfetto.protos.CgroupReleaseFtraceEvent\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            CgroupReleaseFtraceEvent.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.root != null && message.hasOwnProperty(\"root\"))\n                    if (!$util.isInteger(message.root))\n                        return \"root: integer expected\";\n                if (message.id != null && message.hasOwnProperty(\"id\"))\n                    if (!$util.isInteger(message.id))\n                        return \"id: integer expected\";\n                if (message.cname != null && message.hasOwnProperty(\"cname\"))\n                    if (!$util.isString(message.cname))\n                        return \"cname: string expected\";\n                return null;\n            };\n\n            /**\n             * Creates a CgroupReleaseFtraceEvent message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof perfetto.protos.CgroupReleaseFtraceEvent\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {perfetto.protos.CgroupReleaseFtraceEvent} CgroupReleaseFtraceEvent\n             */\n            CgroupReleaseFtraceEvent.fromObject = function fromObject(object) {\n                if (object instanceof $root.perfetto.protos.CgroupReleaseFtraceEvent)\n                    return object;\n                var message = new $root.perfetto.protos.CgroupReleaseFtraceEvent();\n                if (object.root != null)\n                    message.root = object.root | 0;\n                if (object.id != null)\n                    message.id = object.id | 0;\n                if (object.cname != null)\n                    message.cname = String(object.cname);\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a CgroupReleaseFtraceEvent message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof perfetto.protos.CgroupReleaseFtraceEvent\n             * @static\n             * @param {perfetto.protos.CgroupReleaseFtraceEvent} message CgroupReleaseFtraceEvent\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            CgroupReleaseFtraceEvent.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.root = 0;\n                    object.id = 0;\n                    object.cname = \"\";\n                }\n                if (message.root != null && message.hasOwnProperty(\"root\"))\n                    object.root = message.root;\n                if (message.id != null && message.hasOwnProperty(\"id\"))\n                    object.id = message.id;\n                if (message.cname != null && message.hasOwnProperty(\"cname\"))\n                    object.cname = message.cname;\n                return object;\n            };\n\n            /**\n             * Converts this CgroupReleaseFtraceEvent to JSON.\n             * @function toJSON\n             * @memberof perfetto.protos.CgroupReleaseFtraceEvent\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            CgroupReleaseFtraceEvent.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return CgroupReleaseFtraceEvent;\n        })();\n\n        protos.CgroupRemountFtraceEvent = (function() {\n\n            /**\n             * Properties of a CgroupRemountFtraceEvent.\n             * @memberof perfetto.protos\n             * @interface ICgroupRemountFtraceEvent\n             * @property {number|null} [root] CgroupRemountFtraceEvent root\n             * @property {number|null} [ssMask] CgroupRemountFtraceEvent ssMask\n             * @property {string|null} [name] CgroupRemountFtraceEvent name\n             */\n\n            /**\n             * Constructs a new CgroupRemountFtraceEvent.\n             * @memberof perfetto.protos\n             * @classdesc Represents a CgroupRemountFtraceEvent.\n             * @implements ICgroupRemountFtraceEvent\n             * @constructor\n             * @param {perfetto.protos.ICgroupRemountFtraceEvent=} [properties] Properties to set\n             */\n            function CgroupRemountFtraceEvent(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * CgroupRemountFtraceEvent root.\n             * @member {number} root\n             * @memberof perfetto.protos.CgroupRemountFtraceEvent\n             * @instance\n             */\n            CgroupRemountFtraceEvent.prototype.root = 0;\n\n            /**\n             * CgroupRemountFtraceEvent ssMask.\n             * @member {number} ssMask\n             * @memberof perfetto.protos.CgroupRemountFtraceEvent\n             * @instance\n             */\n            CgroupRemountFtraceEvent.prototype.ssMask = 0;\n\n            /**\n             * CgroupRemountFtraceEvent name.\n             * @member {string} name\n             * @memberof perfetto.protos.CgroupRemountFtraceEvent\n             * @instance\n             */\n            CgroupRemountFtraceEvent.prototype.name = \"\";\n\n            /**\n             * Creates a new CgroupRemountFtraceEvent instance using the specified properties.\n             * @function create\n             * @memberof perfetto.protos.CgroupRemountFtraceEvent\n             * @static\n             * @param {perfetto.protos.ICgroupRemountFtraceEvent=} [properties] Properties to set\n             * @returns {perfetto.protos.CgroupRemountFtraceEvent} CgroupRemountFtraceEvent instance\n             */\n            CgroupRemountFtraceEvent.create = function create(properties) {\n                return new CgroupRemountFtraceEvent(properties);\n            };\n\n            /**\n             * Encodes the specified CgroupRemountFtraceEvent message. Does not implicitly {@link perfetto.protos.CgroupRemountFtraceEvent.verify|verify} messages.\n             * @function encode\n             * @memberof perfetto.protos.CgroupRemountFtraceEvent\n             * @static\n             * @param {perfetto.protos.ICgroupRemountFtraceEvent} message CgroupRemountFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            CgroupRemountFtraceEvent.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.root != null && message.hasOwnProperty(\"root\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.root);\n                if (message.ssMask != null && message.hasOwnProperty(\"ssMask\"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.ssMask);\n                if (message.name != null && message.hasOwnProperty(\"name\"))\n                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.name);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified CgroupRemountFtraceEvent message, length delimited. Does not implicitly {@link perfetto.protos.CgroupRemountFtraceEvent.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof perfetto.protos.CgroupRemountFtraceEvent\n             * @static\n             * @param {perfetto.protos.ICgroupRemountFtraceEvent} message CgroupRemountFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            CgroupRemountFtraceEvent.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a CgroupRemountFtraceEvent message from the specified reader or buffer.\n             * @function decode\n             * @memberof perfetto.protos.CgroupRemountFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {perfetto.protos.CgroupRemountFtraceEvent} CgroupRemountFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            CgroupRemountFtraceEvent.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.CgroupRemountFtraceEvent();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.root = reader.int32();\n                        break;\n                    case 2:\n                        message.ssMask = reader.uint32();\n                        break;\n                    case 3:\n                        message.name = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a CgroupRemountFtraceEvent message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof perfetto.protos.CgroupRemountFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {perfetto.protos.CgroupRemountFtraceEvent} CgroupRemountFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            CgroupRemountFtraceEvent.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a CgroupRemountFtraceEvent message.\n             * @function verify\n             * @memberof perfetto.protos.CgroupRemountFtraceEvent\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            CgroupRemountFtraceEvent.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.root != null && message.hasOwnProperty(\"root\"))\n                    if (!$util.isInteger(message.root))\n                        return \"root: integer expected\";\n                if (message.ssMask != null && message.hasOwnProperty(\"ssMask\"))\n                    if (!$util.isInteger(message.ssMask))\n                        return \"ssMask: integer expected\";\n                if (message.name != null && message.hasOwnProperty(\"name\"))\n                    if (!$util.isString(message.name))\n                        return \"name: string expected\";\n                return null;\n            };\n\n            /**\n             * Creates a CgroupRemountFtraceEvent message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof perfetto.protos.CgroupRemountFtraceEvent\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {perfetto.protos.CgroupRemountFtraceEvent} CgroupRemountFtraceEvent\n             */\n            CgroupRemountFtraceEvent.fromObject = function fromObject(object) {\n                if (object instanceof $root.perfetto.protos.CgroupRemountFtraceEvent)\n                    return object;\n                var message = new $root.perfetto.protos.CgroupRemountFtraceEvent();\n                if (object.root != null)\n                    message.root = object.root | 0;\n                if (object.ssMask != null)\n                    message.ssMask = object.ssMask >>> 0;\n                if (object.name != null)\n                    message.name = String(object.name);\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a CgroupRemountFtraceEvent message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof perfetto.protos.CgroupRemountFtraceEvent\n             * @static\n             * @param {perfetto.protos.CgroupRemountFtraceEvent} message CgroupRemountFtraceEvent\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            CgroupRemountFtraceEvent.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.root = 0;\n                    object.ssMask = 0;\n                    object.name = \"\";\n                }\n                if (message.root != null && message.hasOwnProperty(\"root\"))\n                    object.root = message.root;\n                if (message.ssMask != null && message.hasOwnProperty(\"ssMask\"))\n                    object.ssMask = message.ssMask;\n                if (message.name != null && message.hasOwnProperty(\"name\"))\n                    object.name = message.name;\n                return object;\n            };\n\n            /**\n             * Converts this CgroupRemountFtraceEvent to JSON.\n             * @function toJSON\n             * @memberof perfetto.protos.CgroupRemountFtraceEvent\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            CgroupRemountFtraceEvent.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return CgroupRemountFtraceEvent;\n        })();\n\n        protos.CgroupRenameFtraceEvent = (function() {\n\n            /**\n             * Properties of a CgroupRenameFtraceEvent.\n             * @memberof perfetto.protos\n             * @interface ICgroupRenameFtraceEvent\n             * @property {number|null} [root] CgroupRenameFtraceEvent root\n             * @property {number|null} [id] CgroupRenameFtraceEvent id\n             * @property {string|null} [cname] CgroupRenameFtraceEvent cname\n             */\n\n            /**\n             * Constructs a new CgroupRenameFtraceEvent.\n             * @memberof perfetto.protos\n             * @classdesc Represents a CgroupRenameFtraceEvent.\n             * @implements ICgroupRenameFtraceEvent\n             * @constructor\n             * @param {perfetto.protos.ICgroupRenameFtraceEvent=} [properties] Properties to set\n             */\n            function CgroupRenameFtraceEvent(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * CgroupRenameFtraceEvent root.\n             * @member {number} root\n             * @memberof perfetto.protos.CgroupRenameFtraceEvent\n             * @instance\n             */\n            CgroupRenameFtraceEvent.prototype.root = 0;\n\n            /**\n             * CgroupRenameFtraceEvent id.\n             * @member {number} id\n             * @memberof perfetto.protos.CgroupRenameFtraceEvent\n             * @instance\n             */\n            CgroupRenameFtraceEvent.prototype.id = 0;\n\n            /**\n             * CgroupRenameFtraceEvent cname.\n             * @member {string} cname\n             * @memberof perfetto.protos.CgroupRenameFtraceEvent\n             * @instance\n             */\n            CgroupRenameFtraceEvent.prototype.cname = \"\";\n\n            /**\n             * Creates a new CgroupRenameFtraceEvent instance using the specified properties.\n             * @function create\n             * @memberof perfetto.protos.CgroupRenameFtraceEvent\n             * @static\n             * @param {perfetto.protos.ICgroupRenameFtraceEvent=} [properties] Properties to set\n             * @returns {perfetto.protos.CgroupRenameFtraceEvent} CgroupRenameFtraceEvent instance\n             */\n            CgroupRenameFtraceEvent.create = function create(properties) {\n                return new CgroupRenameFtraceEvent(properties);\n            };\n\n            /**\n             * Encodes the specified CgroupRenameFtraceEvent message. Does not implicitly {@link perfetto.protos.CgroupRenameFtraceEvent.verify|verify} messages.\n             * @function encode\n             * @memberof perfetto.protos.CgroupRenameFtraceEvent\n             * @static\n             * @param {perfetto.protos.ICgroupRenameFtraceEvent} message CgroupRenameFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            CgroupRenameFtraceEvent.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.root != null && message.hasOwnProperty(\"root\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.root);\n                if (message.id != null && message.hasOwnProperty(\"id\"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.id);\n                if (message.cname != null && message.hasOwnProperty(\"cname\"))\n                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.cname);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified CgroupRenameFtraceEvent message, length delimited. Does not implicitly {@link perfetto.protos.CgroupRenameFtraceEvent.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof perfetto.protos.CgroupRenameFtraceEvent\n             * @static\n             * @param {perfetto.protos.ICgroupRenameFtraceEvent} message CgroupRenameFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            CgroupRenameFtraceEvent.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a CgroupRenameFtraceEvent message from the specified reader or buffer.\n             * @function decode\n             * @memberof perfetto.protos.CgroupRenameFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {perfetto.protos.CgroupRenameFtraceEvent} CgroupRenameFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            CgroupRenameFtraceEvent.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.CgroupRenameFtraceEvent();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.root = reader.int32();\n                        break;\n                    case 2:\n                        message.id = reader.int32();\n                        break;\n                    case 3:\n                        message.cname = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a CgroupRenameFtraceEvent message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof perfetto.protos.CgroupRenameFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {perfetto.protos.CgroupRenameFtraceEvent} CgroupRenameFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            CgroupRenameFtraceEvent.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a CgroupRenameFtraceEvent message.\n             * @function verify\n             * @memberof perfetto.protos.CgroupRenameFtraceEvent\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            CgroupRenameFtraceEvent.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.root != null && message.hasOwnProperty(\"root\"))\n                    if (!$util.isInteger(message.root))\n                        return \"root: integer expected\";\n                if (message.id != null && message.hasOwnProperty(\"id\"))\n                    if (!$util.isInteger(message.id))\n                        return \"id: integer expected\";\n                if (message.cname != null && message.hasOwnProperty(\"cname\"))\n                    if (!$util.isString(message.cname))\n                        return \"cname: string expected\";\n                return null;\n            };\n\n            /**\n             * Creates a CgroupRenameFtraceEvent message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof perfetto.protos.CgroupRenameFtraceEvent\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {perfetto.protos.CgroupRenameFtraceEvent} CgroupRenameFtraceEvent\n             */\n            CgroupRenameFtraceEvent.fromObject = function fromObject(object) {\n                if (object instanceof $root.perfetto.protos.CgroupRenameFtraceEvent)\n                    return object;\n                var message = new $root.perfetto.protos.CgroupRenameFtraceEvent();\n                if (object.root != null)\n                    message.root = object.root | 0;\n                if (object.id != null)\n                    message.id = object.id | 0;\n                if (object.cname != null)\n                    message.cname = String(object.cname);\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a CgroupRenameFtraceEvent message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof perfetto.protos.CgroupRenameFtraceEvent\n             * @static\n             * @param {perfetto.protos.CgroupRenameFtraceEvent} message CgroupRenameFtraceEvent\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            CgroupRenameFtraceEvent.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.root = 0;\n                    object.id = 0;\n                    object.cname = \"\";\n                }\n                if (message.root != null && message.hasOwnProperty(\"root\"))\n                    object.root = message.root;\n                if (message.id != null && message.hasOwnProperty(\"id\"))\n                    object.id = message.id;\n                if (message.cname != null && message.hasOwnProperty(\"cname\"))\n                    object.cname = message.cname;\n                return object;\n            };\n\n            /**\n             * Converts this CgroupRenameFtraceEvent to JSON.\n             * @function toJSON\n             * @memberof perfetto.protos.CgroupRenameFtraceEvent\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            CgroupRenameFtraceEvent.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return CgroupRenameFtraceEvent;\n        })();\n\n        protos.CgroupRmdirFtraceEvent = (function() {\n\n            /**\n             * Properties of a CgroupRmdirFtraceEvent.\n             * @memberof perfetto.protos\n             * @interface ICgroupRmdirFtraceEvent\n             * @property {number|null} [root] CgroupRmdirFtraceEvent root\n             * @property {number|null} [id] CgroupRmdirFtraceEvent id\n             * @property {string|null} [cname] CgroupRmdirFtraceEvent cname\n             */\n\n            /**\n             * Constructs a new CgroupRmdirFtraceEvent.\n             * @memberof perfetto.protos\n             * @classdesc Represents a CgroupRmdirFtraceEvent.\n             * @implements ICgroupRmdirFtraceEvent\n             * @constructor\n             * @param {perfetto.protos.ICgroupRmdirFtraceEvent=} [properties] Properties to set\n             */\n            function CgroupRmdirFtraceEvent(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * CgroupRmdirFtraceEvent root.\n             * @member {number} root\n             * @memberof perfetto.protos.CgroupRmdirFtraceEvent\n             * @instance\n             */\n            CgroupRmdirFtraceEvent.prototype.root = 0;\n\n            /**\n             * CgroupRmdirFtraceEvent id.\n             * @member {number} id\n             * @memberof perfetto.protos.CgroupRmdirFtraceEvent\n             * @instance\n             */\n            CgroupRmdirFtraceEvent.prototype.id = 0;\n\n            /**\n             * CgroupRmdirFtraceEvent cname.\n             * @member {string} cname\n             * @memberof perfetto.protos.CgroupRmdirFtraceEvent\n             * @instance\n             */\n            CgroupRmdirFtraceEvent.prototype.cname = \"\";\n\n            /**\n             * Creates a new CgroupRmdirFtraceEvent instance using the specified properties.\n             * @function create\n             * @memberof perfetto.protos.CgroupRmdirFtraceEvent\n             * @static\n             * @param {perfetto.protos.ICgroupRmdirFtraceEvent=} [properties] Properties to set\n             * @returns {perfetto.protos.CgroupRmdirFtraceEvent} CgroupRmdirFtraceEvent instance\n             */\n            CgroupRmdirFtraceEvent.create = function create(properties) {\n                return new CgroupRmdirFtraceEvent(properties);\n            };\n\n            /**\n             * Encodes the specified CgroupRmdirFtraceEvent message. Does not implicitly {@link perfetto.protos.CgroupRmdirFtraceEvent.verify|verify} messages.\n             * @function encode\n             * @memberof perfetto.protos.CgroupRmdirFtraceEvent\n             * @static\n             * @param {perfetto.protos.ICgroupRmdirFtraceEvent} message CgroupRmdirFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            CgroupRmdirFtraceEvent.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.root != null && message.hasOwnProperty(\"root\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.root);\n                if (message.id != null && message.hasOwnProperty(\"id\"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.id);\n                if (message.cname != null && message.hasOwnProperty(\"cname\"))\n                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.cname);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified CgroupRmdirFtraceEvent message, length delimited. Does not implicitly {@link perfetto.protos.CgroupRmdirFtraceEvent.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof perfetto.protos.CgroupRmdirFtraceEvent\n             * @static\n             * @param {perfetto.protos.ICgroupRmdirFtraceEvent} message CgroupRmdirFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            CgroupRmdirFtraceEvent.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a CgroupRmdirFtraceEvent message from the specified reader or buffer.\n             * @function decode\n             * @memberof perfetto.protos.CgroupRmdirFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {perfetto.protos.CgroupRmdirFtraceEvent} CgroupRmdirFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            CgroupRmdirFtraceEvent.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.CgroupRmdirFtraceEvent();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.root = reader.int32();\n                        break;\n                    case 2:\n                        message.id = reader.int32();\n                        break;\n                    case 3:\n                        message.cname = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a CgroupRmdirFtraceEvent message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof perfetto.protos.CgroupRmdirFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {perfetto.protos.CgroupRmdirFtraceEvent} CgroupRmdirFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            CgroupRmdirFtraceEvent.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a CgroupRmdirFtraceEvent message.\n             * @function verify\n             * @memberof perfetto.protos.CgroupRmdirFtraceEvent\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            CgroupRmdirFtraceEvent.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.root != null && message.hasOwnProperty(\"root\"))\n                    if (!$util.isInteger(message.root))\n                        return \"root: integer expected\";\n                if (message.id != null && message.hasOwnProperty(\"id\"))\n                    if (!$util.isInteger(message.id))\n                        return \"id: integer expected\";\n                if (message.cname != null && message.hasOwnProperty(\"cname\"))\n                    if (!$util.isString(message.cname))\n                        return \"cname: string expected\";\n                return null;\n            };\n\n            /**\n             * Creates a CgroupRmdirFtraceEvent message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof perfetto.protos.CgroupRmdirFtraceEvent\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {perfetto.protos.CgroupRmdirFtraceEvent} CgroupRmdirFtraceEvent\n             */\n            CgroupRmdirFtraceEvent.fromObject = function fromObject(object) {\n                if (object instanceof $root.perfetto.protos.CgroupRmdirFtraceEvent)\n                    return object;\n                var message = new $root.perfetto.protos.CgroupRmdirFtraceEvent();\n                if (object.root != null)\n                    message.root = object.root | 0;\n                if (object.id != null)\n                    message.id = object.id | 0;\n                if (object.cname != null)\n                    message.cname = String(object.cname);\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a CgroupRmdirFtraceEvent message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof perfetto.protos.CgroupRmdirFtraceEvent\n             * @static\n             * @param {perfetto.protos.CgroupRmdirFtraceEvent} message CgroupRmdirFtraceEvent\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            CgroupRmdirFtraceEvent.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.root = 0;\n                    object.id = 0;\n                    object.cname = \"\";\n                }\n                if (message.root != null && message.hasOwnProperty(\"root\"))\n                    object.root = message.root;\n                if (message.id != null && message.hasOwnProperty(\"id\"))\n                    object.id = message.id;\n                if (message.cname != null && message.hasOwnProperty(\"cname\"))\n                    object.cname = message.cname;\n                return object;\n            };\n\n            /**\n             * Converts this CgroupRmdirFtraceEvent to JSON.\n             * @function toJSON\n             * @memberof perfetto.protos.CgroupRmdirFtraceEvent\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            CgroupRmdirFtraceEvent.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return CgroupRmdirFtraceEvent;\n        })();\n\n        protos.CgroupSetupRootFtraceEvent = (function() {\n\n            /**\n             * Properties of a CgroupSetupRootFtraceEvent.\n             * @memberof perfetto.protos\n             * @interface ICgroupSetupRootFtraceEvent\n             * @property {number|null} [root] CgroupSetupRootFtraceEvent root\n             * @property {number|null} [ssMask] CgroupSetupRootFtraceEvent ssMask\n             * @property {string|null} [name] CgroupSetupRootFtraceEvent name\n             */\n\n            /**\n             * Constructs a new CgroupSetupRootFtraceEvent.\n             * @memberof perfetto.protos\n             * @classdesc Represents a CgroupSetupRootFtraceEvent.\n             * @implements ICgroupSetupRootFtraceEvent\n             * @constructor\n             * @param {perfetto.protos.ICgroupSetupRootFtraceEvent=} [properties] Properties to set\n             */\n            function CgroupSetupRootFtraceEvent(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * CgroupSetupRootFtraceEvent root.\n             * @member {number} root\n             * @memberof perfetto.protos.CgroupSetupRootFtraceEvent\n             * @instance\n             */\n            CgroupSetupRootFtraceEvent.prototype.root = 0;\n\n            /**\n             * CgroupSetupRootFtraceEvent ssMask.\n             * @member {number} ssMask\n             * @memberof perfetto.protos.CgroupSetupRootFtraceEvent\n             * @instance\n             */\n            CgroupSetupRootFtraceEvent.prototype.ssMask = 0;\n\n            /**\n             * CgroupSetupRootFtraceEvent name.\n             * @member {string} name\n             * @memberof perfetto.protos.CgroupSetupRootFtraceEvent\n             * @instance\n             */\n            CgroupSetupRootFtraceEvent.prototype.name = \"\";\n\n            /**\n             * Creates a new CgroupSetupRootFtraceEvent instance using the specified properties.\n             * @function create\n             * @memberof perfetto.protos.CgroupSetupRootFtraceEvent\n             * @static\n             * @param {perfetto.protos.ICgroupSetupRootFtraceEvent=} [properties] Properties to set\n             * @returns {perfetto.protos.CgroupSetupRootFtraceEvent} CgroupSetupRootFtraceEvent instance\n             */\n            CgroupSetupRootFtraceEvent.create = function create(properties) {\n                return new CgroupSetupRootFtraceEvent(properties);\n            };\n\n            /**\n             * Encodes the specified CgroupSetupRootFtraceEvent message. Does not implicitly {@link perfetto.protos.CgroupSetupRootFtraceEvent.verify|verify} messages.\n             * @function encode\n             * @memberof perfetto.protos.CgroupSetupRootFtraceEvent\n             * @static\n             * @param {perfetto.protos.ICgroupSetupRootFtraceEvent} message CgroupSetupRootFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            CgroupSetupRootFtraceEvent.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.root != null && message.hasOwnProperty(\"root\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.root);\n                if (message.ssMask != null && message.hasOwnProperty(\"ssMask\"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.ssMask);\n                if (message.name != null && message.hasOwnProperty(\"name\"))\n                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.name);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified CgroupSetupRootFtraceEvent message, length delimited. Does not implicitly {@link perfetto.protos.CgroupSetupRootFtraceEvent.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof perfetto.protos.CgroupSetupRootFtraceEvent\n             * @static\n             * @param {perfetto.protos.ICgroupSetupRootFtraceEvent} message CgroupSetupRootFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            CgroupSetupRootFtraceEvent.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a CgroupSetupRootFtraceEvent message from the specified reader or buffer.\n             * @function decode\n             * @memberof perfetto.protos.CgroupSetupRootFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {perfetto.protos.CgroupSetupRootFtraceEvent} CgroupSetupRootFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            CgroupSetupRootFtraceEvent.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.CgroupSetupRootFtraceEvent();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.root = reader.int32();\n                        break;\n                    case 2:\n                        message.ssMask = reader.uint32();\n                        break;\n                    case 3:\n                        message.name = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a CgroupSetupRootFtraceEvent message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof perfetto.protos.CgroupSetupRootFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {perfetto.protos.CgroupSetupRootFtraceEvent} CgroupSetupRootFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            CgroupSetupRootFtraceEvent.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a CgroupSetupRootFtraceEvent message.\n             * @function verify\n             * @memberof perfetto.protos.CgroupSetupRootFtraceEvent\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            CgroupSetupRootFtraceEvent.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.root != null && message.hasOwnProperty(\"root\"))\n                    if (!$util.isInteger(message.root))\n                        return \"root: integer expected\";\n                if (message.ssMask != null && message.hasOwnProperty(\"ssMask\"))\n                    if (!$util.isInteger(message.ssMask))\n                        return \"ssMask: integer expected\";\n                if (message.name != null && message.hasOwnProperty(\"name\"))\n                    if (!$util.isString(message.name))\n                        return \"name: string expected\";\n                return null;\n            };\n\n            /**\n             * Creates a CgroupSetupRootFtraceEvent message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof perfetto.protos.CgroupSetupRootFtraceEvent\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {perfetto.protos.CgroupSetupRootFtraceEvent} CgroupSetupRootFtraceEvent\n             */\n            CgroupSetupRootFtraceEvent.fromObject = function fromObject(object) {\n                if (object instanceof $root.perfetto.protos.CgroupSetupRootFtraceEvent)\n                    return object;\n                var message = new $root.perfetto.protos.CgroupSetupRootFtraceEvent();\n                if (object.root != null)\n                    message.root = object.root | 0;\n                if (object.ssMask != null)\n                    message.ssMask = object.ssMask >>> 0;\n                if (object.name != null)\n                    message.name = String(object.name);\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a CgroupSetupRootFtraceEvent message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof perfetto.protos.CgroupSetupRootFtraceEvent\n             * @static\n             * @param {perfetto.protos.CgroupSetupRootFtraceEvent} message CgroupSetupRootFtraceEvent\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            CgroupSetupRootFtraceEvent.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.root = 0;\n                    object.ssMask = 0;\n                    object.name = \"\";\n                }\n                if (message.root != null && message.hasOwnProperty(\"root\"))\n                    object.root = message.root;\n                if (message.ssMask != null && message.hasOwnProperty(\"ssMask\"))\n                    object.ssMask = message.ssMask;\n                if (message.name != null && message.hasOwnProperty(\"name\"))\n                    object.name = message.name;\n                return object;\n            };\n\n            /**\n             * Converts this CgroupSetupRootFtraceEvent to JSON.\n             * @function toJSON\n             * @memberof perfetto.protos.CgroupSetupRootFtraceEvent\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            CgroupSetupRootFtraceEvent.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return CgroupSetupRootFtraceEvent;\n        })();\n\n        protos.CgroupTransferTasksFtraceEvent = (function() {\n\n            /**\n             * Properties of a CgroupTransferTasksFtraceEvent.\n             * @memberof perfetto.protos\n             * @interface ICgroupTransferTasksFtraceEvent\n             * @property {number|null} [dstRoot] CgroupTransferTasksFtraceEvent dstRoot\n             * @property {number|null} [dstId] CgroupTransferTasksFtraceEvent dstId\n             * @property {number|null} [pid] CgroupTransferTasksFtraceEvent pid\n             * @property {string|null} [comm] CgroupTransferTasksFtraceEvent comm\n             * @property {string|null} [cname] CgroupTransferTasksFtraceEvent cname\n             */\n\n            /**\n             * Constructs a new CgroupTransferTasksFtraceEvent.\n             * @memberof perfetto.protos\n             * @classdesc Represents a CgroupTransferTasksFtraceEvent.\n             * @implements ICgroupTransferTasksFtraceEvent\n             * @constructor\n             * @param {perfetto.protos.ICgroupTransferTasksFtraceEvent=} [properties] Properties to set\n             */\n            function CgroupTransferTasksFtraceEvent(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * CgroupTransferTasksFtraceEvent dstRoot.\n             * @member {number} dstRoot\n             * @memberof perfetto.protos.CgroupTransferTasksFtraceEvent\n             * @instance\n             */\n            CgroupTransferTasksFtraceEvent.prototype.dstRoot = 0;\n\n            /**\n             * CgroupTransferTasksFtraceEvent dstId.\n             * @member {number} dstId\n             * @memberof perfetto.protos.CgroupTransferTasksFtraceEvent\n             * @instance\n             */\n            CgroupTransferTasksFtraceEvent.prototype.dstId = 0;\n\n            /**\n             * CgroupTransferTasksFtraceEvent pid.\n             * @member {number} pid\n             * @memberof perfetto.protos.CgroupTransferTasksFtraceEvent\n             * @instance\n             */\n            CgroupTransferTasksFtraceEvent.prototype.pid = 0;\n\n            /**\n             * CgroupTransferTasksFtraceEvent comm.\n             * @member {string} comm\n             * @memberof perfetto.protos.CgroupTransferTasksFtraceEvent\n             * @instance\n             */\n            CgroupTransferTasksFtraceEvent.prototype.comm = \"\";\n\n            /**\n             * CgroupTransferTasksFtraceEvent cname.\n             * @member {string} cname\n             * @memberof perfetto.protos.CgroupTransferTasksFtraceEvent\n             * @instance\n             */\n            CgroupTransferTasksFtraceEvent.prototype.cname = \"\";\n\n            /**\n             * Creates a new CgroupTransferTasksFtraceEvent instance using the specified properties.\n             * @function create\n             * @memberof perfetto.protos.CgroupTransferTasksFtraceEvent\n             * @static\n             * @param {perfetto.protos.ICgroupTransferTasksFtraceEvent=} [properties] Properties to set\n             * @returns {perfetto.protos.CgroupTransferTasksFtraceEvent} CgroupTransferTasksFtraceEvent instance\n             */\n            CgroupTransferTasksFtraceEvent.create = function create(properties) {\n                return new CgroupTransferTasksFtraceEvent(properties);\n            };\n\n            /**\n             * Encodes the specified CgroupTransferTasksFtraceEvent message. Does not implicitly {@link perfetto.protos.CgroupTransferTasksFtraceEvent.verify|verify} messages.\n             * @function encode\n             * @memberof perfetto.protos.CgroupTransferTasksFtraceEvent\n             * @static\n             * @param {perfetto.protos.ICgroupTransferTasksFtraceEvent} message CgroupTransferTasksFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            CgroupTransferTasksFtraceEvent.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.dstRoot != null && message.hasOwnProperty(\"dstRoot\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.dstRoot);\n                if (message.dstId != null && message.hasOwnProperty(\"dstId\"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.dstId);\n                if (message.pid != null && message.hasOwnProperty(\"pid\"))\n                    writer.uint32(/* id 3, wireType 0 =*/24).int32(message.pid);\n                if (message.comm != null && message.hasOwnProperty(\"comm\"))\n                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.comm);\n                if (message.cname != null && message.hasOwnProperty(\"cname\"))\n                    writer.uint32(/* id 5, wireType 2 =*/42).string(message.cname);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified CgroupTransferTasksFtraceEvent message, length delimited. Does not implicitly {@link perfetto.protos.CgroupTransferTasksFtraceEvent.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof perfetto.protos.CgroupTransferTasksFtraceEvent\n             * @static\n             * @param {perfetto.protos.ICgroupTransferTasksFtraceEvent} message CgroupTransferTasksFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            CgroupTransferTasksFtraceEvent.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a CgroupTransferTasksFtraceEvent message from the specified reader or buffer.\n             * @function decode\n             * @memberof perfetto.protos.CgroupTransferTasksFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {perfetto.protos.CgroupTransferTasksFtraceEvent} CgroupTransferTasksFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            CgroupTransferTasksFtraceEvent.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.CgroupTransferTasksFtraceEvent();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.dstRoot = reader.int32();\n                        break;\n                    case 2:\n                        message.dstId = reader.int32();\n                        break;\n                    case 3:\n                        message.pid = reader.int32();\n                        break;\n                    case 4:\n                        message.comm = reader.string();\n                        break;\n                    case 5:\n                        message.cname = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a CgroupTransferTasksFtraceEvent message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof perfetto.protos.CgroupTransferTasksFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {perfetto.protos.CgroupTransferTasksFtraceEvent} CgroupTransferTasksFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            CgroupTransferTasksFtraceEvent.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a CgroupTransferTasksFtraceEvent message.\n             * @function verify\n             * @memberof perfetto.protos.CgroupTransferTasksFtraceEvent\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            CgroupTransferTasksFtraceEvent.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.dstRoot != null && message.hasOwnProperty(\"dstRoot\"))\n                    if (!$util.isInteger(message.dstRoot))\n                        return \"dstRoot: integer expected\";\n                if (message.dstId != null && message.hasOwnProperty(\"dstId\"))\n                    if (!$util.isInteger(message.dstId))\n                        return \"dstId: integer expected\";\n                if (message.pid != null && message.hasOwnProperty(\"pid\"))\n                    if (!$util.isInteger(message.pid))\n                        return \"pid: integer expected\";\n                if (message.comm != null && message.hasOwnProperty(\"comm\"))\n                    if (!$util.isString(message.comm))\n                        return \"comm: string expected\";\n                if (message.cname != null && message.hasOwnProperty(\"cname\"))\n                    if (!$util.isString(message.cname))\n                        return \"cname: string expected\";\n                return null;\n            };\n\n            /**\n             * Creates a CgroupTransferTasksFtraceEvent message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof perfetto.protos.CgroupTransferTasksFtraceEvent\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {perfetto.protos.CgroupTransferTasksFtraceEvent} CgroupTransferTasksFtraceEvent\n             */\n            CgroupTransferTasksFtraceEvent.fromObject = function fromObject(object) {\n                if (object instanceof $root.perfetto.protos.CgroupTransferTasksFtraceEvent)\n                    return object;\n                var message = new $root.perfetto.protos.CgroupTransferTasksFtraceEvent();\n                if (object.dstRoot != null)\n                    message.dstRoot = object.dstRoot | 0;\n                if (object.dstId != null)\n                    message.dstId = object.dstId | 0;\n                if (object.pid != null)\n                    message.pid = object.pid | 0;\n                if (object.comm != null)\n                    message.comm = String(object.comm);\n                if (object.cname != null)\n                    message.cname = String(object.cname);\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a CgroupTransferTasksFtraceEvent message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof perfetto.protos.CgroupTransferTasksFtraceEvent\n             * @static\n             * @param {perfetto.protos.CgroupTransferTasksFtraceEvent} message CgroupTransferTasksFtraceEvent\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            CgroupTransferTasksFtraceEvent.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.dstRoot = 0;\n                    object.dstId = 0;\n                    object.pid = 0;\n                    object.comm = \"\";\n                    object.cname = \"\";\n                }\n                if (message.dstRoot != null && message.hasOwnProperty(\"dstRoot\"))\n                    object.dstRoot = message.dstRoot;\n                if (message.dstId != null && message.hasOwnProperty(\"dstId\"))\n                    object.dstId = message.dstId;\n                if (message.pid != null && message.hasOwnProperty(\"pid\"))\n                    object.pid = message.pid;\n                if (message.comm != null && message.hasOwnProperty(\"comm\"))\n                    object.comm = message.comm;\n                if (message.cname != null && message.hasOwnProperty(\"cname\"))\n                    object.cname = message.cname;\n                return object;\n            };\n\n            /**\n             * Converts this CgroupTransferTasksFtraceEvent to JSON.\n             * @function toJSON\n             * @memberof perfetto.protos.CgroupTransferTasksFtraceEvent\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            CgroupTransferTasksFtraceEvent.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return CgroupTransferTasksFtraceEvent;\n        })();\n\n        protos.ClockSetRateFtraceEvent = (function() {\n\n            /**\n             * Properties of a ClockSetRateFtraceEvent.\n             * @memberof perfetto.protos\n             * @interface IClockSetRateFtraceEvent\n             * @property {string|null} [name] ClockSetRateFtraceEvent name\n             * @property {number|Long|null} [state] ClockSetRateFtraceEvent state\n             * @property {number|Long|null} [cpuId] ClockSetRateFtraceEvent cpuId\n             */\n\n            /**\n             * Constructs a new ClockSetRateFtraceEvent.\n             * @memberof perfetto.protos\n             * @classdesc Represents a ClockSetRateFtraceEvent.\n             * @implements IClockSetRateFtraceEvent\n             * @constructor\n             * @param {perfetto.protos.IClockSetRateFtraceEvent=} [properties] Properties to set\n             */\n            function ClockSetRateFtraceEvent(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * ClockSetRateFtraceEvent name.\n             * @member {string} name\n             * @memberof perfetto.protos.ClockSetRateFtraceEvent\n             * @instance\n             */\n            ClockSetRateFtraceEvent.prototype.name = \"\";\n\n            /**\n             * ClockSetRateFtraceEvent state.\n             * @member {number|Long} state\n             * @memberof perfetto.protos.ClockSetRateFtraceEvent\n             * @instance\n             */\n            ClockSetRateFtraceEvent.prototype.state = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n            /**\n             * ClockSetRateFtraceEvent cpuId.\n             * @member {number|Long} cpuId\n             * @memberof perfetto.protos.ClockSetRateFtraceEvent\n             * @instance\n             */\n            ClockSetRateFtraceEvent.prototype.cpuId = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n            /**\n             * Creates a new ClockSetRateFtraceEvent instance using the specified properties.\n             * @function create\n             * @memberof perfetto.protos.ClockSetRateFtraceEvent\n             * @static\n             * @param {perfetto.protos.IClockSetRateFtraceEvent=} [properties] Properties to set\n             * @returns {perfetto.protos.ClockSetRateFtraceEvent} ClockSetRateFtraceEvent instance\n             */\n            ClockSetRateFtraceEvent.create = function create(properties) {\n                return new ClockSetRateFtraceEvent(properties);\n            };\n\n            /**\n             * Encodes the specified ClockSetRateFtraceEvent message. Does not implicitly {@link perfetto.protos.ClockSetRateFtraceEvent.verify|verify} messages.\n             * @function encode\n             * @memberof perfetto.protos.ClockSetRateFtraceEvent\n             * @static\n             * @param {perfetto.protos.IClockSetRateFtraceEvent} message ClockSetRateFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            ClockSetRateFtraceEvent.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.name != null && message.hasOwnProperty(\"name\"))\n                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);\n                if (message.state != null && message.hasOwnProperty(\"state\"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.state);\n                if (message.cpuId != null && message.hasOwnProperty(\"cpuId\"))\n                    writer.uint32(/* id 3, wireType 0 =*/24).uint64(message.cpuId);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified ClockSetRateFtraceEvent message, length delimited. Does not implicitly {@link perfetto.protos.ClockSetRateFtraceEvent.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof perfetto.protos.ClockSetRateFtraceEvent\n             * @static\n             * @param {perfetto.protos.IClockSetRateFtraceEvent} message ClockSetRateFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            ClockSetRateFtraceEvent.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a ClockSetRateFtraceEvent message from the specified reader or buffer.\n             * @function decode\n             * @memberof perfetto.protos.ClockSetRateFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {perfetto.protos.ClockSetRateFtraceEvent} ClockSetRateFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            ClockSetRateFtraceEvent.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.ClockSetRateFtraceEvent();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.name = reader.string();\n                        break;\n                    case 2:\n                        message.state = reader.uint64();\n                        break;\n                    case 3:\n                        message.cpuId = reader.uint64();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a ClockSetRateFtraceEvent message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof perfetto.protos.ClockSetRateFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {perfetto.protos.ClockSetRateFtraceEvent} ClockSetRateFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            ClockSetRateFtraceEvent.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a ClockSetRateFtraceEvent message.\n             * @function verify\n             * @memberof perfetto.protos.ClockSetRateFtraceEvent\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            ClockSetRateFtraceEvent.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.name != null && message.hasOwnProperty(\"name\"))\n                    if (!$util.isString(message.name))\n                        return \"name: string expected\";\n                if (message.state != null && message.hasOwnProperty(\"state\"))\n                    if (!$util.isInteger(message.state) && !(message.state && $util.isInteger(message.state.low) && $util.isInteger(message.state.high)))\n                        return \"state: integer|Long expected\";\n                if (message.cpuId != null && message.hasOwnProperty(\"cpuId\"))\n                    if (!$util.isInteger(message.cpuId) && !(message.cpuId && $util.isInteger(message.cpuId.low) && $util.isInteger(message.cpuId.high)))\n                        return \"cpuId: integer|Long expected\";\n                return null;\n            };\n\n            /**\n             * Creates a ClockSetRateFtraceEvent message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof perfetto.protos.ClockSetRateFtraceEvent\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {perfetto.protos.ClockSetRateFtraceEvent} ClockSetRateFtraceEvent\n             */\n            ClockSetRateFtraceEvent.fromObject = function fromObject(object) {\n                if (object instanceof $root.perfetto.protos.ClockSetRateFtraceEvent)\n                    return object;\n                var message = new $root.perfetto.protos.ClockSetRateFtraceEvent();\n                if (object.name != null)\n                    message.name = String(object.name);\n                if (object.state != null)\n                    if ($util.Long)\n                        (message.state = $util.Long.fromValue(object.state)).unsigned = true;\n                    else if (typeof object.state === \"string\")\n                        message.state = parseInt(object.state, 10);\n                    else if (typeof object.state === \"number\")\n                        message.state = object.state;\n                    else if (typeof object.state === \"object\")\n                        message.state = new $util.LongBits(object.state.low >>> 0, object.state.high >>> 0).toNumber(true);\n                if (object.cpuId != null)\n                    if ($util.Long)\n                        (message.cpuId = $util.Long.fromValue(object.cpuId)).unsigned = true;\n                    else if (typeof object.cpuId === \"string\")\n                        message.cpuId = parseInt(object.cpuId, 10);\n                    else if (typeof object.cpuId === \"number\")\n                        message.cpuId = object.cpuId;\n                    else if (typeof object.cpuId === \"object\")\n                        message.cpuId = new $util.LongBits(object.cpuId.low >>> 0, object.cpuId.high >>> 0).toNumber(true);\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a ClockSetRateFtraceEvent message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof perfetto.protos.ClockSetRateFtraceEvent\n             * @static\n             * @param {perfetto.protos.ClockSetRateFtraceEvent} message ClockSetRateFtraceEvent\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            ClockSetRateFtraceEvent.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.name = \"\";\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, true);\n                        object.state = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.state = options.longs === String ? \"0\" : 0;\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, true);\n                        object.cpuId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.cpuId = options.longs === String ? \"0\" : 0;\n                }\n                if (message.name != null && message.hasOwnProperty(\"name\"))\n                    object.name = message.name;\n                if (message.state != null && message.hasOwnProperty(\"state\"))\n                    if (typeof message.state === \"number\")\n                        object.state = options.longs === String ? String(message.state) : message.state;\n                    else\n                        object.state = options.longs === String ? $util.Long.prototype.toString.call(message.state) : options.longs === Number ? new $util.LongBits(message.state.low >>> 0, message.state.high >>> 0).toNumber(true) : message.state;\n                if (message.cpuId != null && message.hasOwnProperty(\"cpuId\"))\n                    if (typeof message.cpuId === \"number\")\n                        object.cpuId = options.longs === String ? String(message.cpuId) : message.cpuId;\n                    else\n                        object.cpuId = options.longs === String ? $util.Long.prototype.toString.call(message.cpuId) : options.longs === Number ? new $util.LongBits(message.cpuId.low >>> 0, message.cpuId.high >>> 0).toNumber(true) : message.cpuId;\n                return object;\n            };\n\n            /**\n             * Converts this ClockSetRateFtraceEvent to JSON.\n             * @function toJSON\n             * @memberof perfetto.protos.ClockSetRateFtraceEvent\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            ClockSetRateFtraceEvent.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return ClockSetRateFtraceEvent;\n        })();\n\n        protos.CpufreqInteractiveAlreadyFtraceEvent = (function() {\n\n            /**\n             * Properties of a CpufreqInteractiveAlreadyFtraceEvent.\n             * @memberof perfetto.protos\n             * @interface ICpufreqInteractiveAlreadyFtraceEvent\n             * @property {number|Long|null} [cpuId] CpufreqInteractiveAlreadyFtraceEvent cpuId\n             * @property {number|Long|null} [load] CpufreqInteractiveAlreadyFtraceEvent load\n             * @property {number|Long|null} [curtarg] CpufreqInteractiveAlreadyFtraceEvent curtarg\n             * @property {number|Long|null} [curactual] CpufreqInteractiveAlreadyFtraceEvent curactual\n             * @property {number|Long|null} [newtarg] CpufreqInteractiveAlreadyFtraceEvent newtarg\n             */\n\n            /**\n             * Constructs a new CpufreqInteractiveAlreadyFtraceEvent.\n             * @memberof perfetto.protos\n             * @classdesc Represents a CpufreqInteractiveAlreadyFtraceEvent.\n             * @implements ICpufreqInteractiveAlreadyFtraceEvent\n             * @constructor\n             * @param {perfetto.protos.ICpufreqInteractiveAlreadyFtraceEvent=} [properties] Properties to set\n             */\n            function CpufreqInteractiveAlreadyFtraceEvent(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * CpufreqInteractiveAlreadyFtraceEvent cpuId.\n             * @member {number|Long} cpuId\n             * @memberof perfetto.protos.CpufreqInteractiveAlreadyFtraceEvent\n             * @instance\n             */\n            CpufreqInteractiveAlreadyFtraceEvent.prototype.cpuId = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n            /**\n             * CpufreqInteractiveAlreadyFtraceEvent load.\n             * @member {number|Long} load\n             * @memberof perfetto.protos.CpufreqInteractiveAlreadyFtraceEvent\n             * @instance\n             */\n            CpufreqInteractiveAlreadyFtraceEvent.prototype.load = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n            /**\n             * CpufreqInteractiveAlreadyFtraceEvent curtarg.\n             * @member {number|Long} curtarg\n             * @memberof perfetto.protos.CpufreqInteractiveAlreadyFtraceEvent\n             * @instance\n             */\n            CpufreqInteractiveAlreadyFtraceEvent.prototype.curtarg = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n            /**\n             * CpufreqInteractiveAlreadyFtraceEvent curactual.\n             * @member {number|Long} curactual\n             * @memberof perfetto.protos.CpufreqInteractiveAlreadyFtraceEvent\n             * @instance\n             */\n            CpufreqInteractiveAlreadyFtraceEvent.prototype.curactual = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n            /**\n             * CpufreqInteractiveAlreadyFtraceEvent newtarg.\n             * @member {number|Long} newtarg\n             * @memberof perfetto.protos.CpufreqInteractiveAlreadyFtraceEvent\n             * @instance\n             */\n            CpufreqInteractiveAlreadyFtraceEvent.prototype.newtarg = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n            /**\n             * Creates a new CpufreqInteractiveAlreadyFtraceEvent instance using the specified properties.\n             * @function create\n             * @memberof perfetto.protos.CpufreqInteractiveAlreadyFtraceEvent\n             * @static\n             * @param {perfetto.protos.ICpufreqInteractiveAlreadyFtraceEvent=} [properties] Properties to set\n             * @returns {perfetto.protos.CpufreqInteractiveAlreadyFtraceEvent} CpufreqInteractiveAlreadyFtraceEvent instance\n             */\n            CpufreqInteractiveAlreadyFtraceEvent.create = function create(properties) {\n                return new CpufreqInteractiveAlreadyFtraceEvent(properties);\n            };\n\n            /**\n             * Encodes the specified CpufreqInteractiveAlreadyFtraceEvent message. Does not implicitly {@link perfetto.protos.CpufreqInteractiveAlreadyFtraceEvent.verify|verify} messages.\n             * @function encode\n             * @memberof perfetto.protos.CpufreqInteractiveAlreadyFtraceEvent\n             * @static\n             * @param {perfetto.protos.ICpufreqInteractiveAlreadyFtraceEvent} message CpufreqInteractiveAlreadyFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            CpufreqInteractiveAlreadyFtraceEvent.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.cpuId != null && message.hasOwnProperty(\"cpuId\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.cpuId);\n                if (message.load != null && message.hasOwnProperty(\"load\"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.load);\n                if (message.curtarg != null && message.hasOwnProperty(\"curtarg\"))\n                    writer.uint32(/* id 3, wireType 0 =*/24).uint64(message.curtarg);\n                if (message.curactual != null && message.hasOwnProperty(\"curactual\"))\n                    writer.uint32(/* id 4, wireType 0 =*/32).uint64(message.curactual);\n                if (message.newtarg != null && message.hasOwnProperty(\"newtarg\"))\n                    writer.uint32(/* id 5, wireType 0 =*/40).uint64(message.newtarg);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified CpufreqInteractiveAlreadyFtraceEvent message, length delimited. Does not implicitly {@link perfetto.protos.CpufreqInteractiveAlreadyFtraceEvent.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof perfetto.protos.CpufreqInteractiveAlreadyFtraceEvent\n             * @static\n             * @param {perfetto.protos.ICpufreqInteractiveAlreadyFtraceEvent} message CpufreqInteractiveAlreadyFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            CpufreqInteractiveAlreadyFtraceEvent.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a CpufreqInteractiveAlreadyFtraceEvent message from the specified reader or buffer.\n             * @function decode\n             * @memberof perfetto.protos.CpufreqInteractiveAlreadyFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {perfetto.protos.CpufreqInteractiveAlreadyFtraceEvent} CpufreqInteractiveAlreadyFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            CpufreqInteractiveAlreadyFtraceEvent.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.CpufreqInteractiveAlreadyFtraceEvent();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.cpuId = reader.uint64();\n                        break;\n                    case 2:\n                        message.load = reader.uint64();\n                        break;\n                    case 3:\n                        message.curtarg = reader.uint64();\n                        break;\n                    case 4:\n                        message.curactual = reader.uint64();\n                        break;\n                    case 5:\n                        message.newtarg = reader.uint64();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a CpufreqInteractiveAlreadyFtraceEvent message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof perfetto.protos.CpufreqInteractiveAlreadyFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {perfetto.protos.CpufreqInteractiveAlreadyFtraceEvent} CpufreqInteractiveAlreadyFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            CpufreqInteractiveAlreadyFtraceEvent.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a CpufreqInteractiveAlreadyFtraceEvent message.\n             * @function verify\n             * @memberof perfetto.protos.CpufreqInteractiveAlreadyFtraceEvent\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            CpufreqInteractiveAlreadyFtraceEvent.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.cpuId != null && message.hasOwnProperty(\"cpuId\"))\n                    if (!$util.isInteger(message.cpuId) && !(message.cpuId && $util.isInteger(message.cpuId.low) && $util.isInteger(message.cpuId.high)))\n                        return \"cpuId: integer|Long expected\";\n                if (message.load != null && message.hasOwnProperty(\"load\"))\n                    if (!$util.isInteger(message.load) && !(message.load && $util.isInteger(message.load.low) && $util.isInteger(message.load.high)))\n                        return \"load: integer|Long expected\";\n                if (message.curtarg != null && message.hasOwnProperty(\"curtarg\"))\n                    if (!$util.isInteger(message.curtarg) && !(message.curtarg && $util.isInteger(message.curtarg.low) && $util.isInteger(message.curtarg.high)))\n                        return \"curtarg: integer|Long expected\";\n                if (message.curactual != null && message.hasOwnProperty(\"curactual\"))\n                    if (!$util.isInteger(message.curactual) && !(message.curactual && $util.isInteger(message.curactual.low) && $util.isInteger(message.curactual.high)))\n                        return \"curactual: integer|Long expected\";\n                if (message.newtarg != null && message.hasOwnProperty(\"newtarg\"))\n                    if (!$util.isInteger(message.newtarg) && !(message.newtarg && $util.isInteger(message.newtarg.low) && $util.isInteger(message.newtarg.high)))\n                        return \"newtarg: integer|Long expected\";\n                return null;\n            };\n\n            /**\n             * Creates a CpufreqInteractiveAlreadyFtraceEvent message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof perfetto.protos.CpufreqInteractiveAlreadyFtraceEvent\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {perfetto.protos.CpufreqInteractiveAlreadyFtraceEvent} CpufreqInteractiveAlreadyFtraceEvent\n             */\n            CpufreqInteractiveAlreadyFtraceEvent.fromObject = function fromObject(object) {\n                if (object instanceof $root.perfetto.protos.CpufreqInteractiveAlreadyFtraceEvent)\n                    return object;\n                var message = new $root.perfetto.protos.CpufreqInteractiveAlreadyFtraceEvent();\n                if (object.cpuId != null)\n                    if ($util.Long)\n                        (message.cpuId = $util.Long.fromValue(object.cpuId)).unsigned = true;\n                    else if (typeof object.cpuId === \"string\")\n                        message.cpuId = parseInt(object.cpuId, 10);\n                    else if (typeof object.cpuId === \"number\")\n                        message.cpuId = object.cpuId;\n                    else if (typeof object.cpuId === \"object\")\n                        message.cpuId = new $util.LongBits(object.cpuId.low >>> 0, object.cpuId.high >>> 0).toNumber(true);\n                if (object.load != null)\n                    if ($util.Long)\n                        (message.load = $util.Long.fromValue(object.load)).unsigned = true;\n                    else if (typeof object.load === \"string\")\n                        message.load = parseInt(object.load, 10);\n                    else if (typeof object.load === \"number\")\n                        message.load = object.load;\n                    else if (typeof object.load === \"object\")\n                        message.load = new $util.LongBits(object.load.low >>> 0, object.load.high >>> 0).toNumber(true);\n                if (object.curtarg != null)\n                    if ($util.Long)\n                        (message.curtarg = $util.Long.fromValue(object.curtarg)).unsigned = true;\n                    else if (typeof object.curtarg === \"string\")\n                        message.curtarg = parseInt(object.curtarg, 10);\n                    else if (typeof object.curtarg === \"number\")\n                        message.curtarg = object.curtarg;\n                    else if (typeof object.curtarg === \"object\")\n                        message.curtarg = new $util.LongBits(object.curtarg.low >>> 0, object.curtarg.high >>> 0).toNumber(true);\n                if (object.curactual != null)\n                    if ($util.Long)\n                        (message.curactual = $util.Long.fromValue(object.curactual)).unsigned = true;\n                    else if (typeof object.curactual === \"string\")\n                        message.curactual = parseInt(object.curactual, 10);\n                    else if (typeof object.curactual === \"number\")\n                        message.curactual = object.curactual;\n                    else if (typeof object.curactual === \"object\")\n                        message.curactual = new $util.LongBits(object.curactual.low >>> 0, object.curactual.high >>> 0).toNumber(true);\n                if (object.newtarg != null)\n                    if ($util.Long)\n                        (message.newtarg = $util.Long.fromValue(object.newtarg)).unsigned = true;\n                    else if (typeof object.newtarg === \"string\")\n                        message.newtarg = parseInt(object.newtarg, 10);\n                    else if (typeof object.newtarg === \"number\")\n                        message.newtarg = object.newtarg;\n                    else if (typeof object.newtarg === \"object\")\n                        message.newtarg = new $util.LongBits(object.newtarg.low >>> 0, object.newtarg.high >>> 0).toNumber(true);\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a CpufreqInteractiveAlreadyFtraceEvent message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof perfetto.protos.CpufreqInteractiveAlreadyFtraceEvent\n             * @static\n             * @param {perfetto.protos.CpufreqInteractiveAlreadyFtraceEvent} message CpufreqInteractiveAlreadyFtraceEvent\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            CpufreqInteractiveAlreadyFtraceEvent.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, true);\n                        object.cpuId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.cpuId = options.longs === String ? \"0\" : 0;\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, true);\n                        object.load = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.load = options.longs === String ? \"0\" : 0;\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, true);\n                        object.curtarg = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.curtarg = options.longs === String ? \"0\" : 0;\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, true);\n                        object.curactual = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.curactual = options.longs === String ? \"0\" : 0;\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, true);\n                        object.newtarg = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.newtarg = options.longs === String ? \"0\" : 0;\n                }\n                if (message.cpuId != null && message.hasOwnProperty(\"cpuId\"))\n                    if (typeof message.cpuId === \"number\")\n                        object.cpuId = options.longs === String ? String(message.cpuId) : message.cpuId;\n                    else\n                        object.cpuId = options.longs === String ? $util.Long.prototype.toString.call(message.cpuId) : options.longs === Number ? new $util.LongBits(message.cpuId.low >>> 0, message.cpuId.high >>> 0).toNumber(true) : message.cpuId;\n                if (message.load != null && message.hasOwnProperty(\"load\"))\n                    if (typeof message.load === \"number\")\n                        object.load = options.longs === String ? String(message.load) : message.load;\n                    else\n                        object.load = options.longs === String ? $util.Long.prototype.toString.call(message.load) : options.longs === Number ? new $util.LongBits(message.load.low >>> 0, message.load.high >>> 0).toNumber(true) : message.load;\n                if (message.curtarg != null && message.hasOwnProperty(\"curtarg\"))\n                    if (typeof message.curtarg === \"number\")\n                        object.curtarg = options.longs === String ? String(message.curtarg) : message.curtarg;\n                    else\n                        object.curtarg = options.longs === String ? $util.Long.prototype.toString.call(message.curtarg) : options.longs === Number ? new $util.LongBits(message.curtarg.low >>> 0, message.curtarg.high >>> 0).toNumber(true) : message.curtarg;\n                if (message.curactual != null && message.hasOwnProperty(\"curactual\"))\n                    if (typeof message.curactual === \"number\")\n                        object.curactual = options.longs === String ? String(message.curactual) : message.curactual;\n                    else\n                        object.curactual = options.longs === String ? $util.Long.prototype.toString.call(message.curactual) : options.longs === Number ? new $util.LongBits(message.curactual.low >>> 0, message.curactual.high >>> 0).toNumber(true) : message.curactual;\n                if (message.newtarg != null && message.hasOwnProperty(\"newtarg\"))\n                    if (typeof message.newtarg === \"number\")\n                        object.newtarg = options.longs === String ? String(message.newtarg) : message.newtarg;\n                    else\n                        object.newtarg = options.longs === String ? $util.Long.prototype.toString.call(message.newtarg) : options.longs === Number ? new $util.LongBits(message.newtarg.low >>> 0, message.newtarg.high >>> 0).toNumber(true) : message.newtarg;\n                return object;\n            };\n\n            /**\n             * Converts this CpufreqInteractiveAlreadyFtraceEvent to JSON.\n             * @function toJSON\n             * @memberof perfetto.protos.CpufreqInteractiveAlreadyFtraceEvent\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            CpufreqInteractiveAlreadyFtraceEvent.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return CpufreqInteractiveAlreadyFtraceEvent;\n        })();\n\n        protos.CpufreqInteractiveBoostFtraceEvent = (function() {\n\n            /**\n             * Properties of a CpufreqInteractiveBoostFtraceEvent.\n             * @memberof perfetto.protos\n             * @interface ICpufreqInteractiveBoostFtraceEvent\n             * @property {string|null} [s] CpufreqInteractiveBoostFtraceEvent s\n             */\n\n            /**\n             * Constructs a new CpufreqInteractiveBoostFtraceEvent.\n             * @memberof perfetto.protos\n             * @classdesc Represents a CpufreqInteractiveBoostFtraceEvent.\n             * @implements ICpufreqInteractiveBoostFtraceEvent\n             * @constructor\n             * @param {perfetto.protos.ICpufreqInteractiveBoostFtraceEvent=} [properties] Properties to set\n             */\n            function CpufreqInteractiveBoostFtraceEvent(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * CpufreqInteractiveBoostFtraceEvent s.\n             * @member {string} s\n             * @memberof perfetto.protos.CpufreqInteractiveBoostFtraceEvent\n             * @instance\n             */\n            CpufreqInteractiveBoostFtraceEvent.prototype.s = \"\";\n\n            /**\n             * Creates a new CpufreqInteractiveBoostFtraceEvent instance using the specified properties.\n             * @function create\n             * @memberof perfetto.protos.CpufreqInteractiveBoostFtraceEvent\n             * @static\n             * @param {perfetto.protos.ICpufreqInteractiveBoostFtraceEvent=} [properties] Properties to set\n             * @returns {perfetto.protos.CpufreqInteractiveBoostFtraceEvent} CpufreqInteractiveBoostFtraceEvent instance\n             */\n            CpufreqInteractiveBoostFtraceEvent.create = function create(properties) {\n                return new CpufreqInteractiveBoostFtraceEvent(properties);\n            };\n\n            /**\n             * Encodes the specified CpufreqInteractiveBoostFtraceEvent message. Does not implicitly {@link perfetto.protos.CpufreqInteractiveBoostFtraceEvent.verify|verify} messages.\n             * @function encode\n             * @memberof perfetto.protos.CpufreqInteractiveBoostFtraceEvent\n             * @static\n             * @param {perfetto.protos.ICpufreqInteractiveBoostFtraceEvent} message CpufreqInteractiveBoostFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            CpufreqInteractiveBoostFtraceEvent.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.s != null && message.hasOwnProperty(\"s\"))\n                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.s);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified CpufreqInteractiveBoostFtraceEvent message, length delimited. Does not implicitly {@link perfetto.protos.CpufreqInteractiveBoostFtraceEvent.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof perfetto.protos.CpufreqInteractiveBoostFtraceEvent\n             * @static\n             * @param {perfetto.protos.ICpufreqInteractiveBoostFtraceEvent} message CpufreqInteractiveBoostFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            CpufreqInteractiveBoostFtraceEvent.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a CpufreqInteractiveBoostFtraceEvent message from the specified reader or buffer.\n             * @function decode\n             * @memberof perfetto.protos.CpufreqInteractiveBoostFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {perfetto.protos.CpufreqInteractiveBoostFtraceEvent} CpufreqInteractiveBoostFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            CpufreqInteractiveBoostFtraceEvent.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.CpufreqInteractiveBoostFtraceEvent();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.s = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a CpufreqInteractiveBoostFtraceEvent message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof perfetto.protos.CpufreqInteractiveBoostFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {perfetto.protos.CpufreqInteractiveBoostFtraceEvent} CpufreqInteractiveBoostFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            CpufreqInteractiveBoostFtraceEvent.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a CpufreqInteractiveBoostFtraceEvent message.\n             * @function verify\n             * @memberof perfetto.protos.CpufreqInteractiveBoostFtraceEvent\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            CpufreqInteractiveBoostFtraceEvent.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.s != null && message.hasOwnProperty(\"s\"))\n                    if (!$util.isString(message.s))\n                        return \"s: string expected\";\n                return null;\n            };\n\n            /**\n             * Creates a CpufreqInteractiveBoostFtraceEvent message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof perfetto.protos.CpufreqInteractiveBoostFtraceEvent\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {perfetto.protos.CpufreqInteractiveBoostFtraceEvent} CpufreqInteractiveBoostFtraceEvent\n             */\n            CpufreqInteractiveBoostFtraceEvent.fromObject = function fromObject(object) {\n                if (object instanceof $root.perfetto.protos.CpufreqInteractiveBoostFtraceEvent)\n                    return object;\n                var message = new $root.perfetto.protos.CpufreqInteractiveBoostFtraceEvent();\n                if (object.s != null)\n                    message.s = String(object.s);\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a CpufreqInteractiveBoostFtraceEvent message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof perfetto.protos.CpufreqInteractiveBoostFtraceEvent\n             * @static\n             * @param {perfetto.protos.CpufreqInteractiveBoostFtraceEvent} message CpufreqInteractiveBoostFtraceEvent\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            CpufreqInteractiveBoostFtraceEvent.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults)\n                    object.s = \"\";\n                if (message.s != null && message.hasOwnProperty(\"s\"))\n                    object.s = message.s;\n                return object;\n            };\n\n            /**\n             * Converts this CpufreqInteractiveBoostFtraceEvent to JSON.\n             * @function toJSON\n             * @memberof perfetto.protos.CpufreqInteractiveBoostFtraceEvent\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            CpufreqInteractiveBoostFtraceEvent.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return CpufreqInteractiveBoostFtraceEvent;\n        })();\n\n        protos.CpufreqInteractiveNotyetFtraceEvent = (function() {\n\n            /**\n             * Properties of a CpufreqInteractiveNotyetFtraceEvent.\n             * @memberof perfetto.protos\n             * @interface ICpufreqInteractiveNotyetFtraceEvent\n             * @property {number|Long|null} [cpuId] CpufreqInteractiveNotyetFtraceEvent cpuId\n             * @property {number|Long|null} [load] CpufreqInteractiveNotyetFtraceEvent load\n             * @property {number|Long|null} [curtarg] CpufreqInteractiveNotyetFtraceEvent curtarg\n             * @property {number|Long|null} [curactual] CpufreqInteractiveNotyetFtraceEvent curactual\n             * @property {number|Long|null} [newtarg] CpufreqInteractiveNotyetFtraceEvent newtarg\n             */\n\n            /**\n             * Constructs a new CpufreqInteractiveNotyetFtraceEvent.\n             * @memberof perfetto.protos\n             * @classdesc Represents a CpufreqInteractiveNotyetFtraceEvent.\n             * @implements ICpufreqInteractiveNotyetFtraceEvent\n             * @constructor\n             * @param {perfetto.protos.ICpufreqInteractiveNotyetFtraceEvent=} [properties] Properties to set\n             */\n            function CpufreqInteractiveNotyetFtraceEvent(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * CpufreqInteractiveNotyetFtraceEvent cpuId.\n             * @member {number|Long} cpuId\n             * @memberof perfetto.protos.CpufreqInteractiveNotyetFtraceEvent\n             * @instance\n             */\n            CpufreqInteractiveNotyetFtraceEvent.prototype.cpuId = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n            /**\n             * CpufreqInteractiveNotyetFtraceEvent load.\n             * @member {number|Long} load\n             * @memberof perfetto.protos.CpufreqInteractiveNotyetFtraceEvent\n             * @instance\n             */\n            CpufreqInteractiveNotyetFtraceEvent.prototype.load = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n            /**\n             * CpufreqInteractiveNotyetFtraceEvent curtarg.\n             * @member {number|Long} curtarg\n             * @memberof perfetto.protos.CpufreqInteractiveNotyetFtraceEvent\n             * @instance\n             */\n            CpufreqInteractiveNotyetFtraceEvent.prototype.curtarg = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n            /**\n             * CpufreqInteractiveNotyetFtraceEvent curactual.\n             * @member {number|Long} curactual\n             * @memberof perfetto.protos.CpufreqInteractiveNotyetFtraceEvent\n             * @instance\n             */\n            CpufreqInteractiveNotyetFtraceEvent.prototype.curactual = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n            /**\n             * CpufreqInteractiveNotyetFtraceEvent newtarg.\n             * @member {number|Long} newtarg\n             * @memberof perfetto.protos.CpufreqInteractiveNotyetFtraceEvent\n             * @instance\n             */\n            CpufreqInteractiveNotyetFtraceEvent.prototype.newtarg = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n            /**\n             * Creates a new CpufreqInteractiveNotyetFtraceEvent instance using the specified properties.\n             * @function create\n             * @memberof perfetto.protos.CpufreqInteractiveNotyetFtraceEvent\n             * @static\n             * @param {perfetto.protos.ICpufreqInteractiveNotyetFtraceEvent=} [properties] Properties to set\n             * @returns {perfetto.protos.CpufreqInteractiveNotyetFtraceEvent} CpufreqInteractiveNotyetFtraceEvent instance\n             */\n            CpufreqInteractiveNotyetFtraceEvent.create = function create(properties) {\n                return new CpufreqInteractiveNotyetFtraceEvent(properties);\n            };\n\n            /**\n             * Encodes the specified CpufreqInteractiveNotyetFtraceEvent message. Does not implicitly {@link perfetto.protos.CpufreqInteractiveNotyetFtraceEvent.verify|verify} messages.\n             * @function encode\n             * @memberof perfetto.protos.CpufreqInteractiveNotyetFtraceEvent\n             * @static\n             * @param {perfetto.protos.ICpufreqInteractiveNotyetFtraceEvent} message CpufreqInteractiveNotyetFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            CpufreqInteractiveNotyetFtraceEvent.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.cpuId != null && message.hasOwnProperty(\"cpuId\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.cpuId);\n                if (message.load != null && message.hasOwnProperty(\"load\"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.load);\n                if (message.curtarg != null && message.hasOwnProperty(\"curtarg\"))\n                    writer.uint32(/* id 3, wireType 0 =*/24).uint64(message.curtarg);\n                if (message.curactual != null && message.hasOwnProperty(\"curactual\"))\n                    writer.uint32(/* id 4, wireType 0 =*/32).uint64(message.curactual);\n                if (message.newtarg != null && message.hasOwnProperty(\"newtarg\"))\n                    writer.uint32(/* id 5, wireType 0 =*/40).uint64(message.newtarg);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified CpufreqInteractiveNotyetFtraceEvent message, length delimited. Does not implicitly {@link perfetto.protos.CpufreqInteractiveNotyetFtraceEvent.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof perfetto.protos.CpufreqInteractiveNotyetFtraceEvent\n             * @static\n             * @param {perfetto.protos.ICpufreqInteractiveNotyetFtraceEvent} message CpufreqInteractiveNotyetFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            CpufreqInteractiveNotyetFtraceEvent.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a CpufreqInteractiveNotyetFtraceEvent message from the specified reader or buffer.\n             * @function decode\n             * @memberof perfetto.protos.CpufreqInteractiveNotyetFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {perfetto.protos.CpufreqInteractiveNotyetFtraceEvent} CpufreqInteractiveNotyetFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            CpufreqInteractiveNotyetFtraceEvent.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.CpufreqInteractiveNotyetFtraceEvent();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.cpuId = reader.uint64();\n                        break;\n                    case 2:\n                        message.load = reader.uint64();\n                        break;\n                    case 3:\n                        message.curtarg = reader.uint64();\n                        break;\n                    case 4:\n                        message.curactual = reader.uint64();\n                        break;\n                    case 5:\n                        message.newtarg = reader.uint64();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a CpufreqInteractiveNotyetFtraceEvent message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof perfetto.protos.CpufreqInteractiveNotyetFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {perfetto.protos.CpufreqInteractiveNotyetFtraceEvent} CpufreqInteractiveNotyetFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            CpufreqInteractiveNotyetFtraceEvent.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a CpufreqInteractiveNotyetFtraceEvent message.\n             * @function verify\n             * @memberof perfetto.protos.CpufreqInteractiveNotyetFtraceEvent\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            CpufreqInteractiveNotyetFtraceEvent.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.cpuId != null && message.hasOwnProperty(\"cpuId\"))\n                    if (!$util.isInteger(message.cpuId) && !(message.cpuId && $util.isInteger(message.cpuId.low) && $util.isInteger(message.cpuId.high)))\n                        return \"cpuId: integer|Long expected\";\n                if (message.load != null && message.hasOwnProperty(\"load\"))\n                    if (!$util.isInteger(message.load) && !(message.load && $util.isInteger(message.load.low) && $util.isInteger(message.load.high)))\n                        return \"load: integer|Long expected\";\n                if (message.curtarg != null && message.hasOwnProperty(\"curtarg\"))\n                    if (!$util.isInteger(message.curtarg) && !(message.curtarg && $util.isInteger(message.curtarg.low) && $util.isInteger(message.curtarg.high)))\n                        return \"curtarg: integer|Long expected\";\n                if (message.curactual != null && message.hasOwnProperty(\"curactual\"))\n                    if (!$util.isInteger(message.curactual) && !(message.curactual && $util.isInteger(message.curactual.low) && $util.isInteger(message.curactual.high)))\n                        return \"curactual: integer|Long expected\";\n                if (message.newtarg != null && message.hasOwnProperty(\"newtarg\"))\n                    if (!$util.isInteger(message.newtarg) && !(message.newtarg && $util.isInteger(message.newtarg.low) && $util.isInteger(message.newtarg.high)))\n                        return \"newtarg: integer|Long expected\";\n                return null;\n            };\n\n            /**\n             * Creates a CpufreqInteractiveNotyetFtraceEvent message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof perfetto.protos.CpufreqInteractiveNotyetFtraceEvent\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {perfetto.protos.CpufreqInteractiveNotyetFtraceEvent} CpufreqInteractiveNotyetFtraceEvent\n             */\n            CpufreqInteractiveNotyetFtraceEvent.fromObject = function fromObject(object) {\n                if (object instanceof $root.perfetto.protos.CpufreqInteractiveNotyetFtraceEvent)\n                    return object;\n                var message = new $root.perfetto.protos.CpufreqInteractiveNotyetFtraceEvent();\n                if (object.cpuId != null)\n                    if ($util.Long)\n                        (message.cpuId = $util.Long.fromValue(object.cpuId)).unsigned = true;\n                    else if (typeof object.cpuId === \"string\")\n                        message.cpuId = parseInt(object.cpuId, 10);\n                    else if (typeof object.cpuId === \"number\")\n                        message.cpuId = object.cpuId;\n                    else if (typeof object.cpuId === \"object\")\n                        message.cpuId = new $util.LongBits(object.cpuId.low >>> 0, object.cpuId.high >>> 0).toNumber(true);\n                if (object.load != null)\n                    if ($util.Long)\n                        (message.load = $util.Long.fromValue(object.load)).unsigned = true;\n                    else if (typeof object.load === \"string\")\n                        message.load = parseInt(object.load, 10);\n                    else if (typeof object.load === \"number\")\n                        message.load = object.load;\n                    else if (typeof object.load === \"object\")\n                        message.load = new $util.LongBits(object.load.low >>> 0, object.load.high >>> 0).toNumber(true);\n                if (object.curtarg != null)\n                    if ($util.Long)\n                        (message.curtarg = $util.Long.fromValue(object.curtarg)).unsigned = true;\n                    else if (typeof object.curtarg === \"string\")\n                        message.curtarg = parseInt(object.curtarg, 10);\n                    else if (typeof object.curtarg === \"number\")\n                        message.curtarg = object.curtarg;\n                    else if (typeof object.curtarg === \"object\")\n                        message.curtarg = new $util.LongBits(object.curtarg.low >>> 0, object.curtarg.high >>> 0).toNumber(true);\n                if (object.curactual != null)\n                    if ($util.Long)\n                        (message.curactual = $util.Long.fromValue(object.curactual)).unsigned = true;\n                    else if (typeof object.curactual === \"string\")\n                        message.curactual = parseInt(object.curactual, 10);\n                    else if (typeof object.curactual === \"number\")\n                        message.curactual = object.curactual;\n                    else if (typeof object.curactual === \"object\")\n                        message.curactual = new $util.LongBits(object.curactual.low >>> 0, object.curactual.high >>> 0).toNumber(true);\n                if (object.newtarg != null)\n                    if ($util.Long)\n                        (message.newtarg = $util.Long.fromValue(object.newtarg)).unsigned = true;\n                    else if (typeof object.newtarg === \"string\")\n                        message.newtarg = parseInt(object.newtarg, 10);\n                    else if (typeof object.newtarg === \"number\")\n                        message.newtarg = object.newtarg;\n                    else if (typeof object.newtarg === \"object\")\n                        message.newtarg = new $util.LongBits(object.newtarg.low >>> 0, object.newtarg.high >>> 0).toNumber(true);\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a CpufreqInteractiveNotyetFtraceEvent message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof perfetto.protos.CpufreqInteractiveNotyetFtraceEvent\n             * @static\n             * @param {perfetto.protos.CpufreqInteractiveNotyetFtraceEvent} message CpufreqInteractiveNotyetFtraceEvent\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            CpufreqInteractiveNotyetFtraceEvent.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, true);\n                        object.cpuId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.cpuId = options.longs === String ? \"0\" : 0;\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, true);\n                        object.load = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.load = options.longs === String ? \"0\" : 0;\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, true);\n                        object.curtarg = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.curtarg = options.longs === String ? \"0\" : 0;\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, true);\n                        object.curactual = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.curactual = options.longs === String ? \"0\" : 0;\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, true);\n                        object.newtarg = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.newtarg = options.longs === String ? \"0\" : 0;\n                }\n                if (message.cpuId != null && message.hasOwnProperty(\"cpuId\"))\n                    if (typeof message.cpuId === \"number\")\n                        object.cpuId = options.longs === String ? String(message.cpuId) : message.cpuId;\n                    else\n                        object.cpuId = options.longs === String ? $util.Long.prototype.toString.call(message.cpuId) : options.longs === Number ? new $util.LongBits(message.cpuId.low >>> 0, message.cpuId.high >>> 0).toNumber(true) : message.cpuId;\n                if (message.load != null && message.hasOwnProperty(\"load\"))\n                    if (typeof message.load === \"number\")\n                        object.load = options.longs === String ? String(message.load) : message.load;\n                    else\n                        object.load = options.longs === String ? $util.Long.prototype.toString.call(message.load) : options.longs === Number ? new $util.LongBits(message.load.low >>> 0, message.load.high >>> 0).toNumber(true) : message.load;\n                if (message.curtarg != null && message.hasOwnProperty(\"curtarg\"))\n                    if (typeof message.curtarg === \"number\")\n                        object.curtarg = options.longs === String ? String(message.curtarg) : message.curtarg;\n                    else\n                        object.curtarg = options.longs === String ? $util.Long.prototype.toString.call(message.curtarg) : options.longs === Number ? new $util.LongBits(message.curtarg.low >>> 0, message.curtarg.high >>> 0).toNumber(true) : message.curtarg;\n                if (message.curactual != null && message.hasOwnProperty(\"curactual\"))\n                    if (typeof message.curactual === \"number\")\n                        object.curactual = options.longs === String ? String(message.curactual) : message.curactual;\n                    else\n                        object.curactual = options.longs === String ? $util.Long.prototype.toString.call(message.curactual) : options.longs === Number ? new $util.LongBits(message.curactual.low >>> 0, message.curactual.high >>> 0).toNumber(true) : message.curactual;\n                if (message.newtarg != null && message.hasOwnProperty(\"newtarg\"))\n                    if (typeof message.newtarg === \"number\")\n                        object.newtarg = options.longs === String ? String(message.newtarg) : message.newtarg;\n                    else\n                        object.newtarg = options.longs === String ? $util.Long.prototype.toString.call(message.newtarg) : options.longs === Number ? new $util.LongBits(message.newtarg.low >>> 0, message.newtarg.high >>> 0).toNumber(true) : message.newtarg;\n                return object;\n            };\n\n            /**\n             * Converts this CpufreqInteractiveNotyetFtraceEvent to JSON.\n             * @function toJSON\n             * @memberof perfetto.protos.CpufreqInteractiveNotyetFtraceEvent\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            CpufreqInteractiveNotyetFtraceEvent.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return CpufreqInteractiveNotyetFtraceEvent;\n        })();\n\n        protos.CpufreqInteractiveSetspeedFtraceEvent = (function() {\n\n            /**\n             * Properties of a CpufreqInteractiveSetspeedFtraceEvent.\n             * @memberof perfetto.protos\n             * @interface ICpufreqInteractiveSetspeedFtraceEvent\n             * @property {number|null} [cpuId] CpufreqInteractiveSetspeedFtraceEvent cpuId\n             * @property {number|Long|null} [targfreq] CpufreqInteractiveSetspeedFtraceEvent targfreq\n             * @property {number|Long|null} [actualfreq] CpufreqInteractiveSetspeedFtraceEvent actualfreq\n             */\n\n            /**\n             * Constructs a new CpufreqInteractiveSetspeedFtraceEvent.\n             * @memberof perfetto.protos\n             * @classdesc Represents a CpufreqInteractiveSetspeedFtraceEvent.\n             * @implements ICpufreqInteractiveSetspeedFtraceEvent\n             * @constructor\n             * @param {perfetto.protos.ICpufreqInteractiveSetspeedFtraceEvent=} [properties] Properties to set\n             */\n            function CpufreqInteractiveSetspeedFtraceEvent(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * CpufreqInteractiveSetspeedFtraceEvent cpuId.\n             * @member {number} cpuId\n             * @memberof perfetto.protos.CpufreqInteractiveSetspeedFtraceEvent\n             * @instance\n             */\n            CpufreqInteractiveSetspeedFtraceEvent.prototype.cpuId = 0;\n\n            /**\n             * CpufreqInteractiveSetspeedFtraceEvent targfreq.\n             * @member {number|Long} targfreq\n             * @memberof perfetto.protos.CpufreqInteractiveSetspeedFtraceEvent\n             * @instance\n             */\n            CpufreqInteractiveSetspeedFtraceEvent.prototype.targfreq = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n            /**\n             * CpufreqInteractiveSetspeedFtraceEvent actualfreq.\n             * @member {number|Long} actualfreq\n             * @memberof perfetto.protos.CpufreqInteractiveSetspeedFtraceEvent\n             * @instance\n             */\n            CpufreqInteractiveSetspeedFtraceEvent.prototype.actualfreq = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n            /**\n             * Creates a new CpufreqInteractiveSetspeedFtraceEvent instance using the specified properties.\n             * @function create\n             * @memberof perfetto.protos.CpufreqInteractiveSetspeedFtraceEvent\n             * @static\n             * @param {perfetto.protos.ICpufreqInteractiveSetspeedFtraceEvent=} [properties] Properties to set\n             * @returns {perfetto.protos.CpufreqInteractiveSetspeedFtraceEvent} CpufreqInteractiveSetspeedFtraceEvent instance\n             */\n            CpufreqInteractiveSetspeedFtraceEvent.create = function create(properties) {\n                return new CpufreqInteractiveSetspeedFtraceEvent(properties);\n            };\n\n            /**\n             * Encodes the specified CpufreqInteractiveSetspeedFtraceEvent message. Does not implicitly {@link perfetto.protos.CpufreqInteractiveSetspeedFtraceEvent.verify|verify} messages.\n             * @function encode\n             * @memberof perfetto.protos.CpufreqInteractiveSetspeedFtraceEvent\n             * @static\n             * @param {perfetto.protos.ICpufreqInteractiveSetspeedFtraceEvent} message CpufreqInteractiveSetspeedFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            CpufreqInteractiveSetspeedFtraceEvent.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.cpuId != null && message.hasOwnProperty(\"cpuId\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.cpuId);\n                if (message.targfreq != null && message.hasOwnProperty(\"targfreq\"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.targfreq);\n                if (message.actualfreq != null && message.hasOwnProperty(\"actualfreq\"))\n                    writer.uint32(/* id 3, wireType 0 =*/24).uint64(message.actualfreq);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified CpufreqInteractiveSetspeedFtraceEvent message, length delimited. Does not implicitly {@link perfetto.protos.CpufreqInteractiveSetspeedFtraceEvent.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof perfetto.protos.CpufreqInteractiveSetspeedFtraceEvent\n             * @static\n             * @param {perfetto.protos.ICpufreqInteractiveSetspeedFtraceEvent} message CpufreqInteractiveSetspeedFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            CpufreqInteractiveSetspeedFtraceEvent.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a CpufreqInteractiveSetspeedFtraceEvent message from the specified reader or buffer.\n             * @function decode\n             * @memberof perfetto.protos.CpufreqInteractiveSetspeedFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {perfetto.protos.CpufreqInteractiveSetspeedFtraceEvent} CpufreqInteractiveSetspeedFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            CpufreqInteractiveSetspeedFtraceEvent.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.CpufreqInteractiveSetspeedFtraceEvent();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.cpuId = reader.uint32();\n                        break;\n                    case 2:\n                        message.targfreq = reader.uint64();\n                        break;\n                    case 3:\n                        message.actualfreq = reader.uint64();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a CpufreqInteractiveSetspeedFtraceEvent message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof perfetto.protos.CpufreqInteractiveSetspeedFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {perfetto.protos.CpufreqInteractiveSetspeedFtraceEvent} CpufreqInteractiveSetspeedFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            CpufreqInteractiveSetspeedFtraceEvent.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a CpufreqInteractiveSetspeedFtraceEvent message.\n             * @function verify\n             * @memberof perfetto.protos.CpufreqInteractiveSetspeedFtraceEvent\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            CpufreqInteractiveSetspeedFtraceEvent.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.cpuId != null && message.hasOwnProperty(\"cpuId\"))\n                    if (!$util.isInteger(message.cpuId))\n                        return \"cpuId: integer expected\";\n                if (message.targfreq != null && message.hasOwnProperty(\"targfreq\"))\n                    if (!$util.isInteger(message.targfreq) && !(message.targfreq && $util.isInteger(message.targfreq.low) && $util.isInteger(message.targfreq.high)))\n                        return \"targfreq: integer|Long expected\";\n                if (message.actualfreq != null && message.hasOwnProperty(\"actualfreq\"))\n                    if (!$util.isInteger(message.actualfreq) && !(message.actualfreq && $util.isInteger(message.actualfreq.low) && $util.isInteger(message.actualfreq.high)))\n                        return \"actualfreq: integer|Long expected\";\n                return null;\n            };\n\n            /**\n             * Creates a CpufreqInteractiveSetspeedFtraceEvent message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof perfetto.protos.CpufreqInteractiveSetspeedFtraceEvent\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {perfetto.protos.CpufreqInteractiveSetspeedFtraceEvent} CpufreqInteractiveSetspeedFtraceEvent\n             */\n            CpufreqInteractiveSetspeedFtraceEvent.fromObject = function fromObject(object) {\n                if (object instanceof $root.perfetto.protos.CpufreqInteractiveSetspeedFtraceEvent)\n                    return object;\n                var message = new $root.perfetto.protos.CpufreqInteractiveSetspeedFtraceEvent();\n                if (object.cpuId != null)\n                    message.cpuId = object.cpuId >>> 0;\n                if (object.targfreq != null)\n                    if ($util.Long)\n                        (message.targfreq = $util.Long.fromValue(object.targfreq)).unsigned = true;\n                    else if (typeof object.targfreq === \"string\")\n                        message.targfreq = parseInt(object.targfreq, 10);\n                    else if (typeof object.targfreq === \"number\")\n                        message.targfreq = object.targfreq;\n                    else if (typeof object.targfreq === \"object\")\n                        message.targfreq = new $util.LongBits(object.targfreq.low >>> 0, object.targfreq.high >>> 0).toNumber(true);\n                if (object.actualfreq != null)\n                    if ($util.Long)\n                        (message.actualfreq = $util.Long.fromValue(object.actualfreq)).unsigned = true;\n                    else if (typeof object.actualfreq === \"string\")\n                        message.actualfreq = parseInt(object.actualfreq, 10);\n                    else if (typeof object.actualfreq === \"number\")\n                        message.actualfreq = object.actualfreq;\n                    else if (typeof object.actualfreq === \"object\")\n                        message.actualfreq = new $util.LongBits(object.actualfreq.low >>> 0, object.actualfreq.high >>> 0).toNumber(true);\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a CpufreqInteractiveSetspeedFtraceEvent message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof perfetto.protos.CpufreqInteractiveSetspeedFtraceEvent\n             * @static\n             * @param {perfetto.protos.CpufreqInteractiveSetspeedFtraceEvent} message CpufreqInteractiveSetspeedFtraceEvent\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            CpufreqInteractiveSetspeedFtraceEvent.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.cpuId = 0;\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, true);\n                        object.targfreq = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.targfreq = options.longs === String ? \"0\" : 0;\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, true);\n                        object.actualfreq = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.actualfreq = options.longs === String ? \"0\" : 0;\n                }\n                if (message.cpuId != null && message.hasOwnProperty(\"cpuId\"))\n                    object.cpuId = message.cpuId;\n                if (message.targfreq != null && message.hasOwnProperty(\"targfreq\"))\n                    if (typeof message.targfreq === \"number\")\n                        object.targfreq = options.longs === String ? String(message.targfreq) : message.targfreq;\n                    else\n                        object.targfreq = options.longs === String ? $util.Long.prototype.toString.call(message.targfreq) : options.longs === Number ? new $util.LongBits(message.targfreq.low >>> 0, message.targfreq.high >>> 0).toNumber(true) : message.targfreq;\n                if (message.actualfreq != null && message.hasOwnProperty(\"actualfreq\"))\n                    if (typeof message.actualfreq === \"number\")\n                        object.actualfreq = options.longs === String ? String(message.actualfreq) : message.actualfreq;\n                    else\n                        object.actualfreq = options.longs === String ? $util.Long.prototype.toString.call(message.actualfreq) : options.longs === Number ? new $util.LongBits(message.actualfreq.low >>> 0, message.actualfreq.high >>> 0).toNumber(true) : message.actualfreq;\n                return object;\n            };\n\n            /**\n             * Converts this CpufreqInteractiveSetspeedFtraceEvent to JSON.\n             * @function toJSON\n             * @memberof perfetto.protos.CpufreqInteractiveSetspeedFtraceEvent\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            CpufreqInteractiveSetspeedFtraceEvent.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return CpufreqInteractiveSetspeedFtraceEvent;\n        })();\n\n        protos.CpufreqInteractiveTargetFtraceEvent = (function() {\n\n            /**\n             * Properties of a CpufreqInteractiveTargetFtraceEvent.\n             * @memberof perfetto.protos\n             * @interface ICpufreqInteractiveTargetFtraceEvent\n             * @property {number|Long|null} [cpuId] CpufreqInteractiveTargetFtraceEvent cpuId\n             * @property {number|Long|null} [load] CpufreqInteractiveTargetFtraceEvent load\n             * @property {number|Long|null} [curtarg] CpufreqInteractiveTargetFtraceEvent curtarg\n             * @property {number|Long|null} [curactual] CpufreqInteractiveTargetFtraceEvent curactual\n             * @property {number|Long|null} [newtarg] CpufreqInteractiveTargetFtraceEvent newtarg\n             */\n\n            /**\n             * Constructs a new CpufreqInteractiveTargetFtraceEvent.\n             * @memberof perfetto.protos\n             * @classdesc Represents a CpufreqInteractiveTargetFtraceEvent.\n             * @implements ICpufreqInteractiveTargetFtraceEvent\n             * @constructor\n             * @param {perfetto.protos.ICpufreqInteractiveTargetFtraceEvent=} [properties] Properties to set\n             */\n            function CpufreqInteractiveTargetFtraceEvent(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * CpufreqInteractiveTargetFtraceEvent cpuId.\n             * @member {number|Long} cpuId\n             * @memberof perfetto.protos.CpufreqInteractiveTargetFtraceEvent\n             * @instance\n             */\n            CpufreqInteractiveTargetFtraceEvent.prototype.cpuId = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n            /**\n             * CpufreqInteractiveTargetFtraceEvent load.\n             * @member {number|Long} load\n             * @memberof perfetto.protos.CpufreqInteractiveTargetFtraceEvent\n             * @instance\n             */\n            CpufreqInteractiveTargetFtraceEvent.prototype.load = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n            /**\n             * CpufreqInteractiveTargetFtraceEvent curtarg.\n             * @member {number|Long} curtarg\n             * @memberof perfetto.protos.CpufreqInteractiveTargetFtraceEvent\n             * @instance\n             */\n            CpufreqInteractiveTargetFtraceEvent.prototype.curtarg = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n            /**\n             * CpufreqInteractiveTargetFtraceEvent curactual.\n             * @member {number|Long} curactual\n             * @memberof perfetto.protos.CpufreqInteractiveTargetFtraceEvent\n             * @instance\n             */\n            CpufreqInteractiveTargetFtraceEvent.prototype.curactual = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n            /**\n             * CpufreqInteractiveTargetFtraceEvent newtarg.\n             * @member {number|Long} newtarg\n             * @memberof perfetto.protos.CpufreqInteractiveTargetFtraceEvent\n             * @instance\n             */\n            CpufreqInteractiveTargetFtraceEvent.prototype.newtarg = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n            /**\n             * Creates a new CpufreqInteractiveTargetFtraceEvent instance using the specified properties.\n             * @function create\n             * @memberof perfetto.protos.CpufreqInteractiveTargetFtraceEvent\n             * @static\n             * @param {perfetto.protos.ICpufreqInteractiveTargetFtraceEvent=} [properties] Properties to set\n             * @returns {perfetto.protos.CpufreqInteractiveTargetFtraceEvent} CpufreqInteractiveTargetFtraceEvent instance\n             */\n            CpufreqInteractiveTargetFtraceEvent.create = function create(properties) {\n                return new CpufreqInteractiveTargetFtraceEvent(properties);\n            };\n\n            /**\n             * Encodes the specified CpufreqInteractiveTargetFtraceEvent message. Does not implicitly {@link perfetto.protos.CpufreqInteractiveTargetFtraceEvent.verify|verify} messages.\n             * @function encode\n             * @memberof perfetto.protos.CpufreqInteractiveTargetFtraceEvent\n             * @static\n             * @param {perfetto.protos.ICpufreqInteractiveTargetFtraceEvent} message CpufreqInteractiveTargetFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            CpufreqInteractiveTargetFtraceEvent.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.cpuId != null && message.hasOwnProperty(\"cpuId\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.cpuId);\n                if (message.load != null && message.hasOwnProperty(\"load\"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.load);\n                if (message.curtarg != null && message.hasOwnProperty(\"curtarg\"))\n                    writer.uint32(/* id 3, wireType 0 =*/24).uint64(message.curtarg);\n                if (message.curactual != null && message.hasOwnProperty(\"curactual\"))\n                    writer.uint32(/* id 4, wireType 0 =*/32).uint64(message.curactual);\n                if (message.newtarg != null && message.hasOwnProperty(\"newtarg\"))\n                    writer.uint32(/* id 5, wireType 0 =*/40).uint64(message.newtarg);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified CpufreqInteractiveTargetFtraceEvent message, length delimited. Does not implicitly {@link perfetto.protos.CpufreqInteractiveTargetFtraceEvent.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof perfetto.protos.CpufreqInteractiveTargetFtraceEvent\n             * @static\n             * @param {perfetto.protos.ICpufreqInteractiveTargetFtraceEvent} message CpufreqInteractiveTargetFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            CpufreqInteractiveTargetFtraceEvent.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a CpufreqInteractiveTargetFtraceEvent message from the specified reader or buffer.\n             * @function decode\n             * @memberof perfetto.protos.CpufreqInteractiveTargetFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {perfetto.protos.CpufreqInteractiveTargetFtraceEvent} CpufreqInteractiveTargetFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            CpufreqInteractiveTargetFtraceEvent.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.CpufreqInteractiveTargetFtraceEvent();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.cpuId = reader.uint64();\n                        break;\n                    case 2:\n                        message.load = reader.uint64();\n                        break;\n                    case 3:\n                        message.curtarg = reader.uint64();\n                        break;\n                    case 4:\n                        message.curactual = reader.uint64();\n                        break;\n                    case 5:\n                        message.newtarg = reader.uint64();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a CpufreqInteractiveTargetFtraceEvent message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof perfetto.protos.CpufreqInteractiveTargetFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {perfetto.protos.CpufreqInteractiveTargetFtraceEvent} CpufreqInteractiveTargetFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            CpufreqInteractiveTargetFtraceEvent.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a CpufreqInteractiveTargetFtraceEvent message.\n             * @function verify\n             * @memberof perfetto.protos.CpufreqInteractiveTargetFtraceEvent\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            CpufreqInteractiveTargetFtraceEvent.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.cpuId != null && message.hasOwnProperty(\"cpuId\"))\n                    if (!$util.isInteger(message.cpuId) && !(message.cpuId && $util.isInteger(message.cpuId.low) && $util.isInteger(message.cpuId.high)))\n                        return \"cpuId: integer|Long expected\";\n                if (message.load != null && message.hasOwnProperty(\"load\"))\n                    if (!$util.isInteger(message.load) && !(message.load && $util.isInteger(message.load.low) && $util.isInteger(message.load.high)))\n                        return \"load: integer|Long expected\";\n                if (message.curtarg != null && message.hasOwnProperty(\"curtarg\"))\n                    if (!$util.isInteger(message.curtarg) && !(message.curtarg && $util.isInteger(message.curtarg.low) && $util.isInteger(message.curtarg.high)))\n                        return \"curtarg: integer|Long expected\";\n                if (message.curactual != null && message.hasOwnProperty(\"curactual\"))\n                    if (!$util.isInteger(message.curactual) && !(message.curactual && $util.isInteger(message.curactual.low) && $util.isInteger(message.curactual.high)))\n                        return \"curactual: integer|Long expected\";\n                if (message.newtarg != null && message.hasOwnProperty(\"newtarg\"))\n                    if (!$util.isInteger(message.newtarg) && !(message.newtarg && $util.isInteger(message.newtarg.low) && $util.isInteger(message.newtarg.high)))\n                        return \"newtarg: integer|Long expected\";\n                return null;\n            };\n\n            /**\n             * Creates a CpufreqInteractiveTargetFtraceEvent message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof perfetto.protos.CpufreqInteractiveTargetFtraceEvent\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {perfetto.protos.CpufreqInteractiveTargetFtraceEvent} CpufreqInteractiveTargetFtraceEvent\n             */\n            CpufreqInteractiveTargetFtraceEvent.fromObject = function fromObject(object) {\n                if (object instanceof $root.perfetto.protos.CpufreqInteractiveTargetFtraceEvent)\n                    return object;\n                var message = new $root.perfetto.protos.CpufreqInteractiveTargetFtraceEvent();\n                if (object.cpuId != null)\n                    if ($util.Long)\n                        (message.cpuId = $util.Long.fromValue(object.cpuId)).unsigned = true;\n                    else if (typeof object.cpuId === \"string\")\n                        message.cpuId = parseInt(object.cpuId, 10);\n                    else if (typeof object.cpuId === \"number\")\n                        message.cpuId = object.cpuId;\n                    else if (typeof object.cpuId === \"object\")\n                        message.cpuId = new $util.LongBits(object.cpuId.low >>> 0, object.cpuId.high >>> 0).toNumber(true);\n                if (object.load != null)\n                    if ($util.Long)\n                        (message.load = $util.Long.fromValue(object.load)).unsigned = true;\n                    else if (typeof object.load === \"string\")\n                        message.load = parseInt(object.load, 10);\n                    else if (typeof object.load === \"number\")\n                        message.load = object.load;\n                    else if (typeof object.load === \"object\")\n                        message.load = new $util.LongBits(object.load.low >>> 0, object.load.high >>> 0).toNumber(true);\n                if (object.curtarg != null)\n                    if ($util.Long)\n                        (message.curtarg = $util.Long.fromValue(object.curtarg)).unsigned = true;\n                    else if (typeof object.curtarg === \"string\")\n                        message.curtarg = parseInt(object.curtarg, 10);\n                    else if (typeof object.curtarg === \"number\")\n                        message.curtarg = object.curtarg;\n                    else if (typeof object.curtarg === \"object\")\n                        message.curtarg = new $util.LongBits(object.curtarg.low >>> 0, object.curtarg.high >>> 0).toNumber(true);\n                if (object.curactual != null)\n                    if ($util.Long)\n                        (message.curactual = $util.Long.fromValue(object.curactual)).unsigned = true;\n                    else if (typeof object.curactual === \"string\")\n                        message.curactual = parseInt(object.curactual, 10);\n                    else if (typeof object.curactual === \"number\")\n                        message.curactual = object.curactual;\n                    else if (typeof object.curactual === \"object\")\n                        message.curactual = new $util.LongBits(object.curactual.low >>> 0, object.curactual.high >>> 0).toNumber(true);\n                if (object.newtarg != null)\n                    if ($util.Long)\n                        (message.newtarg = $util.Long.fromValue(object.newtarg)).unsigned = true;\n                    else if (typeof object.newtarg === \"string\")\n                        message.newtarg = parseInt(object.newtarg, 10);\n                    else if (typeof object.newtarg === \"number\")\n                        message.newtarg = object.newtarg;\n                    else if (typeof object.newtarg === \"object\")\n                        message.newtarg = new $util.LongBits(object.newtarg.low >>> 0, object.newtarg.high >>> 0).toNumber(true);\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a CpufreqInteractiveTargetFtraceEvent message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof perfetto.protos.CpufreqInteractiveTargetFtraceEvent\n             * @static\n             * @param {perfetto.protos.CpufreqInteractiveTargetFtraceEvent} message CpufreqInteractiveTargetFtraceEvent\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            CpufreqInteractiveTargetFtraceEvent.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, true);\n                        object.cpuId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.cpuId = options.longs === String ? \"0\" : 0;\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, true);\n                        object.load = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.load = options.longs === String ? \"0\" : 0;\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, true);\n                        object.curtarg = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.curtarg = options.longs === String ? \"0\" : 0;\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, true);\n                        object.curactual = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.curactual = options.longs === String ? \"0\" : 0;\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, true);\n                        object.newtarg = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.newtarg = options.longs === String ? \"0\" : 0;\n                }\n                if (message.cpuId != null && message.hasOwnProperty(\"cpuId\"))\n                    if (typeof message.cpuId === \"number\")\n                        object.cpuId = options.longs === String ? String(message.cpuId) : message.cpuId;\n                    else\n                        object.cpuId = options.longs === String ? $util.Long.prototype.toString.call(message.cpuId) : options.longs === Number ? new $util.LongBits(message.cpuId.low >>> 0, message.cpuId.high >>> 0).toNumber(true) : message.cpuId;\n                if (message.load != null && message.hasOwnProperty(\"load\"))\n                    if (typeof message.load === \"number\")\n                        object.load = options.longs === String ? String(message.load) : message.load;\n                    else\n                        object.load = options.longs === String ? $util.Long.prototype.toString.call(message.load) : options.longs === Number ? new $util.LongBits(message.load.low >>> 0, message.load.high >>> 0).toNumber(true) : message.load;\n                if (message.curtarg != null && message.hasOwnProperty(\"curtarg\"))\n                    if (typeof message.curtarg === \"number\")\n                        object.curtarg = options.longs === String ? String(message.curtarg) : message.curtarg;\n                    else\n                        object.curtarg = options.longs === String ? $util.Long.prototype.toString.call(message.curtarg) : options.longs === Number ? new $util.LongBits(message.curtarg.low >>> 0, message.curtarg.high >>> 0).toNumber(true) : message.curtarg;\n                if (message.curactual != null && message.hasOwnProperty(\"curactual\"))\n                    if (typeof message.curactual === \"number\")\n                        object.curactual = options.longs === String ? String(message.curactual) : message.curactual;\n                    else\n                        object.curactual = options.longs === String ? $util.Long.prototype.toString.call(message.curactual) : options.longs === Number ? new $util.LongBits(message.curactual.low >>> 0, message.curactual.high >>> 0).toNumber(true) : message.curactual;\n                if (message.newtarg != null && message.hasOwnProperty(\"newtarg\"))\n                    if (typeof message.newtarg === \"number\")\n                        object.newtarg = options.longs === String ? String(message.newtarg) : message.newtarg;\n                    else\n                        object.newtarg = options.longs === String ? $util.Long.prototype.toString.call(message.newtarg) : options.longs === Number ? new $util.LongBits(message.newtarg.low >>> 0, message.newtarg.high >>> 0).toNumber(true) : message.newtarg;\n                return object;\n            };\n\n            /**\n             * Converts this CpufreqInteractiveTargetFtraceEvent to JSON.\n             * @function toJSON\n             * @memberof perfetto.protos.CpufreqInteractiveTargetFtraceEvent\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            CpufreqInteractiveTargetFtraceEvent.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return CpufreqInteractiveTargetFtraceEvent;\n        })();\n\n        protos.CpufreqInteractiveUnboostFtraceEvent = (function() {\n\n            /**\n             * Properties of a CpufreqInteractiveUnboostFtraceEvent.\n             * @memberof perfetto.protos\n             * @interface ICpufreqInteractiveUnboostFtraceEvent\n             * @property {string|null} [s] CpufreqInteractiveUnboostFtraceEvent s\n             */\n\n            /**\n             * Constructs a new CpufreqInteractiveUnboostFtraceEvent.\n             * @memberof perfetto.protos\n             * @classdesc Represents a CpufreqInteractiveUnboostFtraceEvent.\n             * @implements ICpufreqInteractiveUnboostFtraceEvent\n             * @constructor\n             * @param {perfetto.protos.ICpufreqInteractiveUnboostFtraceEvent=} [properties] Properties to set\n             */\n            function CpufreqInteractiveUnboostFtraceEvent(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * CpufreqInteractiveUnboostFtraceEvent s.\n             * @member {string} s\n             * @memberof perfetto.protos.CpufreqInteractiveUnboostFtraceEvent\n             * @instance\n             */\n            CpufreqInteractiveUnboostFtraceEvent.prototype.s = \"\";\n\n            /**\n             * Creates a new CpufreqInteractiveUnboostFtraceEvent instance using the specified properties.\n             * @function create\n             * @memberof perfetto.protos.CpufreqInteractiveUnboostFtraceEvent\n             * @static\n             * @param {perfetto.protos.ICpufreqInteractiveUnboostFtraceEvent=} [properties] Properties to set\n             * @returns {perfetto.protos.CpufreqInteractiveUnboostFtraceEvent} CpufreqInteractiveUnboostFtraceEvent instance\n             */\n            CpufreqInteractiveUnboostFtraceEvent.create = function create(properties) {\n                return new CpufreqInteractiveUnboostFtraceEvent(properties);\n            };\n\n            /**\n             * Encodes the specified CpufreqInteractiveUnboostFtraceEvent message. Does not implicitly {@link perfetto.protos.CpufreqInteractiveUnboostFtraceEvent.verify|verify} messages.\n             * @function encode\n             * @memberof perfetto.protos.CpufreqInteractiveUnboostFtraceEvent\n             * @static\n             * @param {perfetto.protos.ICpufreqInteractiveUnboostFtraceEvent} message CpufreqInteractiveUnboostFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            CpufreqInteractiveUnboostFtraceEvent.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.s != null && message.hasOwnProperty(\"s\"))\n                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.s);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified CpufreqInteractiveUnboostFtraceEvent message, length delimited. Does not implicitly {@link perfetto.protos.CpufreqInteractiveUnboostFtraceEvent.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof perfetto.protos.CpufreqInteractiveUnboostFtraceEvent\n             * @static\n             * @param {perfetto.protos.ICpufreqInteractiveUnboostFtraceEvent} message CpufreqInteractiveUnboostFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            CpufreqInteractiveUnboostFtraceEvent.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a CpufreqInteractiveUnboostFtraceEvent message from the specified reader or buffer.\n             * @function decode\n             * @memberof perfetto.protos.CpufreqInteractiveUnboostFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {perfetto.protos.CpufreqInteractiveUnboostFtraceEvent} CpufreqInteractiveUnboostFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            CpufreqInteractiveUnboostFtraceEvent.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.CpufreqInteractiveUnboostFtraceEvent();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.s = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a CpufreqInteractiveUnboostFtraceEvent message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof perfetto.protos.CpufreqInteractiveUnboostFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {perfetto.protos.CpufreqInteractiveUnboostFtraceEvent} CpufreqInteractiveUnboostFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            CpufreqInteractiveUnboostFtraceEvent.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a CpufreqInteractiveUnboostFtraceEvent message.\n             * @function verify\n             * @memberof perfetto.protos.CpufreqInteractiveUnboostFtraceEvent\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            CpufreqInteractiveUnboostFtraceEvent.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.s != null && message.hasOwnProperty(\"s\"))\n                    if (!$util.isString(message.s))\n                        return \"s: string expected\";\n                return null;\n            };\n\n            /**\n             * Creates a CpufreqInteractiveUnboostFtraceEvent message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof perfetto.protos.CpufreqInteractiveUnboostFtraceEvent\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {perfetto.protos.CpufreqInteractiveUnboostFtraceEvent} CpufreqInteractiveUnboostFtraceEvent\n             */\n            CpufreqInteractiveUnboostFtraceEvent.fromObject = function fromObject(object) {\n                if (object instanceof $root.perfetto.protos.CpufreqInteractiveUnboostFtraceEvent)\n                    return object;\n                var message = new $root.perfetto.protos.CpufreqInteractiveUnboostFtraceEvent();\n                if (object.s != null)\n                    message.s = String(object.s);\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a CpufreqInteractiveUnboostFtraceEvent message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof perfetto.protos.CpufreqInteractiveUnboostFtraceEvent\n             * @static\n             * @param {perfetto.protos.CpufreqInteractiveUnboostFtraceEvent} message CpufreqInteractiveUnboostFtraceEvent\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            CpufreqInteractiveUnboostFtraceEvent.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults)\n                    object.s = \"\";\n                if (message.s != null && message.hasOwnProperty(\"s\"))\n                    object.s = message.s;\n                return object;\n            };\n\n            /**\n             * Converts this CpufreqInteractiveUnboostFtraceEvent to JSON.\n             * @function toJSON\n             * @memberof perfetto.protos.CpufreqInteractiveUnboostFtraceEvent\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            CpufreqInteractiveUnboostFtraceEvent.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return CpufreqInteractiveUnboostFtraceEvent;\n        })();\n\n        protos.CpuFrequencyLimitsFtraceEvent = (function() {\n\n            /**\n             * Properties of a CpuFrequencyLimitsFtraceEvent.\n             * @memberof perfetto.protos\n             * @interface ICpuFrequencyLimitsFtraceEvent\n             * @property {number|null} [minFreq] CpuFrequencyLimitsFtraceEvent minFreq\n             * @property {number|null} [maxFreq] CpuFrequencyLimitsFtraceEvent maxFreq\n             * @property {number|null} [cpuId] CpuFrequencyLimitsFtraceEvent cpuId\n             */\n\n            /**\n             * Constructs a new CpuFrequencyLimitsFtraceEvent.\n             * @memberof perfetto.protos\n             * @classdesc Represents a CpuFrequencyLimitsFtraceEvent.\n             * @implements ICpuFrequencyLimitsFtraceEvent\n             * @constructor\n             * @param {perfetto.protos.ICpuFrequencyLimitsFtraceEvent=} [properties] Properties to set\n             */\n            function CpuFrequencyLimitsFtraceEvent(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * CpuFrequencyLimitsFtraceEvent minFreq.\n             * @member {number} minFreq\n             * @memberof perfetto.protos.CpuFrequencyLimitsFtraceEvent\n             * @instance\n             */\n            CpuFrequencyLimitsFtraceEvent.prototype.minFreq = 0;\n\n            /**\n             * CpuFrequencyLimitsFtraceEvent maxFreq.\n             * @member {number} maxFreq\n             * @memberof perfetto.protos.CpuFrequencyLimitsFtraceEvent\n             * @instance\n             */\n            CpuFrequencyLimitsFtraceEvent.prototype.maxFreq = 0;\n\n            /**\n             * CpuFrequencyLimitsFtraceEvent cpuId.\n             * @member {number} cpuId\n             * @memberof perfetto.protos.CpuFrequencyLimitsFtraceEvent\n             * @instance\n             */\n            CpuFrequencyLimitsFtraceEvent.prototype.cpuId = 0;\n\n            /**\n             * Creates a new CpuFrequencyLimitsFtraceEvent instance using the specified properties.\n             * @function create\n             * @memberof perfetto.protos.CpuFrequencyLimitsFtraceEvent\n             * @static\n             * @param {perfetto.protos.ICpuFrequencyLimitsFtraceEvent=} [properties] Properties to set\n             * @returns {perfetto.protos.CpuFrequencyLimitsFtraceEvent} CpuFrequencyLimitsFtraceEvent instance\n             */\n            CpuFrequencyLimitsFtraceEvent.create = function create(properties) {\n                return new CpuFrequencyLimitsFtraceEvent(properties);\n            };\n\n            /**\n             * Encodes the specified CpuFrequencyLimitsFtraceEvent message. Does not implicitly {@link perfetto.protos.CpuFrequencyLimitsFtraceEvent.verify|verify} messages.\n             * @function encode\n             * @memberof perfetto.protos.CpuFrequencyLimitsFtraceEvent\n             * @static\n             * @param {perfetto.protos.ICpuFrequencyLimitsFtraceEvent} message CpuFrequencyLimitsFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            CpuFrequencyLimitsFtraceEvent.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.minFreq != null && message.hasOwnProperty(\"minFreq\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.minFreq);\n                if (message.maxFreq != null && message.hasOwnProperty(\"maxFreq\"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.maxFreq);\n                if (message.cpuId != null && message.hasOwnProperty(\"cpuId\"))\n                    writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.cpuId);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified CpuFrequencyLimitsFtraceEvent message, length delimited. Does not implicitly {@link perfetto.protos.CpuFrequencyLimitsFtraceEvent.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof perfetto.protos.CpuFrequencyLimitsFtraceEvent\n             * @static\n             * @param {perfetto.protos.ICpuFrequencyLimitsFtraceEvent} message CpuFrequencyLimitsFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            CpuFrequencyLimitsFtraceEvent.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a CpuFrequencyLimitsFtraceEvent message from the specified reader or buffer.\n             * @function decode\n             * @memberof perfetto.protos.CpuFrequencyLimitsFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {perfetto.protos.CpuFrequencyLimitsFtraceEvent} CpuFrequencyLimitsFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            CpuFrequencyLimitsFtraceEvent.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.CpuFrequencyLimitsFtraceEvent();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.minFreq = reader.uint32();\n                        break;\n                    case 2:\n                        message.maxFreq = reader.uint32();\n                        break;\n                    case 3:\n                        message.cpuId = reader.uint32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a CpuFrequencyLimitsFtraceEvent message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof perfetto.protos.CpuFrequencyLimitsFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {perfetto.protos.CpuFrequencyLimitsFtraceEvent} CpuFrequencyLimitsFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            CpuFrequencyLimitsFtraceEvent.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a CpuFrequencyLimitsFtraceEvent message.\n             * @function verify\n             * @memberof perfetto.protos.CpuFrequencyLimitsFtraceEvent\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            CpuFrequencyLimitsFtraceEvent.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.minFreq != null && message.hasOwnProperty(\"minFreq\"))\n                    if (!$util.isInteger(message.minFreq))\n                        return \"minFreq: integer expected\";\n                if (message.maxFreq != null && message.hasOwnProperty(\"maxFreq\"))\n                    if (!$util.isInteger(message.maxFreq))\n                        return \"maxFreq: integer expected\";\n                if (message.cpuId != null && message.hasOwnProperty(\"cpuId\"))\n                    if (!$util.isInteger(message.cpuId))\n                        return \"cpuId: integer expected\";\n                return null;\n            };\n\n            /**\n             * Creates a CpuFrequencyLimitsFtraceEvent message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof perfetto.protos.CpuFrequencyLimitsFtraceEvent\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {perfetto.protos.CpuFrequencyLimitsFtraceEvent} CpuFrequencyLimitsFtraceEvent\n             */\n            CpuFrequencyLimitsFtraceEvent.fromObject = function fromObject(object) {\n                if (object instanceof $root.perfetto.protos.CpuFrequencyLimitsFtraceEvent)\n                    return object;\n                var message = new $root.perfetto.protos.CpuFrequencyLimitsFtraceEvent();\n                if (object.minFreq != null)\n                    message.minFreq = object.minFreq >>> 0;\n                if (object.maxFreq != null)\n                    message.maxFreq = object.maxFreq >>> 0;\n                if (object.cpuId != null)\n                    message.cpuId = object.cpuId >>> 0;\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a CpuFrequencyLimitsFtraceEvent message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof perfetto.protos.CpuFrequencyLimitsFtraceEvent\n             * @static\n             * @param {perfetto.protos.CpuFrequencyLimitsFtraceEvent} message CpuFrequencyLimitsFtraceEvent\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            CpuFrequencyLimitsFtraceEvent.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.minFreq = 0;\n                    object.maxFreq = 0;\n                    object.cpuId = 0;\n                }\n                if (message.minFreq != null && message.hasOwnProperty(\"minFreq\"))\n                    object.minFreq = message.minFreq;\n                if (message.maxFreq != null && message.hasOwnProperty(\"maxFreq\"))\n                    object.maxFreq = message.maxFreq;\n                if (message.cpuId != null && message.hasOwnProperty(\"cpuId\"))\n                    object.cpuId = message.cpuId;\n                return object;\n            };\n\n            /**\n             * Converts this CpuFrequencyLimitsFtraceEvent to JSON.\n             * @function toJSON\n             * @memberof perfetto.protos.CpuFrequencyLimitsFtraceEvent\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            CpuFrequencyLimitsFtraceEvent.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return CpuFrequencyLimitsFtraceEvent;\n        })();\n\n        protos.CpuFrequencyFtraceEvent = (function() {\n\n            /**\n             * Properties of a CpuFrequencyFtraceEvent.\n             * @memberof perfetto.protos\n             * @interface ICpuFrequencyFtraceEvent\n             * @property {number|null} [state] CpuFrequencyFtraceEvent state\n             * @property {number|null} [cpuId] CpuFrequencyFtraceEvent cpuId\n             */\n\n            /**\n             * Constructs a new CpuFrequencyFtraceEvent.\n             * @memberof perfetto.protos\n             * @classdesc Represents a CpuFrequencyFtraceEvent.\n             * @implements ICpuFrequencyFtraceEvent\n             * @constructor\n             * @param {perfetto.protos.ICpuFrequencyFtraceEvent=} [properties] Properties to set\n             */\n            function CpuFrequencyFtraceEvent(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * CpuFrequencyFtraceEvent state.\n             * @member {number} state\n             * @memberof perfetto.protos.CpuFrequencyFtraceEvent\n             * @instance\n             */\n            CpuFrequencyFtraceEvent.prototype.state = 0;\n\n            /**\n             * CpuFrequencyFtraceEvent cpuId.\n             * @member {number} cpuId\n             * @memberof perfetto.protos.CpuFrequencyFtraceEvent\n             * @instance\n             */\n            CpuFrequencyFtraceEvent.prototype.cpuId = 0;\n\n            /**\n             * Creates a new CpuFrequencyFtraceEvent instance using the specified properties.\n             * @function create\n             * @memberof perfetto.protos.CpuFrequencyFtraceEvent\n             * @static\n             * @param {perfetto.protos.ICpuFrequencyFtraceEvent=} [properties] Properties to set\n             * @returns {perfetto.protos.CpuFrequencyFtraceEvent} CpuFrequencyFtraceEvent instance\n             */\n            CpuFrequencyFtraceEvent.create = function create(properties) {\n                return new CpuFrequencyFtraceEvent(properties);\n            };\n\n            /**\n             * Encodes the specified CpuFrequencyFtraceEvent message. Does not implicitly {@link perfetto.protos.CpuFrequencyFtraceEvent.verify|verify} messages.\n             * @function encode\n             * @memberof perfetto.protos.CpuFrequencyFtraceEvent\n             * @static\n             * @param {perfetto.protos.ICpuFrequencyFtraceEvent} message CpuFrequencyFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            CpuFrequencyFtraceEvent.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.state != null && message.hasOwnProperty(\"state\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.state);\n                if (message.cpuId != null && message.hasOwnProperty(\"cpuId\"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.cpuId);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified CpuFrequencyFtraceEvent message, length delimited. Does not implicitly {@link perfetto.protos.CpuFrequencyFtraceEvent.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof perfetto.protos.CpuFrequencyFtraceEvent\n             * @static\n             * @param {perfetto.protos.ICpuFrequencyFtraceEvent} message CpuFrequencyFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            CpuFrequencyFtraceEvent.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a CpuFrequencyFtraceEvent message from the specified reader or buffer.\n             * @function decode\n             * @memberof perfetto.protos.CpuFrequencyFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {perfetto.protos.CpuFrequencyFtraceEvent} CpuFrequencyFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            CpuFrequencyFtraceEvent.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.CpuFrequencyFtraceEvent();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.state = reader.uint32();\n                        break;\n                    case 2:\n                        message.cpuId = reader.uint32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a CpuFrequencyFtraceEvent message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof perfetto.protos.CpuFrequencyFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {perfetto.protos.CpuFrequencyFtraceEvent} CpuFrequencyFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            CpuFrequencyFtraceEvent.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a CpuFrequencyFtraceEvent message.\n             * @function verify\n             * @memberof perfetto.protos.CpuFrequencyFtraceEvent\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            CpuFrequencyFtraceEvent.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.state != null && message.hasOwnProperty(\"state\"))\n                    if (!$util.isInteger(message.state))\n                        return \"state: integer expected\";\n                if (message.cpuId != null && message.hasOwnProperty(\"cpuId\"))\n                    if (!$util.isInteger(message.cpuId))\n                        return \"cpuId: integer expected\";\n                return null;\n            };\n\n            /**\n             * Creates a CpuFrequencyFtraceEvent message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof perfetto.protos.CpuFrequencyFtraceEvent\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {perfetto.protos.CpuFrequencyFtraceEvent} CpuFrequencyFtraceEvent\n             */\n            CpuFrequencyFtraceEvent.fromObject = function fromObject(object) {\n                if (object instanceof $root.perfetto.protos.CpuFrequencyFtraceEvent)\n                    return object;\n                var message = new $root.perfetto.protos.CpuFrequencyFtraceEvent();\n                if (object.state != null)\n                    message.state = object.state >>> 0;\n                if (object.cpuId != null)\n                    message.cpuId = object.cpuId >>> 0;\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a CpuFrequencyFtraceEvent message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof perfetto.protos.CpuFrequencyFtraceEvent\n             * @static\n             * @param {perfetto.protos.CpuFrequencyFtraceEvent} message CpuFrequencyFtraceEvent\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            CpuFrequencyFtraceEvent.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.state = 0;\n                    object.cpuId = 0;\n                }\n                if (message.state != null && message.hasOwnProperty(\"state\"))\n                    object.state = message.state;\n                if (message.cpuId != null && message.hasOwnProperty(\"cpuId\"))\n                    object.cpuId = message.cpuId;\n                return object;\n            };\n\n            /**\n             * Converts this CpuFrequencyFtraceEvent to JSON.\n             * @function toJSON\n             * @memberof perfetto.protos.CpuFrequencyFtraceEvent\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            CpuFrequencyFtraceEvent.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return CpuFrequencyFtraceEvent;\n        })();\n\n        protos.CpuIdleFtraceEvent = (function() {\n\n            /**\n             * Properties of a CpuIdleFtraceEvent.\n             * @memberof perfetto.protos\n             * @interface ICpuIdleFtraceEvent\n             * @property {number|null} [state] CpuIdleFtraceEvent state\n             * @property {number|null} [cpuId] CpuIdleFtraceEvent cpuId\n             */\n\n            /**\n             * Constructs a new CpuIdleFtraceEvent.\n             * @memberof perfetto.protos\n             * @classdesc Represents a CpuIdleFtraceEvent.\n             * @implements ICpuIdleFtraceEvent\n             * @constructor\n             * @param {perfetto.protos.ICpuIdleFtraceEvent=} [properties] Properties to set\n             */\n            function CpuIdleFtraceEvent(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * CpuIdleFtraceEvent state.\n             * @member {number} state\n             * @memberof perfetto.protos.CpuIdleFtraceEvent\n             * @instance\n             */\n            CpuIdleFtraceEvent.prototype.state = 0;\n\n            /**\n             * CpuIdleFtraceEvent cpuId.\n             * @member {number} cpuId\n             * @memberof perfetto.protos.CpuIdleFtraceEvent\n             * @instance\n             */\n            CpuIdleFtraceEvent.prototype.cpuId = 0;\n\n            /**\n             * Creates a new CpuIdleFtraceEvent instance using the specified properties.\n             * @function create\n             * @memberof perfetto.protos.CpuIdleFtraceEvent\n             * @static\n             * @param {perfetto.protos.ICpuIdleFtraceEvent=} [properties] Properties to set\n             * @returns {perfetto.protos.CpuIdleFtraceEvent} CpuIdleFtraceEvent instance\n             */\n            CpuIdleFtraceEvent.create = function create(properties) {\n                return new CpuIdleFtraceEvent(properties);\n            };\n\n            /**\n             * Encodes the specified CpuIdleFtraceEvent message. Does not implicitly {@link perfetto.protos.CpuIdleFtraceEvent.verify|verify} messages.\n             * @function encode\n             * @memberof perfetto.protos.CpuIdleFtraceEvent\n             * @static\n             * @param {perfetto.protos.ICpuIdleFtraceEvent} message CpuIdleFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            CpuIdleFtraceEvent.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.state != null && message.hasOwnProperty(\"state\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.state);\n                if (message.cpuId != null && message.hasOwnProperty(\"cpuId\"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.cpuId);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified CpuIdleFtraceEvent message, length delimited. Does not implicitly {@link perfetto.protos.CpuIdleFtraceEvent.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof perfetto.protos.CpuIdleFtraceEvent\n             * @static\n             * @param {perfetto.protos.ICpuIdleFtraceEvent} message CpuIdleFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            CpuIdleFtraceEvent.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a CpuIdleFtraceEvent message from the specified reader or buffer.\n             * @function decode\n             * @memberof perfetto.protos.CpuIdleFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {perfetto.protos.CpuIdleFtraceEvent} CpuIdleFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            CpuIdleFtraceEvent.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.CpuIdleFtraceEvent();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.state = reader.uint32();\n                        break;\n                    case 2:\n                        message.cpuId = reader.uint32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a CpuIdleFtraceEvent message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof perfetto.protos.CpuIdleFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {perfetto.protos.CpuIdleFtraceEvent} CpuIdleFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            CpuIdleFtraceEvent.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a CpuIdleFtraceEvent message.\n             * @function verify\n             * @memberof perfetto.protos.CpuIdleFtraceEvent\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            CpuIdleFtraceEvent.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.state != null && message.hasOwnProperty(\"state\"))\n                    if (!$util.isInteger(message.state))\n                        return \"state: integer expected\";\n                if (message.cpuId != null && message.hasOwnProperty(\"cpuId\"))\n                    if (!$util.isInteger(message.cpuId))\n                        return \"cpuId: integer expected\";\n                return null;\n            };\n\n            /**\n             * Creates a CpuIdleFtraceEvent message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof perfetto.protos.CpuIdleFtraceEvent\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {perfetto.protos.CpuIdleFtraceEvent} CpuIdleFtraceEvent\n             */\n            CpuIdleFtraceEvent.fromObject = function fromObject(object) {\n                if (object instanceof $root.perfetto.protos.CpuIdleFtraceEvent)\n                    return object;\n                var message = new $root.perfetto.protos.CpuIdleFtraceEvent();\n                if (object.state != null)\n                    message.state = object.state >>> 0;\n                if (object.cpuId != null)\n                    message.cpuId = object.cpuId >>> 0;\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a CpuIdleFtraceEvent message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof perfetto.protos.CpuIdleFtraceEvent\n             * @static\n             * @param {perfetto.protos.CpuIdleFtraceEvent} message CpuIdleFtraceEvent\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            CpuIdleFtraceEvent.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.state = 0;\n                    object.cpuId = 0;\n                }\n                if (message.state != null && message.hasOwnProperty(\"state\"))\n                    object.state = message.state;\n                if (message.cpuId != null && message.hasOwnProperty(\"cpuId\"))\n                    object.cpuId = message.cpuId;\n                return object;\n            };\n\n            /**\n             * Converts this CpuIdleFtraceEvent to JSON.\n             * @function toJSON\n             * @memberof perfetto.protos.CpuIdleFtraceEvent\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            CpuIdleFtraceEvent.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return CpuIdleFtraceEvent;\n        })();\n\n        protos.Ext4DaWriteBeginFtraceEvent = (function() {\n\n            /**\n             * Properties of an Ext4DaWriteBeginFtraceEvent.\n             * @memberof perfetto.protos\n             * @interface IExt4DaWriteBeginFtraceEvent\n             * @property {number|Long|null} [dev] Ext4DaWriteBeginFtraceEvent dev\n             * @property {number|Long|null} [ino] Ext4DaWriteBeginFtraceEvent ino\n             * @property {number|Long|null} [pos] Ext4DaWriteBeginFtraceEvent pos\n             * @property {number|null} [len] Ext4DaWriteBeginFtraceEvent len\n             * @property {number|null} [flags] Ext4DaWriteBeginFtraceEvent flags\n             */\n\n            /**\n             * Constructs a new Ext4DaWriteBeginFtraceEvent.\n             * @memberof perfetto.protos\n             * @classdesc Represents an Ext4DaWriteBeginFtraceEvent.\n             * @implements IExt4DaWriteBeginFtraceEvent\n             * @constructor\n             * @param {perfetto.protos.IExt4DaWriteBeginFtraceEvent=} [properties] Properties to set\n             */\n            function Ext4DaWriteBeginFtraceEvent(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * Ext4DaWriteBeginFtraceEvent dev.\n             * @member {number|Long} dev\n             * @memberof perfetto.protos.Ext4DaWriteBeginFtraceEvent\n             * @instance\n             */\n            Ext4DaWriteBeginFtraceEvent.prototype.dev = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n            /**\n             * Ext4DaWriteBeginFtraceEvent ino.\n             * @member {number|Long} ino\n             * @memberof perfetto.protos.Ext4DaWriteBeginFtraceEvent\n             * @instance\n             */\n            Ext4DaWriteBeginFtraceEvent.prototype.ino = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n            /**\n             * Ext4DaWriteBeginFtraceEvent pos.\n             * @member {number|Long} pos\n             * @memberof perfetto.protos.Ext4DaWriteBeginFtraceEvent\n             * @instance\n             */\n            Ext4DaWriteBeginFtraceEvent.prototype.pos = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n            /**\n             * Ext4DaWriteBeginFtraceEvent len.\n             * @member {number} len\n             * @memberof perfetto.protos.Ext4DaWriteBeginFtraceEvent\n             * @instance\n             */\n            Ext4DaWriteBeginFtraceEvent.prototype.len = 0;\n\n            /**\n             * Ext4DaWriteBeginFtraceEvent flags.\n             * @member {number} flags\n             * @memberof perfetto.protos.Ext4DaWriteBeginFtraceEvent\n             * @instance\n             */\n            Ext4DaWriteBeginFtraceEvent.prototype.flags = 0;\n\n            /**\n             * Creates a new Ext4DaWriteBeginFtraceEvent instance using the specified properties.\n             * @function create\n             * @memberof perfetto.protos.Ext4DaWriteBeginFtraceEvent\n             * @static\n             * @param {perfetto.protos.IExt4DaWriteBeginFtraceEvent=} [properties] Properties to set\n             * @returns {perfetto.protos.Ext4DaWriteBeginFtraceEvent} Ext4DaWriteBeginFtraceEvent instance\n             */\n            Ext4DaWriteBeginFtraceEvent.create = function create(properties) {\n                return new Ext4DaWriteBeginFtraceEvent(properties);\n            };\n\n            /**\n             * Encodes the specified Ext4DaWriteBeginFtraceEvent message. Does not implicitly {@link perfetto.protos.Ext4DaWriteBeginFtraceEvent.verify|verify} messages.\n             * @function encode\n             * @memberof perfetto.protos.Ext4DaWriteBeginFtraceEvent\n             * @static\n             * @param {perfetto.protos.IExt4DaWriteBeginFtraceEvent} message Ext4DaWriteBeginFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Ext4DaWriteBeginFtraceEvent.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.dev != null && message.hasOwnProperty(\"dev\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.dev);\n                if (message.ino != null && message.hasOwnProperty(\"ino\"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.ino);\n                if (message.pos != null && message.hasOwnProperty(\"pos\"))\n                    writer.uint32(/* id 3, wireType 0 =*/24).int64(message.pos);\n                if (message.len != null && message.hasOwnProperty(\"len\"))\n                    writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.len);\n                if (message.flags != null && message.hasOwnProperty(\"flags\"))\n                    writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.flags);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified Ext4DaWriteBeginFtraceEvent message, length delimited. Does not implicitly {@link perfetto.protos.Ext4DaWriteBeginFtraceEvent.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof perfetto.protos.Ext4DaWriteBeginFtraceEvent\n             * @static\n             * @param {perfetto.protos.IExt4DaWriteBeginFtraceEvent} message Ext4DaWriteBeginFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Ext4DaWriteBeginFtraceEvent.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes an Ext4DaWriteBeginFtraceEvent message from the specified reader or buffer.\n             * @function decode\n             * @memberof perfetto.protos.Ext4DaWriteBeginFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {perfetto.protos.Ext4DaWriteBeginFtraceEvent} Ext4DaWriteBeginFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Ext4DaWriteBeginFtraceEvent.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.Ext4DaWriteBeginFtraceEvent();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.dev = reader.uint64();\n                        break;\n                    case 2:\n                        message.ino = reader.uint64();\n                        break;\n                    case 3:\n                        message.pos = reader.int64();\n                        break;\n                    case 4:\n                        message.len = reader.uint32();\n                        break;\n                    case 5:\n                        message.flags = reader.uint32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes an Ext4DaWriteBeginFtraceEvent message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof perfetto.protos.Ext4DaWriteBeginFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {perfetto.protos.Ext4DaWriteBeginFtraceEvent} Ext4DaWriteBeginFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Ext4DaWriteBeginFtraceEvent.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies an Ext4DaWriteBeginFtraceEvent message.\n             * @function verify\n             * @memberof perfetto.protos.Ext4DaWriteBeginFtraceEvent\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Ext4DaWriteBeginFtraceEvent.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.dev != null && message.hasOwnProperty(\"dev\"))\n                    if (!$util.isInteger(message.dev) && !(message.dev && $util.isInteger(message.dev.low) && $util.isInteger(message.dev.high)))\n                        return \"dev: integer|Long expected\";\n                if (message.ino != null && message.hasOwnProperty(\"ino\"))\n                    if (!$util.isInteger(message.ino) && !(message.ino && $util.isInteger(message.ino.low) && $util.isInteger(message.ino.high)))\n                        return \"ino: integer|Long expected\";\n                if (message.pos != null && message.hasOwnProperty(\"pos\"))\n                    if (!$util.isInteger(message.pos) && !(message.pos && $util.isInteger(message.pos.low) && $util.isInteger(message.pos.high)))\n                        return \"pos: integer|Long expected\";\n                if (message.len != null && message.hasOwnProperty(\"len\"))\n                    if (!$util.isInteger(message.len))\n                        return \"len: integer expected\";\n                if (message.flags != null && message.hasOwnProperty(\"flags\"))\n                    if (!$util.isInteger(message.flags))\n                        return \"flags: integer expected\";\n                return null;\n            };\n\n            /**\n             * Creates an Ext4DaWriteBeginFtraceEvent message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof perfetto.protos.Ext4DaWriteBeginFtraceEvent\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {perfetto.protos.Ext4DaWriteBeginFtraceEvent} Ext4DaWriteBeginFtraceEvent\n             */\n            Ext4DaWriteBeginFtraceEvent.fromObject = function fromObject(object) {\n                if (object instanceof $root.perfetto.protos.Ext4DaWriteBeginFtraceEvent)\n                    return object;\n                var message = new $root.perfetto.protos.Ext4DaWriteBeginFtraceEvent();\n                if (object.dev != null)\n                    if ($util.Long)\n                        (message.dev = $util.Long.fromValue(object.dev)).unsigned = true;\n                    else if (typeof object.dev === \"string\")\n                        message.dev = parseInt(object.dev, 10);\n                    else if (typeof object.dev === \"number\")\n                        message.dev = object.dev;\n                    else if (typeof object.dev === \"object\")\n                        message.dev = new $util.LongBits(object.dev.low >>> 0, object.dev.high >>> 0).toNumber(true);\n                if (object.ino != null)\n                    if ($util.Long)\n                        (message.ino = $util.Long.fromValue(object.ino)).unsigned = true;\n                    else if (typeof object.ino === \"string\")\n                        message.ino = parseInt(object.ino, 10);\n                    else if (typeof object.ino === \"number\")\n                        message.ino = object.ino;\n                    else if (typeof object.ino === \"object\")\n                        message.ino = new $util.LongBits(object.ino.low >>> 0, object.ino.high >>> 0).toNumber(true);\n                if (object.pos != null)\n                    if ($util.Long)\n                        (message.pos = $util.Long.fromValue(object.pos)).unsigned = false;\n                    else if (typeof object.pos === \"string\")\n                        message.pos = parseInt(object.pos, 10);\n                    else if (typeof object.pos === \"number\")\n                        message.pos = object.pos;\n                    else if (typeof object.pos === \"object\")\n                        message.pos = new $util.LongBits(object.pos.low >>> 0, object.pos.high >>> 0).toNumber();\n                if (object.len != null)\n                    message.len = object.len >>> 0;\n                if (object.flags != null)\n                    message.flags = object.flags >>> 0;\n                return message;\n            };\n\n            /**\n             * Creates a plain object from an Ext4DaWriteBeginFtraceEvent message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof perfetto.protos.Ext4DaWriteBeginFtraceEvent\n             * @static\n             * @param {perfetto.protos.Ext4DaWriteBeginFtraceEvent} message Ext4DaWriteBeginFtraceEvent\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Ext4DaWriteBeginFtraceEvent.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, true);\n                        object.dev = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.dev = options.longs === String ? \"0\" : 0;\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, true);\n                        object.ino = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.ino = options.longs === String ? \"0\" : 0;\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, false);\n                        object.pos = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.pos = options.longs === String ? \"0\" : 0;\n                    object.len = 0;\n                    object.flags = 0;\n                }\n                if (message.dev != null && message.hasOwnProperty(\"dev\"))\n                    if (typeof message.dev === \"number\")\n                        object.dev = options.longs === String ? String(message.dev) : message.dev;\n                    else\n                        object.dev = options.longs === String ? $util.Long.prototype.toString.call(message.dev) : options.longs === Number ? new $util.LongBits(message.dev.low >>> 0, message.dev.high >>> 0).toNumber(true) : message.dev;\n                if (message.ino != null && message.hasOwnProperty(\"ino\"))\n                    if (typeof message.ino === \"number\")\n                        object.ino = options.longs === String ? String(message.ino) : message.ino;\n                    else\n                        object.ino = options.longs === String ? $util.Long.prototype.toString.call(message.ino) : options.longs === Number ? new $util.LongBits(message.ino.low >>> 0, message.ino.high >>> 0).toNumber(true) : message.ino;\n                if (message.pos != null && message.hasOwnProperty(\"pos\"))\n                    if (typeof message.pos === \"number\")\n                        object.pos = options.longs === String ? String(message.pos) : message.pos;\n                    else\n                        object.pos = options.longs === String ? $util.Long.prototype.toString.call(message.pos) : options.longs === Number ? new $util.LongBits(message.pos.low >>> 0, message.pos.high >>> 0).toNumber() : message.pos;\n                if (message.len != null && message.hasOwnProperty(\"len\"))\n                    object.len = message.len;\n                if (message.flags != null && message.hasOwnProperty(\"flags\"))\n                    object.flags = message.flags;\n                return object;\n            };\n\n            /**\n             * Converts this Ext4DaWriteBeginFtraceEvent to JSON.\n             * @function toJSON\n             * @memberof perfetto.protos.Ext4DaWriteBeginFtraceEvent\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Ext4DaWriteBeginFtraceEvent.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Ext4DaWriteBeginFtraceEvent;\n        })();\n\n        protos.Ext4DaWriteEndFtraceEvent = (function() {\n\n            /**\n             * Properties of an Ext4DaWriteEndFtraceEvent.\n             * @memberof perfetto.protos\n             * @interface IExt4DaWriteEndFtraceEvent\n             * @property {number|Long|null} [dev] Ext4DaWriteEndFtraceEvent dev\n             * @property {number|Long|null} [ino] Ext4DaWriteEndFtraceEvent ino\n             * @property {number|Long|null} [pos] Ext4DaWriteEndFtraceEvent pos\n             * @property {number|null} [len] Ext4DaWriteEndFtraceEvent len\n             * @property {number|null} [copied] Ext4DaWriteEndFtraceEvent copied\n             */\n\n            /**\n             * Constructs a new Ext4DaWriteEndFtraceEvent.\n             * @memberof perfetto.protos\n             * @classdesc Represents an Ext4DaWriteEndFtraceEvent.\n             * @implements IExt4DaWriteEndFtraceEvent\n             * @constructor\n             * @param {perfetto.protos.IExt4DaWriteEndFtraceEvent=} [properties] Properties to set\n             */\n            function Ext4DaWriteEndFtraceEvent(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * Ext4DaWriteEndFtraceEvent dev.\n             * @member {number|Long} dev\n             * @memberof perfetto.protos.Ext4DaWriteEndFtraceEvent\n             * @instance\n             */\n            Ext4DaWriteEndFtraceEvent.prototype.dev = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n            /**\n             * Ext4DaWriteEndFtraceEvent ino.\n             * @member {number|Long} ino\n             * @memberof perfetto.protos.Ext4DaWriteEndFtraceEvent\n             * @instance\n             */\n            Ext4DaWriteEndFtraceEvent.prototype.ino = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n            /**\n             * Ext4DaWriteEndFtraceEvent pos.\n             * @member {number|Long} pos\n             * @memberof perfetto.protos.Ext4DaWriteEndFtraceEvent\n             * @instance\n             */\n            Ext4DaWriteEndFtraceEvent.prototype.pos = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n            /**\n             * Ext4DaWriteEndFtraceEvent len.\n             * @member {number} len\n             * @memberof perfetto.protos.Ext4DaWriteEndFtraceEvent\n             * @instance\n             */\n            Ext4DaWriteEndFtraceEvent.prototype.len = 0;\n\n            /**\n             * Ext4DaWriteEndFtraceEvent copied.\n             * @member {number} copied\n             * @memberof perfetto.protos.Ext4DaWriteEndFtraceEvent\n             * @instance\n             */\n            Ext4DaWriteEndFtraceEvent.prototype.copied = 0;\n\n            /**\n             * Creates a new Ext4DaWriteEndFtraceEvent instance using the specified properties.\n             * @function create\n             * @memberof perfetto.protos.Ext4DaWriteEndFtraceEvent\n             * @static\n             * @param {perfetto.protos.IExt4DaWriteEndFtraceEvent=} [properties] Properties to set\n             * @returns {perfetto.protos.Ext4DaWriteEndFtraceEvent} Ext4DaWriteEndFtraceEvent instance\n             */\n            Ext4DaWriteEndFtraceEvent.create = function create(properties) {\n                return new Ext4DaWriteEndFtraceEvent(properties);\n            };\n\n            /**\n             * Encodes the specified Ext4DaWriteEndFtraceEvent message. Does not implicitly {@link perfetto.protos.Ext4DaWriteEndFtraceEvent.verify|verify} messages.\n             * @function encode\n             * @memberof perfetto.protos.Ext4DaWriteEndFtraceEvent\n             * @static\n             * @param {perfetto.protos.IExt4DaWriteEndFtraceEvent} message Ext4DaWriteEndFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Ext4DaWriteEndFtraceEvent.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.dev != null && message.hasOwnProperty(\"dev\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.dev);\n                if (message.ino != null && message.hasOwnProperty(\"ino\"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.ino);\n                if (message.pos != null && message.hasOwnProperty(\"pos\"))\n                    writer.uint32(/* id 3, wireType 0 =*/24).int64(message.pos);\n                if (message.len != null && message.hasOwnProperty(\"len\"))\n                    writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.len);\n                if (message.copied != null && message.hasOwnProperty(\"copied\"))\n                    writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.copied);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified Ext4DaWriteEndFtraceEvent message, length delimited. Does not implicitly {@link perfetto.protos.Ext4DaWriteEndFtraceEvent.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof perfetto.protos.Ext4DaWriteEndFtraceEvent\n             * @static\n             * @param {perfetto.protos.IExt4DaWriteEndFtraceEvent} message Ext4DaWriteEndFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Ext4DaWriteEndFtraceEvent.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes an Ext4DaWriteEndFtraceEvent message from the specified reader or buffer.\n             * @function decode\n             * @memberof perfetto.protos.Ext4DaWriteEndFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {perfetto.protos.Ext4DaWriteEndFtraceEvent} Ext4DaWriteEndFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Ext4DaWriteEndFtraceEvent.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.Ext4DaWriteEndFtraceEvent();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.dev = reader.uint64();\n                        break;\n                    case 2:\n                        message.ino = reader.uint64();\n                        break;\n                    case 3:\n                        message.pos = reader.int64();\n                        break;\n                    case 4:\n                        message.len = reader.uint32();\n                        break;\n                    case 5:\n                        message.copied = reader.uint32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes an Ext4DaWriteEndFtraceEvent message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof perfetto.protos.Ext4DaWriteEndFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {perfetto.protos.Ext4DaWriteEndFtraceEvent} Ext4DaWriteEndFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Ext4DaWriteEndFtraceEvent.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies an Ext4DaWriteEndFtraceEvent message.\n             * @function verify\n             * @memberof perfetto.protos.Ext4DaWriteEndFtraceEvent\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Ext4DaWriteEndFtraceEvent.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.dev != null && message.hasOwnProperty(\"dev\"))\n                    if (!$util.isInteger(message.dev) && !(message.dev && $util.isInteger(message.dev.low) && $util.isInteger(message.dev.high)))\n                        return \"dev: integer|Long expected\";\n                if (message.ino != null && message.hasOwnProperty(\"ino\"))\n                    if (!$util.isInteger(message.ino) && !(message.ino && $util.isInteger(message.ino.low) && $util.isInteger(message.ino.high)))\n                        return \"ino: integer|Long expected\";\n                if (message.pos != null && message.hasOwnProperty(\"pos\"))\n                    if (!$util.isInteger(message.pos) && !(message.pos && $util.isInteger(message.pos.low) && $util.isInteger(message.pos.high)))\n                        return \"pos: integer|Long expected\";\n                if (message.len != null && message.hasOwnProperty(\"len\"))\n                    if (!$util.isInteger(message.len))\n                        return \"len: integer expected\";\n                if (message.copied != null && message.hasOwnProperty(\"copied\"))\n                    if (!$util.isInteger(message.copied))\n                        return \"copied: integer expected\";\n                return null;\n            };\n\n            /**\n             * Creates an Ext4DaWriteEndFtraceEvent message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof perfetto.protos.Ext4DaWriteEndFtraceEvent\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {perfetto.protos.Ext4DaWriteEndFtraceEvent} Ext4DaWriteEndFtraceEvent\n             */\n            Ext4DaWriteEndFtraceEvent.fromObject = function fromObject(object) {\n                if (object instanceof $root.perfetto.protos.Ext4DaWriteEndFtraceEvent)\n                    return object;\n                var message = new $root.perfetto.protos.Ext4DaWriteEndFtraceEvent();\n                if (object.dev != null)\n                    if ($util.Long)\n                        (message.dev = $util.Long.fromValue(object.dev)).unsigned = true;\n                    else if (typeof object.dev === \"string\")\n                        message.dev = parseInt(object.dev, 10);\n                    else if (typeof object.dev === \"number\")\n                        message.dev = object.dev;\n                    else if (typeof object.dev === \"object\")\n                        message.dev = new $util.LongBits(object.dev.low >>> 0, object.dev.high >>> 0).toNumber(true);\n                if (object.ino != null)\n                    if ($util.Long)\n                        (message.ino = $util.Long.fromValue(object.ino)).unsigned = true;\n                    else if (typeof object.ino === \"string\")\n                        message.ino = parseInt(object.ino, 10);\n                    else if (typeof object.ino === \"number\")\n                        message.ino = object.ino;\n                    else if (typeof object.ino === \"object\")\n                        message.ino = new $util.LongBits(object.ino.low >>> 0, object.ino.high >>> 0).toNumber(true);\n                if (object.pos != null)\n                    if ($util.Long)\n                        (message.pos = $util.Long.fromValue(object.pos)).unsigned = false;\n                    else if (typeof object.pos === \"string\")\n                        message.pos = parseInt(object.pos, 10);\n                    else if (typeof object.pos === \"number\")\n                        message.pos = object.pos;\n                    else if (typeof object.pos === \"object\")\n                        message.pos = new $util.LongBits(object.pos.low >>> 0, object.pos.high >>> 0).toNumber();\n                if (object.len != null)\n                    message.len = object.len >>> 0;\n                if (object.copied != null)\n                    message.copied = object.copied >>> 0;\n                return message;\n            };\n\n            /**\n             * Creates a plain object from an Ext4DaWriteEndFtraceEvent message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof perfetto.protos.Ext4DaWriteEndFtraceEvent\n             * @static\n             * @param {perfetto.protos.Ext4DaWriteEndFtraceEvent} message Ext4DaWriteEndFtraceEvent\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Ext4DaWriteEndFtraceEvent.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, true);\n                        object.dev = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.dev = options.longs === String ? \"0\" : 0;\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, true);\n                        object.ino = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.ino = options.longs === String ? \"0\" : 0;\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, false);\n                        object.pos = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.pos = options.longs === String ? \"0\" : 0;\n                    object.len = 0;\n                    object.copied = 0;\n                }\n                if (message.dev != null && message.hasOwnProperty(\"dev\"))\n                    if (typeof message.dev === \"number\")\n                        object.dev = options.longs === String ? String(message.dev) : message.dev;\n                    else\n                        object.dev = options.longs === String ? $util.Long.prototype.toString.call(message.dev) : options.longs === Number ? new $util.LongBits(message.dev.low >>> 0, message.dev.high >>> 0).toNumber(true) : message.dev;\n                if (message.ino != null && message.hasOwnProperty(\"ino\"))\n                    if (typeof message.ino === \"number\")\n                        object.ino = options.longs === String ? String(message.ino) : message.ino;\n                    else\n                        object.ino = options.longs === String ? $util.Long.prototype.toString.call(message.ino) : options.longs === Number ? new $util.LongBits(message.ino.low >>> 0, message.ino.high >>> 0).toNumber(true) : message.ino;\n                if (message.pos != null && message.hasOwnProperty(\"pos\"))\n                    if (typeof message.pos === \"number\")\n                        object.pos = options.longs === String ? String(message.pos) : message.pos;\n                    else\n                        object.pos = options.longs === String ? $util.Long.prototype.toString.call(message.pos) : options.longs === Number ? new $util.LongBits(message.pos.low >>> 0, message.pos.high >>> 0).toNumber() : message.pos;\n                if (message.len != null && message.hasOwnProperty(\"len\"))\n                    object.len = message.len;\n                if (message.copied != null && message.hasOwnProperty(\"copied\"))\n                    object.copied = message.copied;\n                return object;\n            };\n\n            /**\n             * Converts this Ext4DaWriteEndFtraceEvent to JSON.\n             * @function toJSON\n             * @memberof perfetto.protos.Ext4DaWriteEndFtraceEvent\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Ext4DaWriteEndFtraceEvent.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Ext4DaWriteEndFtraceEvent;\n        })();\n\n        protos.Ext4EsLookupExtentEnterFtraceEvent = (function() {\n\n            /**\n             * Properties of an Ext4EsLookupExtentEnterFtraceEvent.\n             * @memberof perfetto.protos\n             * @interface IExt4EsLookupExtentEnterFtraceEvent\n             * @property {number|Long|null} [dev] Ext4EsLookupExtentEnterFtraceEvent dev\n             * @property {number|Long|null} [ino] Ext4EsLookupExtentEnterFtraceEvent ino\n             * @property {number|null} [lblk] Ext4EsLookupExtentEnterFtraceEvent lblk\n             */\n\n            /**\n             * Constructs a new Ext4EsLookupExtentEnterFtraceEvent.\n             * @memberof perfetto.protos\n             * @classdesc Represents an Ext4EsLookupExtentEnterFtraceEvent.\n             * @implements IExt4EsLookupExtentEnterFtraceEvent\n             * @constructor\n             * @param {perfetto.protos.IExt4EsLookupExtentEnterFtraceEvent=} [properties] Properties to set\n             */\n            function Ext4EsLookupExtentEnterFtraceEvent(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * Ext4EsLookupExtentEnterFtraceEvent dev.\n             * @member {number|Long} dev\n             * @memberof perfetto.protos.Ext4EsLookupExtentEnterFtraceEvent\n             * @instance\n             */\n            Ext4EsLookupExtentEnterFtraceEvent.prototype.dev = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n            /**\n             * Ext4EsLookupExtentEnterFtraceEvent ino.\n             * @member {number|Long} ino\n             * @memberof perfetto.protos.Ext4EsLookupExtentEnterFtraceEvent\n             * @instance\n             */\n            Ext4EsLookupExtentEnterFtraceEvent.prototype.ino = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n            /**\n             * Ext4EsLookupExtentEnterFtraceEvent lblk.\n             * @member {number} lblk\n             * @memberof perfetto.protos.Ext4EsLookupExtentEnterFtraceEvent\n             * @instance\n             */\n            Ext4EsLookupExtentEnterFtraceEvent.prototype.lblk = 0;\n\n            /**\n             * Creates a new Ext4EsLookupExtentEnterFtraceEvent instance using the specified properties.\n             * @function create\n             * @memberof perfetto.protos.Ext4EsLookupExtentEnterFtraceEvent\n             * @static\n             * @param {perfetto.protos.IExt4EsLookupExtentEnterFtraceEvent=} [properties] Properties to set\n             * @returns {perfetto.protos.Ext4EsLookupExtentEnterFtraceEvent} Ext4EsLookupExtentEnterFtraceEvent instance\n             */\n            Ext4EsLookupExtentEnterFtraceEvent.create = function create(properties) {\n                return new Ext4EsLookupExtentEnterFtraceEvent(properties);\n            };\n\n            /**\n             * Encodes the specified Ext4EsLookupExtentEnterFtraceEvent message. Does not implicitly {@link perfetto.protos.Ext4EsLookupExtentEnterFtraceEvent.verify|verify} messages.\n             * @function encode\n             * @memberof perfetto.protos.Ext4EsLookupExtentEnterFtraceEvent\n             * @static\n             * @param {perfetto.protos.IExt4EsLookupExtentEnterFtraceEvent} message Ext4EsLookupExtentEnterFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Ext4EsLookupExtentEnterFtraceEvent.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.dev != null && message.hasOwnProperty(\"dev\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.dev);\n                if (message.ino != null && message.hasOwnProperty(\"ino\"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.ino);\n                if (message.lblk != null && message.hasOwnProperty(\"lblk\"))\n                    writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.lblk);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified Ext4EsLookupExtentEnterFtraceEvent message, length delimited. Does not implicitly {@link perfetto.protos.Ext4EsLookupExtentEnterFtraceEvent.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof perfetto.protos.Ext4EsLookupExtentEnterFtraceEvent\n             * @static\n             * @param {perfetto.protos.IExt4EsLookupExtentEnterFtraceEvent} message Ext4EsLookupExtentEnterFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Ext4EsLookupExtentEnterFtraceEvent.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes an Ext4EsLookupExtentEnterFtraceEvent message from the specified reader or buffer.\n             * @function decode\n             * @memberof perfetto.protos.Ext4EsLookupExtentEnterFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {perfetto.protos.Ext4EsLookupExtentEnterFtraceEvent} Ext4EsLookupExtentEnterFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Ext4EsLookupExtentEnterFtraceEvent.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.Ext4EsLookupExtentEnterFtraceEvent();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.dev = reader.uint64();\n                        break;\n                    case 2:\n                        message.ino = reader.uint64();\n                        break;\n                    case 3:\n                        message.lblk = reader.uint32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes an Ext4EsLookupExtentEnterFtraceEvent message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof perfetto.protos.Ext4EsLookupExtentEnterFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {perfetto.protos.Ext4EsLookupExtentEnterFtraceEvent} Ext4EsLookupExtentEnterFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Ext4EsLookupExtentEnterFtraceEvent.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies an Ext4EsLookupExtentEnterFtraceEvent message.\n             * @function verify\n             * @memberof perfetto.protos.Ext4EsLookupExtentEnterFtraceEvent\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Ext4EsLookupExtentEnterFtraceEvent.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.dev != null && message.hasOwnProperty(\"dev\"))\n                    if (!$util.isInteger(message.dev) && !(message.dev && $util.isInteger(message.dev.low) && $util.isInteger(message.dev.high)))\n                        return \"dev: integer|Long expected\";\n                if (message.ino != null && message.hasOwnProperty(\"ino\"))\n                    if (!$util.isInteger(message.ino) && !(message.ino && $util.isInteger(message.ino.low) && $util.isInteger(message.ino.high)))\n                        return \"ino: integer|Long expected\";\n                if (message.lblk != null && message.hasOwnProperty(\"lblk\"))\n                    if (!$util.isInteger(message.lblk))\n                        return \"lblk: integer expected\";\n                return null;\n            };\n\n            /**\n             * Creates an Ext4EsLookupExtentEnterFtraceEvent message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof perfetto.protos.Ext4EsLookupExtentEnterFtraceEvent\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {perfetto.protos.Ext4EsLookupExtentEnterFtraceEvent} Ext4EsLookupExtentEnterFtraceEvent\n             */\n            Ext4EsLookupExtentEnterFtraceEvent.fromObject = function fromObject(object) {\n                if (object instanceof $root.perfetto.protos.Ext4EsLookupExtentEnterFtraceEvent)\n                    return object;\n                var message = new $root.perfetto.protos.Ext4EsLookupExtentEnterFtraceEvent();\n                if (object.dev != null)\n                    if ($util.Long)\n                        (message.dev = $util.Long.fromValue(object.dev)).unsigned = true;\n                    else if (typeof object.dev === \"string\")\n                        message.dev = parseInt(object.dev, 10);\n                    else if (typeof object.dev === \"number\")\n                        message.dev = object.dev;\n                    else if (typeof object.dev === \"object\")\n                        message.dev = new $util.LongBits(object.dev.low >>> 0, object.dev.high >>> 0).toNumber(true);\n                if (object.ino != null)\n                    if ($util.Long)\n                        (message.ino = $util.Long.fromValue(object.ino)).unsigned = true;\n                    else if (typeof object.ino === \"string\")\n                        message.ino = parseInt(object.ino, 10);\n                    else if (typeof object.ino === \"number\")\n                        message.ino = object.ino;\n                    else if (typeof object.ino === \"object\")\n                        message.ino = new $util.LongBits(object.ino.low >>> 0, object.ino.high >>> 0).toNumber(true);\n                if (object.lblk != null)\n                    message.lblk = object.lblk >>> 0;\n                return message;\n            };\n\n            /**\n             * Creates a plain object from an Ext4EsLookupExtentEnterFtraceEvent message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof perfetto.protos.Ext4EsLookupExtentEnterFtraceEvent\n             * @static\n             * @param {perfetto.protos.Ext4EsLookupExtentEnterFtraceEvent} message Ext4EsLookupExtentEnterFtraceEvent\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Ext4EsLookupExtentEnterFtraceEvent.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, true);\n                        object.dev = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.dev = options.longs === String ? \"0\" : 0;\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, true);\n                        object.ino = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.ino = options.longs === String ? \"0\" : 0;\n                    object.lblk = 0;\n                }\n                if (message.dev != null && message.hasOwnProperty(\"dev\"))\n                    if (typeof message.dev === \"number\")\n                        object.dev = options.longs === String ? String(message.dev) : message.dev;\n                    else\n                        object.dev = options.longs === String ? $util.Long.prototype.toString.call(message.dev) : options.longs === Number ? new $util.LongBits(message.dev.low >>> 0, message.dev.high >>> 0).toNumber(true) : message.dev;\n                if (message.ino != null && message.hasOwnProperty(\"ino\"))\n                    if (typeof message.ino === \"number\")\n                        object.ino = options.longs === String ? String(message.ino) : message.ino;\n                    else\n                        object.ino = options.longs === String ? $util.Long.prototype.toString.call(message.ino) : options.longs === Number ? new $util.LongBits(message.ino.low >>> 0, message.ino.high >>> 0).toNumber(true) : message.ino;\n                if (message.lblk != null && message.hasOwnProperty(\"lblk\"))\n                    object.lblk = message.lblk;\n                return object;\n            };\n\n            /**\n             * Converts this Ext4EsLookupExtentEnterFtraceEvent to JSON.\n             * @function toJSON\n             * @memberof perfetto.protos.Ext4EsLookupExtentEnterFtraceEvent\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Ext4EsLookupExtentEnterFtraceEvent.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Ext4EsLookupExtentEnterFtraceEvent;\n        })();\n\n        protos.Ext4EsLookupExtentExitFtraceEvent = (function() {\n\n            /**\n             * Properties of an Ext4EsLookupExtentExitFtraceEvent.\n             * @memberof perfetto.protos\n             * @interface IExt4EsLookupExtentExitFtraceEvent\n             * @property {number|Long|null} [dev] Ext4EsLookupExtentExitFtraceEvent dev\n             * @property {number|Long|null} [ino] Ext4EsLookupExtentExitFtraceEvent ino\n             * @property {number|null} [lblk] Ext4EsLookupExtentExitFtraceEvent lblk\n             * @property {number|null} [len] Ext4EsLookupExtentExitFtraceEvent len\n             * @property {number|Long|null} [pblk] Ext4EsLookupExtentExitFtraceEvent pblk\n             * @property {number|Long|null} [status] Ext4EsLookupExtentExitFtraceEvent status\n             * @property {number|null} [found] Ext4EsLookupExtentExitFtraceEvent found\n             */\n\n            /**\n             * Constructs a new Ext4EsLookupExtentExitFtraceEvent.\n             * @memberof perfetto.protos\n             * @classdesc Represents an Ext4EsLookupExtentExitFtraceEvent.\n             * @implements IExt4EsLookupExtentExitFtraceEvent\n             * @constructor\n             * @param {perfetto.protos.IExt4EsLookupExtentExitFtraceEvent=} [properties] Properties to set\n             */\n            function Ext4EsLookupExtentExitFtraceEvent(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * Ext4EsLookupExtentExitFtraceEvent dev.\n             * @member {number|Long} dev\n             * @memberof perfetto.protos.Ext4EsLookupExtentExitFtraceEvent\n             * @instance\n             */\n            Ext4EsLookupExtentExitFtraceEvent.prototype.dev = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n            /**\n             * Ext4EsLookupExtentExitFtraceEvent ino.\n             * @member {number|Long} ino\n             * @memberof perfetto.protos.Ext4EsLookupExtentExitFtraceEvent\n             * @instance\n             */\n            Ext4EsLookupExtentExitFtraceEvent.prototype.ino = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n            /**\n             * Ext4EsLookupExtentExitFtraceEvent lblk.\n             * @member {number} lblk\n             * @memberof perfetto.protos.Ext4EsLookupExtentExitFtraceEvent\n             * @instance\n             */\n            Ext4EsLookupExtentExitFtraceEvent.prototype.lblk = 0;\n\n            /**\n             * Ext4EsLookupExtentExitFtraceEvent len.\n             * @member {number} len\n             * @memberof perfetto.protos.Ext4EsLookupExtentExitFtraceEvent\n             * @instance\n             */\n            Ext4EsLookupExtentExitFtraceEvent.prototype.len = 0;\n\n            /**\n             * Ext4EsLookupExtentExitFtraceEvent pblk.\n             * @member {number|Long} pblk\n             * @memberof perfetto.protos.Ext4EsLookupExtentExitFtraceEvent\n             * @instance\n             */\n            Ext4EsLookupExtentExitFtraceEvent.prototype.pblk = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n            /**\n             * Ext4EsLookupExtentExitFtraceEvent status.\n             * @member {number|Long} status\n             * @memberof perfetto.protos.Ext4EsLookupExtentExitFtraceEvent\n             * @instance\n             */\n            Ext4EsLookupExtentExitFtraceEvent.prototype.status = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n            /**\n             * Ext4EsLookupExtentExitFtraceEvent found.\n             * @member {number} found\n             * @memberof perfetto.protos.Ext4EsLookupExtentExitFtraceEvent\n             * @instance\n             */\n            Ext4EsLookupExtentExitFtraceEvent.prototype.found = 0;\n\n            /**\n             * Creates a new Ext4EsLookupExtentExitFtraceEvent instance using the specified properties.\n             * @function create\n             * @memberof perfetto.protos.Ext4EsLookupExtentExitFtraceEvent\n             * @static\n             * @param {perfetto.protos.IExt4EsLookupExtentExitFtraceEvent=} [properties] Properties to set\n             * @returns {perfetto.protos.Ext4EsLookupExtentExitFtraceEvent} Ext4EsLookupExtentExitFtraceEvent instance\n             */\n            Ext4EsLookupExtentExitFtraceEvent.create = function create(properties) {\n                return new Ext4EsLookupExtentExitFtraceEvent(properties);\n            };\n\n            /**\n             * Encodes the specified Ext4EsLookupExtentExitFtraceEvent message. Does not implicitly {@link perfetto.protos.Ext4EsLookupExtentExitFtraceEvent.verify|verify} messages.\n             * @function encode\n             * @memberof perfetto.protos.Ext4EsLookupExtentExitFtraceEvent\n             * @static\n             * @param {perfetto.protos.IExt4EsLookupExtentExitFtraceEvent} message Ext4EsLookupExtentExitFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Ext4EsLookupExtentExitFtraceEvent.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.dev != null && message.hasOwnProperty(\"dev\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.dev);\n                if (message.ino != null && message.hasOwnProperty(\"ino\"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.ino);\n                if (message.lblk != null && message.hasOwnProperty(\"lblk\"))\n                    writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.lblk);\n                if (message.len != null && message.hasOwnProperty(\"len\"))\n                    writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.len);\n                if (message.pblk != null && message.hasOwnProperty(\"pblk\"))\n                    writer.uint32(/* id 5, wireType 0 =*/40).uint64(message.pblk);\n                if (message.status != null && message.hasOwnProperty(\"status\"))\n                    writer.uint32(/* id 6, wireType 0 =*/48).uint64(message.status);\n                if (message.found != null && message.hasOwnProperty(\"found\"))\n                    writer.uint32(/* id 7, wireType 0 =*/56).int32(message.found);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified Ext4EsLookupExtentExitFtraceEvent message, length delimited. Does not implicitly {@link perfetto.protos.Ext4EsLookupExtentExitFtraceEvent.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof perfetto.protos.Ext4EsLookupExtentExitFtraceEvent\n             * @static\n             * @param {perfetto.protos.IExt4EsLookupExtentExitFtraceEvent} message Ext4EsLookupExtentExitFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Ext4EsLookupExtentExitFtraceEvent.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes an Ext4EsLookupExtentExitFtraceEvent message from the specified reader or buffer.\n             * @function decode\n             * @memberof perfetto.protos.Ext4EsLookupExtentExitFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {perfetto.protos.Ext4EsLookupExtentExitFtraceEvent} Ext4EsLookupExtentExitFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Ext4EsLookupExtentExitFtraceEvent.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.Ext4EsLookupExtentExitFtraceEvent();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.dev = reader.uint64();\n                        break;\n                    case 2:\n                        message.ino = reader.uint64();\n                        break;\n                    case 3:\n                        message.lblk = reader.uint32();\n                        break;\n                    case 4:\n                        message.len = reader.uint32();\n                        break;\n                    case 5:\n                        message.pblk = reader.uint64();\n                        break;\n                    case 6:\n                        message.status = reader.uint64();\n                        break;\n                    case 7:\n                        message.found = reader.int32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes an Ext4EsLookupExtentExitFtraceEvent message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof perfetto.protos.Ext4EsLookupExtentExitFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {perfetto.protos.Ext4EsLookupExtentExitFtraceEvent} Ext4EsLookupExtentExitFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Ext4EsLookupExtentExitFtraceEvent.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies an Ext4EsLookupExtentExitFtraceEvent message.\n             * @function verify\n             * @memberof perfetto.protos.Ext4EsLookupExtentExitFtraceEvent\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Ext4EsLookupExtentExitFtraceEvent.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.dev != null && message.hasOwnProperty(\"dev\"))\n                    if (!$util.isInteger(message.dev) && !(message.dev && $util.isInteger(message.dev.low) && $util.isInteger(message.dev.high)))\n                        return \"dev: integer|Long expected\";\n                if (message.ino != null && message.hasOwnProperty(\"ino\"))\n                    if (!$util.isInteger(message.ino) && !(message.ino && $util.isInteger(message.ino.low) && $util.isInteger(message.ino.high)))\n                        return \"ino: integer|Long expected\";\n                if (message.lblk != null && message.hasOwnProperty(\"lblk\"))\n                    if (!$util.isInteger(message.lblk))\n                        return \"lblk: integer expected\";\n                if (message.len != null && message.hasOwnProperty(\"len\"))\n                    if (!$util.isInteger(message.len))\n                        return \"len: integer expected\";\n                if (message.pblk != null && message.hasOwnProperty(\"pblk\"))\n                    if (!$util.isInteger(message.pblk) && !(message.pblk && $util.isInteger(message.pblk.low) && $util.isInteger(message.pblk.high)))\n                        return \"pblk: integer|Long expected\";\n                if (message.status != null && message.hasOwnProperty(\"status\"))\n                    if (!$util.isInteger(message.status) && !(message.status && $util.isInteger(message.status.low) && $util.isInteger(message.status.high)))\n                        return \"status: integer|Long expected\";\n                if (message.found != null && message.hasOwnProperty(\"found\"))\n                    if (!$util.isInteger(message.found))\n                        return \"found: integer expected\";\n                return null;\n            };\n\n            /**\n             * Creates an Ext4EsLookupExtentExitFtraceEvent message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof perfetto.protos.Ext4EsLookupExtentExitFtraceEvent\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {perfetto.protos.Ext4EsLookupExtentExitFtraceEvent} Ext4EsLookupExtentExitFtraceEvent\n             */\n            Ext4EsLookupExtentExitFtraceEvent.fromObject = function fromObject(object) {\n                if (object instanceof $root.perfetto.protos.Ext4EsLookupExtentExitFtraceEvent)\n                    return object;\n                var message = new $root.perfetto.protos.Ext4EsLookupExtentExitFtraceEvent();\n                if (object.dev != null)\n                    if ($util.Long)\n                        (message.dev = $util.Long.fromValue(object.dev)).unsigned = true;\n                    else if (typeof object.dev === \"string\")\n                        message.dev = parseInt(object.dev, 10);\n                    else if (typeof object.dev === \"number\")\n                        message.dev = object.dev;\n                    else if (typeof object.dev === \"object\")\n                        message.dev = new $util.LongBits(object.dev.low >>> 0, object.dev.high >>> 0).toNumber(true);\n                if (object.ino != null)\n                    if ($util.Long)\n                        (message.ino = $util.Long.fromValue(object.ino)).unsigned = true;\n                    else if (typeof object.ino === \"string\")\n                        message.ino = parseInt(object.ino, 10);\n                    else if (typeof object.ino === \"number\")\n                        message.ino = object.ino;\n                    else if (typeof object.ino === \"object\")\n                        message.ino = new $util.LongBits(object.ino.low >>> 0, object.ino.high >>> 0).toNumber(true);\n                if (object.lblk != null)\n                    message.lblk = object.lblk >>> 0;\n                if (object.len != null)\n                    message.len = object.len >>> 0;\n                if (object.pblk != null)\n                    if ($util.Long)\n                        (message.pblk = $util.Long.fromValue(object.pblk)).unsigned = true;\n                    else if (typeof object.pblk === \"string\")\n                        message.pblk = parseInt(object.pblk, 10);\n                    else if (typeof object.pblk === \"number\")\n                        message.pblk = object.pblk;\n                    else if (typeof object.pblk === \"object\")\n                        message.pblk = new $util.LongBits(object.pblk.low >>> 0, object.pblk.high >>> 0).toNumber(true);\n                if (object.status != null)\n                    if ($util.Long)\n                        (message.status = $util.Long.fromValue(object.status)).unsigned = true;\n                    else if (typeof object.status === \"string\")\n                        message.status = parseInt(object.status, 10);\n                    else if (typeof object.status === \"number\")\n                        message.status = object.status;\n                    else if (typeof object.status === \"object\")\n                        message.status = new $util.LongBits(object.status.low >>> 0, object.status.high >>> 0).toNumber(true);\n                if (object.found != null)\n                    message.found = object.found | 0;\n                return message;\n            };\n\n            /**\n             * Creates a plain object from an Ext4EsLookupExtentExitFtraceEvent message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof perfetto.protos.Ext4EsLookupExtentExitFtraceEvent\n             * @static\n             * @param {perfetto.protos.Ext4EsLookupExtentExitFtraceEvent} message Ext4EsLookupExtentExitFtraceEvent\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Ext4EsLookupExtentExitFtraceEvent.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, true);\n                        object.dev = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.dev = options.longs === String ? \"0\" : 0;\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, true);\n                        object.ino = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.ino = options.longs === String ? \"0\" : 0;\n                    object.lblk = 0;\n                    object.len = 0;\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, true);\n                        object.pblk = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.pblk = options.longs === String ? \"0\" : 0;\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, true);\n                        object.status = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.status = options.longs === String ? \"0\" : 0;\n                    object.found = 0;\n                }\n                if (message.dev != null && message.hasOwnProperty(\"dev\"))\n                    if (typeof message.dev === \"number\")\n                        object.dev = options.longs === String ? String(message.dev) : message.dev;\n                    else\n                        object.dev = options.longs === String ? $util.Long.prototype.toString.call(message.dev) : options.longs === Number ? new $util.LongBits(message.dev.low >>> 0, message.dev.high >>> 0).toNumber(true) : message.dev;\n                if (message.ino != null && message.hasOwnProperty(\"ino\"))\n                    if (typeof message.ino === \"number\")\n                        object.ino = options.longs === String ? String(message.ino) : message.ino;\n                    else\n                        object.ino = options.longs === String ? $util.Long.prototype.toString.call(message.ino) : options.longs === Number ? new $util.LongBits(message.ino.low >>> 0, message.ino.high >>> 0).toNumber(true) : message.ino;\n                if (message.lblk != null && message.hasOwnProperty(\"lblk\"))\n                    object.lblk = message.lblk;\n                if (message.len != null && message.hasOwnProperty(\"len\"))\n                    object.len = message.len;\n                if (message.pblk != null && message.hasOwnProperty(\"pblk\"))\n                    if (typeof message.pblk === \"number\")\n                        object.pblk = options.longs === String ? String(message.pblk) : message.pblk;\n                    else\n                        object.pblk = options.longs === String ? $util.Long.prototype.toString.call(message.pblk) : options.longs === Number ? new $util.LongBits(message.pblk.low >>> 0, message.pblk.high >>> 0).toNumber(true) : message.pblk;\n                if (message.status != null && message.hasOwnProperty(\"status\"))\n                    if (typeof message.status === \"number\")\n                        object.status = options.longs === String ? String(message.status) : message.status;\n                    else\n                        object.status = options.longs === String ? $util.Long.prototype.toString.call(message.status) : options.longs === Number ? new $util.LongBits(message.status.low >>> 0, message.status.high >>> 0).toNumber(true) : message.status;\n                if (message.found != null && message.hasOwnProperty(\"found\"))\n                    object.found = message.found;\n                return object;\n            };\n\n            /**\n             * Converts this Ext4EsLookupExtentExitFtraceEvent to JSON.\n             * @function toJSON\n             * @memberof perfetto.protos.Ext4EsLookupExtentExitFtraceEvent\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Ext4EsLookupExtentExitFtraceEvent.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Ext4EsLookupExtentExitFtraceEvent;\n        })();\n\n        protos.Ext4LoadInodeFtraceEvent = (function() {\n\n            /**\n             * Properties of an Ext4LoadInodeFtraceEvent.\n             * @memberof perfetto.protos\n             * @interface IExt4LoadInodeFtraceEvent\n             * @property {number|Long|null} [dev] Ext4LoadInodeFtraceEvent dev\n             * @property {number|Long|null} [ino] Ext4LoadInodeFtraceEvent ino\n             */\n\n            /**\n             * Constructs a new Ext4LoadInodeFtraceEvent.\n             * @memberof perfetto.protos\n             * @classdesc Represents an Ext4LoadInodeFtraceEvent.\n             * @implements IExt4LoadInodeFtraceEvent\n             * @constructor\n             * @param {perfetto.protos.IExt4LoadInodeFtraceEvent=} [properties] Properties to set\n             */\n            function Ext4LoadInodeFtraceEvent(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * Ext4LoadInodeFtraceEvent dev.\n             * @member {number|Long} dev\n             * @memberof perfetto.protos.Ext4LoadInodeFtraceEvent\n             * @instance\n             */\n            Ext4LoadInodeFtraceEvent.prototype.dev = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n            /**\n             * Ext4LoadInodeFtraceEvent ino.\n             * @member {number|Long} ino\n             * @memberof perfetto.protos.Ext4LoadInodeFtraceEvent\n             * @instance\n             */\n            Ext4LoadInodeFtraceEvent.prototype.ino = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n            /**\n             * Creates a new Ext4LoadInodeFtraceEvent instance using the specified properties.\n             * @function create\n             * @memberof perfetto.protos.Ext4LoadInodeFtraceEvent\n             * @static\n             * @param {perfetto.protos.IExt4LoadInodeFtraceEvent=} [properties] Properties to set\n             * @returns {perfetto.protos.Ext4LoadInodeFtraceEvent} Ext4LoadInodeFtraceEvent instance\n             */\n            Ext4LoadInodeFtraceEvent.create = function create(properties) {\n                return new Ext4LoadInodeFtraceEvent(properties);\n            };\n\n            /**\n             * Encodes the specified Ext4LoadInodeFtraceEvent message. Does not implicitly {@link perfetto.protos.Ext4LoadInodeFtraceEvent.verify|verify} messages.\n             * @function encode\n             * @memberof perfetto.protos.Ext4LoadInodeFtraceEvent\n             * @static\n             * @param {perfetto.protos.IExt4LoadInodeFtraceEvent} message Ext4LoadInodeFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Ext4LoadInodeFtraceEvent.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.dev != null && message.hasOwnProperty(\"dev\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.dev);\n                if (message.ino != null && message.hasOwnProperty(\"ino\"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.ino);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified Ext4LoadInodeFtraceEvent message, length delimited. Does not implicitly {@link perfetto.protos.Ext4LoadInodeFtraceEvent.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof perfetto.protos.Ext4LoadInodeFtraceEvent\n             * @static\n             * @param {perfetto.protos.IExt4LoadInodeFtraceEvent} message Ext4LoadInodeFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Ext4LoadInodeFtraceEvent.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes an Ext4LoadInodeFtraceEvent message from the specified reader or buffer.\n             * @function decode\n             * @memberof perfetto.protos.Ext4LoadInodeFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {perfetto.protos.Ext4LoadInodeFtraceEvent} Ext4LoadInodeFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Ext4LoadInodeFtraceEvent.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.Ext4LoadInodeFtraceEvent();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.dev = reader.uint64();\n                        break;\n                    case 2:\n                        message.ino = reader.uint64();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes an Ext4LoadInodeFtraceEvent message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof perfetto.protos.Ext4LoadInodeFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {perfetto.protos.Ext4LoadInodeFtraceEvent} Ext4LoadInodeFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Ext4LoadInodeFtraceEvent.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies an Ext4LoadInodeFtraceEvent message.\n             * @function verify\n             * @memberof perfetto.protos.Ext4LoadInodeFtraceEvent\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Ext4LoadInodeFtraceEvent.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.dev != null && message.hasOwnProperty(\"dev\"))\n                    if (!$util.isInteger(message.dev) && !(message.dev && $util.isInteger(message.dev.low) && $util.isInteger(message.dev.high)))\n                        return \"dev: integer|Long expected\";\n                if (message.ino != null && message.hasOwnProperty(\"ino\"))\n                    if (!$util.isInteger(message.ino) && !(message.ino && $util.isInteger(message.ino.low) && $util.isInteger(message.ino.high)))\n                        return \"ino: integer|Long expected\";\n                return null;\n            };\n\n            /**\n             * Creates an Ext4LoadInodeFtraceEvent message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof perfetto.protos.Ext4LoadInodeFtraceEvent\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {perfetto.protos.Ext4LoadInodeFtraceEvent} Ext4LoadInodeFtraceEvent\n             */\n            Ext4LoadInodeFtraceEvent.fromObject = function fromObject(object) {\n                if (object instanceof $root.perfetto.protos.Ext4LoadInodeFtraceEvent)\n                    return object;\n                var message = new $root.perfetto.protos.Ext4LoadInodeFtraceEvent();\n                if (object.dev != null)\n                    if ($util.Long)\n                        (message.dev = $util.Long.fromValue(object.dev)).unsigned = true;\n                    else if (typeof object.dev === \"string\")\n                        message.dev = parseInt(object.dev, 10);\n                    else if (typeof object.dev === \"number\")\n                        message.dev = object.dev;\n                    else if (typeof object.dev === \"object\")\n                        message.dev = new $util.LongBits(object.dev.low >>> 0, object.dev.high >>> 0).toNumber(true);\n                if (object.ino != null)\n                    if ($util.Long)\n                        (message.ino = $util.Long.fromValue(object.ino)).unsigned = true;\n                    else if (typeof object.ino === \"string\")\n                        message.ino = parseInt(object.ino, 10);\n                    else if (typeof object.ino === \"number\")\n                        message.ino = object.ino;\n                    else if (typeof object.ino === \"object\")\n                        message.ino = new $util.LongBits(object.ino.low >>> 0, object.ino.high >>> 0).toNumber(true);\n                return message;\n            };\n\n            /**\n             * Creates a plain object from an Ext4LoadInodeFtraceEvent message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof perfetto.protos.Ext4LoadInodeFtraceEvent\n             * @static\n             * @param {perfetto.protos.Ext4LoadInodeFtraceEvent} message Ext4LoadInodeFtraceEvent\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Ext4LoadInodeFtraceEvent.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, true);\n                        object.dev = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.dev = options.longs === String ? \"0\" : 0;\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, true);\n                        object.ino = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.ino = options.longs === String ? \"0\" : 0;\n                }\n                if (message.dev != null && message.hasOwnProperty(\"dev\"))\n                    if (typeof message.dev === \"number\")\n                        object.dev = options.longs === String ? String(message.dev) : message.dev;\n                    else\n                        object.dev = options.longs === String ? $util.Long.prototype.toString.call(message.dev) : options.longs === Number ? new $util.LongBits(message.dev.low >>> 0, message.dev.high >>> 0).toNumber(true) : message.dev;\n                if (message.ino != null && message.hasOwnProperty(\"ino\"))\n                    if (typeof message.ino === \"number\")\n                        object.ino = options.longs === String ? String(message.ino) : message.ino;\n                    else\n                        object.ino = options.longs === String ? $util.Long.prototype.toString.call(message.ino) : options.longs === Number ? new $util.LongBits(message.ino.low >>> 0, message.ino.high >>> 0).toNumber(true) : message.ino;\n                return object;\n            };\n\n            /**\n             * Converts this Ext4LoadInodeFtraceEvent to JSON.\n             * @function toJSON\n             * @memberof perfetto.protos.Ext4LoadInodeFtraceEvent\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Ext4LoadInodeFtraceEvent.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Ext4LoadInodeFtraceEvent;\n        })();\n\n        protos.Ext4SyncFileEnterFtraceEvent = (function() {\n\n            /**\n             * Properties of an Ext4SyncFileEnterFtraceEvent.\n             * @memberof perfetto.protos\n             * @interface IExt4SyncFileEnterFtraceEvent\n             * @property {number|Long|null} [dev] Ext4SyncFileEnterFtraceEvent dev\n             * @property {number|Long|null} [ino] Ext4SyncFileEnterFtraceEvent ino\n             * @property {number|Long|null} [parent] Ext4SyncFileEnterFtraceEvent parent\n             * @property {number|null} [datasync] Ext4SyncFileEnterFtraceEvent datasync\n             */\n\n            /**\n             * Constructs a new Ext4SyncFileEnterFtraceEvent.\n             * @memberof perfetto.protos\n             * @classdesc Represents an Ext4SyncFileEnterFtraceEvent.\n             * @implements IExt4SyncFileEnterFtraceEvent\n             * @constructor\n             * @param {perfetto.protos.IExt4SyncFileEnterFtraceEvent=} [properties] Properties to set\n             */\n            function Ext4SyncFileEnterFtraceEvent(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * Ext4SyncFileEnterFtraceEvent dev.\n             * @member {number|Long} dev\n             * @memberof perfetto.protos.Ext4SyncFileEnterFtraceEvent\n             * @instance\n             */\n            Ext4SyncFileEnterFtraceEvent.prototype.dev = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n            /**\n             * Ext4SyncFileEnterFtraceEvent ino.\n             * @member {number|Long} ino\n             * @memberof perfetto.protos.Ext4SyncFileEnterFtraceEvent\n             * @instance\n             */\n            Ext4SyncFileEnterFtraceEvent.prototype.ino = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n            /**\n             * Ext4SyncFileEnterFtraceEvent parent.\n             * @member {number|Long} parent\n             * @memberof perfetto.protos.Ext4SyncFileEnterFtraceEvent\n             * @instance\n             */\n            Ext4SyncFileEnterFtraceEvent.prototype.parent = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n            /**\n             * Ext4SyncFileEnterFtraceEvent datasync.\n             * @member {number} datasync\n             * @memberof perfetto.protos.Ext4SyncFileEnterFtraceEvent\n             * @instance\n             */\n            Ext4SyncFileEnterFtraceEvent.prototype.datasync = 0;\n\n            /**\n             * Creates a new Ext4SyncFileEnterFtraceEvent instance using the specified properties.\n             * @function create\n             * @memberof perfetto.protos.Ext4SyncFileEnterFtraceEvent\n             * @static\n             * @param {perfetto.protos.IExt4SyncFileEnterFtraceEvent=} [properties] Properties to set\n             * @returns {perfetto.protos.Ext4SyncFileEnterFtraceEvent} Ext4SyncFileEnterFtraceEvent instance\n             */\n            Ext4SyncFileEnterFtraceEvent.create = function create(properties) {\n                return new Ext4SyncFileEnterFtraceEvent(properties);\n            };\n\n            /**\n             * Encodes the specified Ext4SyncFileEnterFtraceEvent message. Does not implicitly {@link perfetto.protos.Ext4SyncFileEnterFtraceEvent.verify|verify} messages.\n             * @function encode\n             * @memberof perfetto.protos.Ext4SyncFileEnterFtraceEvent\n             * @static\n             * @param {perfetto.protos.IExt4SyncFileEnterFtraceEvent} message Ext4SyncFileEnterFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Ext4SyncFileEnterFtraceEvent.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.dev != null && message.hasOwnProperty(\"dev\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.dev);\n                if (message.ino != null && message.hasOwnProperty(\"ino\"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.ino);\n                if (message.parent != null && message.hasOwnProperty(\"parent\"))\n                    writer.uint32(/* id 3, wireType 0 =*/24).uint64(message.parent);\n                if (message.datasync != null && message.hasOwnProperty(\"datasync\"))\n                    writer.uint32(/* id 4, wireType 0 =*/32).int32(message.datasync);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified Ext4SyncFileEnterFtraceEvent message, length delimited. Does not implicitly {@link perfetto.protos.Ext4SyncFileEnterFtraceEvent.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof perfetto.protos.Ext4SyncFileEnterFtraceEvent\n             * @static\n             * @param {perfetto.protos.IExt4SyncFileEnterFtraceEvent} message Ext4SyncFileEnterFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Ext4SyncFileEnterFtraceEvent.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes an Ext4SyncFileEnterFtraceEvent message from the specified reader or buffer.\n             * @function decode\n             * @memberof perfetto.protos.Ext4SyncFileEnterFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {perfetto.protos.Ext4SyncFileEnterFtraceEvent} Ext4SyncFileEnterFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Ext4SyncFileEnterFtraceEvent.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.Ext4SyncFileEnterFtraceEvent();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.dev = reader.uint64();\n                        break;\n                    case 2:\n                        message.ino = reader.uint64();\n                        break;\n                    case 3:\n                        message.parent = reader.uint64();\n                        break;\n                    case 4:\n                        message.datasync = reader.int32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes an Ext4SyncFileEnterFtraceEvent message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof perfetto.protos.Ext4SyncFileEnterFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {perfetto.protos.Ext4SyncFileEnterFtraceEvent} Ext4SyncFileEnterFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Ext4SyncFileEnterFtraceEvent.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies an Ext4SyncFileEnterFtraceEvent message.\n             * @function verify\n             * @memberof perfetto.protos.Ext4SyncFileEnterFtraceEvent\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Ext4SyncFileEnterFtraceEvent.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.dev != null && message.hasOwnProperty(\"dev\"))\n                    if (!$util.isInteger(message.dev) && !(message.dev && $util.isInteger(message.dev.low) && $util.isInteger(message.dev.high)))\n                        return \"dev: integer|Long expected\";\n                if (message.ino != null && message.hasOwnProperty(\"ino\"))\n                    if (!$util.isInteger(message.ino) && !(message.ino && $util.isInteger(message.ino.low) && $util.isInteger(message.ino.high)))\n                        return \"ino: integer|Long expected\";\n                if (message.parent != null && message.hasOwnProperty(\"parent\"))\n                    if (!$util.isInteger(message.parent) && !(message.parent && $util.isInteger(message.parent.low) && $util.isInteger(message.parent.high)))\n                        return \"parent: integer|Long expected\";\n                if (message.datasync != null && message.hasOwnProperty(\"datasync\"))\n                    if (!$util.isInteger(message.datasync))\n                        return \"datasync: integer expected\";\n                return null;\n            };\n\n            /**\n             * Creates an Ext4SyncFileEnterFtraceEvent message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof perfetto.protos.Ext4SyncFileEnterFtraceEvent\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {perfetto.protos.Ext4SyncFileEnterFtraceEvent} Ext4SyncFileEnterFtraceEvent\n             */\n            Ext4SyncFileEnterFtraceEvent.fromObject = function fromObject(object) {\n                if (object instanceof $root.perfetto.protos.Ext4SyncFileEnterFtraceEvent)\n                    return object;\n                var message = new $root.perfetto.protos.Ext4SyncFileEnterFtraceEvent();\n                if (object.dev != null)\n                    if ($util.Long)\n                        (message.dev = $util.Long.fromValue(object.dev)).unsigned = true;\n                    else if (typeof object.dev === \"string\")\n                        message.dev = parseInt(object.dev, 10);\n                    else if (typeof object.dev === \"number\")\n                        message.dev = object.dev;\n                    else if (typeof object.dev === \"object\")\n                        message.dev = new $util.LongBits(object.dev.low >>> 0, object.dev.high >>> 0).toNumber(true);\n                if (object.ino != null)\n                    if ($util.Long)\n                        (message.ino = $util.Long.fromValue(object.ino)).unsigned = true;\n                    else if (typeof object.ino === \"string\")\n                        message.ino = parseInt(object.ino, 10);\n                    else if (typeof object.ino === \"number\")\n                        message.ino = object.ino;\n                    else if (typeof object.ino === \"object\")\n                        message.ino = new $util.LongBits(object.ino.low >>> 0, object.ino.high >>> 0).toNumber(true);\n                if (object.parent != null)\n                    if ($util.Long)\n                        (message.parent = $util.Long.fromValue(object.parent)).unsigned = true;\n                    else if (typeof object.parent === \"string\")\n                        message.parent = parseInt(object.parent, 10);\n                    else if (typeof object.parent === \"number\")\n                        message.parent = object.parent;\n                    else if (typeof object.parent === \"object\")\n                        message.parent = new $util.LongBits(object.parent.low >>> 0, object.parent.high >>> 0).toNumber(true);\n                if (object.datasync != null)\n                    message.datasync = object.datasync | 0;\n                return message;\n            };\n\n            /**\n             * Creates a plain object from an Ext4SyncFileEnterFtraceEvent message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof perfetto.protos.Ext4SyncFileEnterFtraceEvent\n             * @static\n             * @param {perfetto.protos.Ext4SyncFileEnterFtraceEvent} message Ext4SyncFileEnterFtraceEvent\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Ext4SyncFileEnterFtraceEvent.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, true);\n                        object.dev = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.dev = options.longs === String ? \"0\" : 0;\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, true);\n                        object.ino = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.ino = options.longs === String ? \"0\" : 0;\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, true);\n                        object.parent = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.parent = options.longs === String ? \"0\" : 0;\n                    object.datasync = 0;\n                }\n                if (message.dev != null && message.hasOwnProperty(\"dev\"))\n                    if (typeof message.dev === \"number\")\n                        object.dev = options.longs === String ? String(message.dev) : message.dev;\n                    else\n                        object.dev = options.longs === String ? $util.Long.prototype.toString.call(message.dev) : options.longs === Number ? new $util.LongBits(message.dev.low >>> 0, message.dev.high >>> 0).toNumber(true) : message.dev;\n                if (message.ino != null && message.hasOwnProperty(\"ino\"))\n                    if (typeof message.ino === \"number\")\n                        object.ino = options.longs === String ? String(message.ino) : message.ino;\n                    else\n                        object.ino = options.longs === String ? $util.Long.prototype.toString.call(message.ino) : options.longs === Number ? new $util.LongBits(message.ino.low >>> 0, message.ino.high >>> 0).toNumber(true) : message.ino;\n                if (message.parent != null && message.hasOwnProperty(\"parent\"))\n                    if (typeof message.parent === \"number\")\n                        object.parent = options.longs === String ? String(message.parent) : message.parent;\n                    else\n                        object.parent = options.longs === String ? $util.Long.prototype.toString.call(message.parent) : options.longs === Number ? new $util.LongBits(message.parent.low >>> 0, message.parent.high >>> 0).toNumber(true) : message.parent;\n                if (message.datasync != null && message.hasOwnProperty(\"datasync\"))\n                    object.datasync = message.datasync;\n                return object;\n            };\n\n            /**\n             * Converts this Ext4SyncFileEnterFtraceEvent to JSON.\n             * @function toJSON\n             * @memberof perfetto.protos.Ext4SyncFileEnterFtraceEvent\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Ext4SyncFileEnterFtraceEvent.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Ext4SyncFileEnterFtraceEvent;\n        })();\n\n        protos.Ext4SyncFileExitFtraceEvent = (function() {\n\n            /**\n             * Properties of an Ext4SyncFileExitFtraceEvent.\n             * @memberof perfetto.protos\n             * @interface IExt4SyncFileExitFtraceEvent\n             * @property {number|Long|null} [dev] Ext4SyncFileExitFtraceEvent dev\n             * @property {number|Long|null} [ino] Ext4SyncFileExitFtraceEvent ino\n             * @property {number|null} [ret] Ext4SyncFileExitFtraceEvent ret\n             */\n\n            /**\n             * Constructs a new Ext4SyncFileExitFtraceEvent.\n             * @memberof perfetto.protos\n             * @classdesc Represents an Ext4SyncFileExitFtraceEvent.\n             * @implements IExt4SyncFileExitFtraceEvent\n             * @constructor\n             * @param {perfetto.protos.IExt4SyncFileExitFtraceEvent=} [properties] Properties to set\n             */\n            function Ext4SyncFileExitFtraceEvent(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * Ext4SyncFileExitFtraceEvent dev.\n             * @member {number|Long} dev\n             * @memberof perfetto.protos.Ext4SyncFileExitFtraceEvent\n             * @instance\n             */\n            Ext4SyncFileExitFtraceEvent.prototype.dev = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n            /**\n             * Ext4SyncFileExitFtraceEvent ino.\n             * @member {number|Long} ino\n             * @memberof perfetto.protos.Ext4SyncFileExitFtraceEvent\n             * @instance\n             */\n            Ext4SyncFileExitFtraceEvent.prototype.ino = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n            /**\n             * Ext4SyncFileExitFtraceEvent ret.\n             * @member {number} ret\n             * @memberof perfetto.protos.Ext4SyncFileExitFtraceEvent\n             * @instance\n             */\n            Ext4SyncFileExitFtraceEvent.prototype.ret = 0;\n\n            /**\n             * Creates a new Ext4SyncFileExitFtraceEvent instance using the specified properties.\n             * @function create\n             * @memberof perfetto.protos.Ext4SyncFileExitFtraceEvent\n             * @static\n             * @param {perfetto.protos.IExt4SyncFileExitFtraceEvent=} [properties] Properties to set\n             * @returns {perfetto.protos.Ext4SyncFileExitFtraceEvent} Ext4SyncFileExitFtraceEvent instance\n             */\n            Ext4SyncFileExitFtraceEvent.create = function create(properties) {\n                return new Ext4SyncFileExitFtraceEvent(properties);\n            };\n\n            /**\n             * Encodes the specified Ext4SyncFileExitFtraceEvent message. Does not implicitly {@link perfetto.protos.Ext4SyncFileExitFtraceEvent.verify|verify} messages.\n             * @function encode\n             * @memberof perfetto.protos.Ext4SyncFileExitFtraceEvent\n             * @static\n             * @param {perfetto.protos.IExt4SyncFileExitFtraceEvent} message Ext4SyncFileExitFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Ext4SyncFileExitFtraceEvent.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.dev != null && message.hasOwnProperty(\"dev\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.dev);\n                if (message.ino != null && message.hasOwnProperty(\"ino\"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.ino);\n                if (message.ret != null && message.hasOwnProperty(\"ret\"))\n                    writer.uint32(/* id 3, wireType 0 =*/24).int32(message.ret);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified Ext4SyncFileExitFtraceEvent message, length delimited. Does not implicitly {@link perfetto.protos.Ext4SyncFileExitFtraceEvent.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof perfetto.protos.Ext4SyncFileExitFtraceEvent\n             * @static\n             * @param {perfetto.protos.IExt4SyncFileExitFtraceEvent} message Ext4SyncFileExitFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Ext4SyncFileExitFtraceEvent.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes an Ext4SyncFileExitFtraceEvent message from the specified reader or buffer.\n             * @function decode\n             * @memberof perfetto.protos.Ext4SyncFileExitFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {perfetto.protos.Ext4SyncFileExitFtraceEvent} Ext4SyncFileExitFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Ext4SyncFileExitFtraceEvent.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.Ext4SyncFileExitFtraceEvent();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.dev = reader.uint64();\n                        break;\n                    case 2:\n                        message.ino = reader.uint64();\n                        break;\n                    case 3:\n                        message.ret = reader.int32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes an Ext4SyncFileExitFtraceEvent message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof perfetto.protos.Ext4SyncFileExitFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {perfetto.protos.Ext4SyncFileExitFtraceEvent} Ext4SyncFileExitFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Ext4SyncFileExitFtraceEvent.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies an Ext4SyncFileExitFtraceEvent message.\n             * @function verify\n             * @memberof perfetto.protos.Ext4SyncFileExitFtraceEvent\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Ext4SyncFileExitFtraceEvent.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.dev != null && message.hasOwnProperty(\"dev\"))\n                    if (!$util.isInteger(message.dev) && !(message.dev && $util.isInteger(message.dev.low) && $util.isInteger(message.dev.high)))\n                        return \"dev: integer|Long expected\";\n                if (message.ino != null && message.hasOwnProperty(\"ino\"))\n                    if (!$util.isInteger(message.ino) && !(message.ino && $util.isInteger(message.ino.low) && $util.isInteger(message.ino.high)))\n                        return \"ino: integer|Long expected\";\n                if (message.ret != null && message.hasOwnProperty(\"ret\"))\n                    if (!$util.isInteger(message.ret))\n                        return \"ret: integer expected\";\n                return null;\n            };\n\n            /**\n             * Creates an Ext4SyncFileExitFtraceEvent message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof perfetto.protos.Ext4SyncFileExitFtraceEvent\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {perfetto.protos.Ext4SyncFileExitFtraceEvent} Ext4SyncFileExitFtraceEvent\n             */\n            Ext4SyncFileExitFtraceEvent.fromObject = function fromObject(object) {\n                if (object instanceof $root.perfetto.protos.Ext4SyncFileExitFtraceEvent)\n                    return object;\n                var message = new $root.perfetto.protos.Ext4SyncFileExitFtraceEvent();\n                if (object.dev != null)\n                    if ($util.Long)\n                        (message.dev = $util.Long.fromValue(object.dev)).unsigned = true;\n                    else if (typeof object.dev === \"string\")\n                        message.dev = parseInt(object.dev, 10);\n                    else if (typeof object.dev === \"number\")\n                        message.dev = object.dev;\n                    else if (typeof object.dev === \"object\")\n                        message.dev = new $util.LongBits(object.dev.low >>> 0, object.dev.high >>> 0).toNumber(true);\n                if (object.ino != null)\n                    if ($util.Long)\n                        (message.ino = $util.Long.fromValue(object.ino)).unsigned = true;\n                    else if (typeof object.ino === \"string\")\n                        message.ino = parseInt(object.ino, 10);\n                    else if (typeof object.ino === \"number\")\n                        message.ino = object.ino;\n                    else if (typeof object.ino === \"object\")\n                        message.ino = new $util.LongBits(object.ino.low >>> 0, object.ino.high >>> 0).toNumber(true);\n                if (object.ret != null)\n                    message.ret = object.ret | 0;\n                return message;\n            };\n\n            /**\n             * Creates a plain object from an Ext4SyncFileExitFtraceEvent message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof perfetto.protos.Ext4SyncFileExitFtraceEvent\n             * @static\n             * @param {perfetto.protos.Ext4SyncFileExitFtraceEvent} message Ext4SyncFileExitFtraceEvent\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Ext4SyncFileExitFtraceEvent.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, true);\n                        object.dev = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.dev = options.longs === String ? \"0\" : 0;\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, true);\n                        object.ino = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.ino = options.longs === String ? \"0\" : 0;\n                    object.ret = 0;\n                }\n                if (message.dev != null && message.hasOwnProperty(\"dev\"))\n                    if (typeof message.dev === \"number\")\n                        object.dev = options.longs === String ? String(message.dev) : message.dev;\n                    else\n                        object.dev = options.longs === String ? $util.Long.prototype.toString.call(message.dev) : options.longs === Number ? new $util.LongBits(message.dev.low >>> 0, message.dev.high >>> 0).toNumber(true) : message.dev;\n                if (message.ino != null && message.hasOwnProperty(\"ino\"))\n                    if (typeof message.ino === \"number\")\n                        object.ino = options.longs === String ? String(message.ino) : message.ino;\n                    else\n                        object.ino = options.longs === String ? $util.Long.prototype.toString.call(message.ino) : options.longs === Number ? new $util.LongBits(message.ino.low >>> 0, message.ino.high >>> 0).toNumber(true) : message.ino;\n                if (message.ret != null && message.hasOwnProperty(\"ret\"))\n                    object.ret = message.ret;\n                return object;\n            };\n\n            /**\n             * Converts this Ext4SyncFileExitFtraceEvent to JSON.\n             * @function toJSON\n             * @memberof perfetto.protos.Ext4SyncFileExitFtraceEvent\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Ext4SyncFileExitFtraceEvent.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Ext4SyncFileExitFtraceEvent;\n        })();\n\n        protos.F2fsGetDataBlockFtraceEvent = (function() {\n\n            /**\n             * Properties of a F2fsGetDataBlockFtraceEvent.\n             * @memberof perfetto.protos\n             * @interface IF2fsGetDataBlockFtraceEvent\n             * @property {number|Long|null} [dev] F2fsGetDataBlockFtraceEvent dev\n             * @property {number|Long|null} [ino] F2fsGetDataBlockFtraceEvent ino\n             * @property {number|Long|null} [iblock] F2fsGetDataBlockFtraceEvent iblock\n             * @property {number|Long|null} [bhStart] F2fsGetDataBlockFtraceEvent bhStart\n             * @property {number|Long|null} [bhSize] F2fsGetDataBlockFtraceEvent bhSize\n             * @property {number|null} [ret] F2fsGetDataBlockFtraceEvent ret\n             */\n\n            /**\n             * Constructs a new F2fsGetDataBlockFtraceEvent.\n             * @memberof perfetto.protos\n             * @classdesc Represents a F2fsGetDataBlockFtraceEvent.\n             * @implements IF2fsGetDataBlockFtraceEvent\n             * @constructor\n             * @param {perfetto.protos.IF2fsGetDataBlockFtraceEvent=} [properties] Properties to set\n             */\n            function F2fsGetDataBlockFtraceEvent(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * F2fsGetDataBlockFtraceEvent dev.\n             * @member {number|Long} dev\n             * @memberof perfetto.protos.F2fsGetDataBlockFtraceEvent\n             * @instance\n             */\n            F2fsGetDataBlockFtraceEvent.prototype.dev = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n            /**\n             * F2fsGetDataBlockFtraceEvent ino.\n             * @member {number|Long} ino\n             * @memberof perfetto.protos.F2fsGetDataBlockFtraceEvent\n             * @instance\n             */\n            F2fsGetDataBlockFtraceEvent.prototype.ino = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n            /**\n             * F2fsGetDataBlockFtraceEvent iblock.\n             * @member {number|Long} iblock\n             * @memberof perfetto.protos.F2fsGetDataBlockFtraceEvent\n             * @instance\n             */\n            F2fsGetDataBlockFtraceEvent.prototype.iblock = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n            /**\n             * F2fsGetDataBlockFtraceEvent bhStart.\n             * @member {number|Long} bhStart\n             * @memberof perfetto.protos.F2fsGetDataBlockFtraceEvent\n             * @instance\n             */\n            F2fsGetDataBlockFtraceEvent.prototype.bhStart = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n            /**\n             * F2fsGetDataBlockFtraceEvent bhSize.\n             * @member {number|Long} bhSize\n             * @memberof perfetto.protos.F2fsGetDataBlockFtraceEvent\n             * @instance\n             */\n            F2fsGetDataBlockFtraceEvent.prototype.bhSize = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n            /**\n             * F2fsGetDataBlockFtraceEvent ret.\n             * @member {number} ret\n             * @memberof perfetto.protos.F2fsGetDataBlockFtraceEvent\n             * @instance\n             */\n            F2fsGetDataBlockFtraceEvent.prototype.ret = 0;\n\n            /**\n             * Creates a new F2fsGetDataBlockFtraceEvent instance using the specified properties.\n             * @function create\n             * @memberof perfetto.protos.F2fsGetDataBlockFtraceEvent\n             * @static\n             * @param {perfetto.protos.IF2fsGetDataBlockFtraceEvent=} [properties] Properties to set\n             * @returns {perfetto.protos.F2fsGetDataBlockFtraceEvent} F2fsGetDataBlockFtraceEvent instance\n             */\n            F2fsGetDataBlockFtraceEvent.create = function create(properties) {\n                return new F2fsGetDataBlockFtraceEvent(properties);\n            };\n\n            /**\n             * Encodes the specified F2fsGetDataBlockFtraceEvent message. Does not implicitly {@link perfetto.protos.F2fsGetDataBlockFtraceEvent.verify|verify} messages.\n             * @function encode\n             * @memberof perfetto.protos.F2fsGetDataBlockFtraceEvent\n             * @static\n             * @param {perfetto.protos.IF2fsGetDataBlockFtraceEvent} message F2fsGetDataBlockFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            F2fsGetDataBlockFtraceEvent.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.dev != null && message.hasOwnProperty(\"dev\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.dev);\n                if (message.ino != null && message.hasOwnProperty(\"ino\"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.ino);\n                if (message.iblock != null && message.hasOwnProperty(\"iblock\"))\n                    writer.uint32(/* id 3, wireType 0 =*/24).uint64(message.iblock);\n                if (message.bhStart != null && message.hasOwnProperty(\"bhStart\"))\n                    writer.uint32(/* id 4, wireType 0 =*/32).uint64(message.bhStart);\n                if (message.bhSize != null && message.hasOwnProperty(\"bhSize\"))\n                    writer.uint32(/* id 5, wireType 0 =*/40).uint64(message.bhSize);\n                if (message.ret != null && message.hasOwnProperty(\"ret\"))\n                    writer.uint32(/* id 6, wireType 0 =*/48).int32(message.ret);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified F2fsGetDataBlockFtraceEvent message, length delimited. Does not implicitly {@link perfetto.protos.F2fsGetDataBlockFtraceEvent.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof perfetto.protos.F2fsGetDataBlockFtraceEvent\n             * @static\n             * @param {perfetto.protos.IF2fsGetDataBlockFtraceEvent} message F2fsGetDataBlockFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            F2fsGetDataBlockFtraceEvent.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a F2fsGetDataBlockFtraceEvent message from the specified reader or buffer.\n             * @function decode\n             * @memberof perfetto.protos.F2fsGetDataBlockFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {perfetto.protos.F2fsGetDataBlockFtraceEvent} F2fsGetDataBlockFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            F2fsGetDataBlockFtraceEvent.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.F2fsGetDataBlockFtraceEvent();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.dev = reader.uint64();\n                        break;\n                    case 2:\n                        message.ino = reader.uint64();\n                        break;\n                    case 3:\n                        message.iblock = reader.uint64();\n                        break;\n                    case 4:\n                        message.bhStart = reader.uint64();\n                        break;\n                    case 5:\n                        message.bhSize = reader.uint64();\n                        break;\n                    case 6:\n                        message.ret = reader.int32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a F2fsGetDataBlockFtraceEvent message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof perfetto.protos.F2fsGetDataBlockFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {perfetto.protos.F2fsGetDataBlockFtraceEvent} F2fsGetDataBlockFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            F2fsGetDataBlockFtraceEvent.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a F2fsGetDataBlockFtraceEvent message.\n             * @function verify\n             * @memberof perfetto.protos.F2fsGetDataBlockFtraceEvent\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            F2fsGetDataBlockFtraceEvent.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.dev != null && message.hasOwnProperty(\"dev\"))\n                    if (!$util.isInteger(message.dev) && !(message.dev && $util.isInteger(message.dev.low) && $util.isInteger(message.dev.high)))\n                        return \"dev: integer|Long expected\";\n                if (message.ino != null && message.hasOwnProperty(\"ino\"))\n                    if (!$util.isInteger(message.ino) && !(message.ino && $util.isInteger(message.ino.low) && $util.isInteger(message.ino.high)))\n                        return \"ino: integer|Long expected\";\n                if (message.iblock != null && message.hasOwnProperty(\"iblock\"))\n                    if (!$util.isInteger(message.iblock) && !(message.iblock && $util.isInteger(message.iblock.low) && $util.isInteger(message.iblock.high)))\n                        return \"iblock: integer|Long expected\";\n                if (message.bhStart != null && message.hasOwnProperty(\"bhStart\"))\n                    if (!$util.isInteger(message.bhStart) && !(message.bhStart && $util.isInteger(message.bhStart.low) && $util.isInteger(message.bhStart.high)))\n                        return \"bhStart: integer|Long expected\";\n                if (message.bhSize != null && message.hasOwnProperty(\"bhSize\"))\n                    if (!$util.isInteger(message.bhSize) && !(message.bhSize && $util.isInteger(message.bhSize.low) && $util.isInteger(message.bhSize.high)))\n                        return \"bhSize: integer|Long expected\";\n                if (message.ret != null && message.hasOwnProperty(\"ret\"))\n                    if (!$util.isInteger(message.ret))\n                        return \"ret: integer expected\";\n                return null;\n            };\n\n            /**\n             * Creates a F2fsGetDataBlockFtraceEvent message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof perfetto.protos.F2fsGetDataBlockFtraceEvent\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {perfetto.protos.F2fsGetDataBlockFtraceEvent} F2fsGetDataBlockFtraceEvent\n             */\n            F2fsGetDataBlockFtraceEvent.fromObject = function fromObject(object) {\n                if (object instanceof $root.perfetto.protos.F2fsGetDataBlockFtraceEvent)\n                    return object;\n                var message = new $root.perfetto.protos.F2fsGetDataBlockFtraceEvent();\n                if (object.dev != null)\n                    if ($util.Long)\n                        (message.dev = $util.Long.fromValue(object.dev)).unsigned = true;\n                    else if (typeof object.dev === \"string\")\n                        message.dev = parseInt(object.dev, 10);\n                    else if (typeof object.dev === \"number\")\n                        message.dev = object.dev;\n                    else if (typeof object.dev === \"object\")\n                        message.dev = new $util.LongBits(object.dev.low >>> 0, object.dev.high >>> 0).toNumber(true);\n                if (object.ino != null)\n                    if ($util.Long)\n                        (message.ino = $util.Long.fromValue(object.ino)).unsigned = true;\n                    else if (typeof object.ino === \"string\")\n                        message.ino = parseInt(object.ino, 10);\n                    else if (typeof object.ino === \"number\")\n                        message.ino = object.ino;\n                    else if (typeof object.ino === \"object\")\n                        message.ino = new $util.LongBits(object.ino.low >>> 0, object.ino.high >>> 0).toNumber(true);\n                if (object.iblock != null)\n                    if ($util.Long)\n                        (message.iblock = $util.Long.fromValue(object.iblock)).unsigned = true;\n                    else if (typeof object.iblock === \"string\")\n                        message.iblock = parseInt(object.iblock, 10);\n                    else if (typeof object.iblock === \"number\")\n                        message.iblock = object.iblock;\n                    else if (typeof object.iblock === \"object\")\n                        message.iblock = new $util.LongBits(object.iblock.low >>> 0, object.iblock.high >>> 0).toNumber(true);\n                if (object.bhStart != null)\n                    if ($util.Long)\n                        (message.bhStart = $util.Long.fromValue(object.bhStart)).unsigned = true;\n                    else if (typeof object.bhStart === \"string\")\n                        message.bhStart = parseInt(object.bhStart, 10);\n                    else if (typeof object.bhStart === \"number\")\n                        message.bhStart = object.bhStart;\n                    else if (typeof object.bhStart === \"object\")\n                        message.bhStart = new $util.LongBits(object.bhStart.low >>> 0, object.bhStart.high >>> 0).toNumber(true);\n                if (object.bhSize != null)\n                    if ($util.Long)\n                        (message.bhSize = $util.Long.fromValue(object.bhSize)).unsigned = true;\n                    else if (typeof object.bhSize === \"string\")\n                        message.bhSize = parseInt(object.bhSize, 10);\n                    else if (typeof object.bhSize === \"number\")\n                        message.bhSize = object.bhSize;\n                    else if (typeof object.bhSize === \"object\")\n                        message.bhSize = new $util.LongBits(object.bhSize.low >>> 0, object.bhSize.high >>> 0).toNumber(true);\n                if (object.ret != null)\n                    message.ret = object.ret | 0;\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a F2fsGetDataBlockFtraceEvent message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof perfetto.protos.F2fsGetDataBlockFtraceEvent\n             * @static\n             * @param {perfetto.protos.F2fsGetDataBlockFtraceEvent} message F2fsGetDataBlockFtraceEvent\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            F2fsGetDataBlockFtraceEvent.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, true);\n                        object.dev = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.dev = options.longs === String ? \"0\" : 0;\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, true);\n                        object.ino = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.ino = options.longs === String ? \"0\" : 0;\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, true);\n                        object.iblock = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.iblock = options.longs === String ? \"0\" : 0;\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, true);\n                        object.bhStart = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.bhStart = options.longs === String ? \"0\" : 0;\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, true);\n                        object.bhSize = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.bhSize = options.longs === String ? \"0\" : 0;\n                    object.ret = 0;\n                }\n                if (message.dev != null && message.hasOwnProperty(\"dev\"))\n                    if (typeof message.dev === \"number\")\n                        object.dev = options.longs === String ? String(message.dev) : message.dev;\n                    else\n                        object.dev = options.longs === String ? $util.Long.prototype.toString.call(message.dev) : options.longs === Number ? new $util.LongBits(message.dev.low >>> 0, message.dev.high >>> 0).toNumber(true) : message.dev;\n                if (message.ino != null && message.hasOwnProperty(\"ino\"))\n                    if (typeof message.ino === \"number\")\n                        object.ino = options.longs === String ? String(message.ino) : message.ino;\n                    else\n                        object.ino = options.longs === String ? $util.Long.prototype.toString.call(message.ino) : options.longs === Number ? new $util.LongBits(message.ino.low >>> 0, message.ino.high >>> 0).toNumber(true) : message.ino;\n                if (message.iblock != null && message.hasOwnProperty(\"iblock\"))\n                    if (typeof message.iblock === \"number\")\n                        object.iblock = options.longs === String ? String(message.iblock) : message.iblock;\n                    else\n                        object.iblock = options.longs === String ? $util.Long.prototype.toString.call(message.iblock) : options.longs === Number ? new $util.LongBits(message.iblock.low >>> 0, message.iblock.high >>> 0).toNumber(true) : message.iblock;\n                if (message.bhStart != null && message.hasOwnProperty(\"bhStart\"))\n                    if (typeof message.bhStart === \"number\")\n                        object.bhStart = options.longs === String ? String(message.bhStart) : message.bhStart;\n                    else\n                        object.bhStart = options.longs === String ? $util.Long.prototype.toString.call(message.bhStart) : options.longs === Number ? new $util.LongBits(message.bhStart.low >>> 0, message.bhStart.high >>> 0).toNumber(true) : message.bhStart;\n                if (message.bhSize != null && message.hasOwnProperty(\"bhSize\"))\n                    if (typeof message.bhSize === \"number\")\n                        object.bhSize = options.longs === String ? String(message.bhSize) : message.bhSize;\n                    else\n                        object.bhSize = options.longs === String ? $util.Long.prototype.toString.call(message.bhSize) : options.longs === Number ? new $util.LongBits(message.bhSize.low >>> 0, message.bhSize.high >>> 0).toNumber(true) : message.bhSize;\n                if (message.ret != null && message.hasOwnProperty(\"ret\"))\n                    object.ret = message.ret;\n                return object;\n            };\n\n            /**\n             * Converts this F2fsGetDataBlockFtraceEvent to JSON.\n             * @function toJSON\n             * @memberof perfetto.protos.F2fsGetDataBlockFtraceEvent\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            F2fsGetDataBlockFtraceEvent.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return F2fsGetDataBlockFtraceEvent;\n        })();\n\n        protos.F2fsIgetFtraceEvent = (function() {\n\n            /**\n             * Properties of a F2fsIgetFtraceEvent.\n             * @memberof perfetto.protos\n             * @interface IF2fsIgetFtraceEvent\n             * @property {number|Long|null} [dev] F2fsIgetFtraceEvent dev\n             * @property {number|Long|null} [ino] F2fsIgetFtraceEvent ino\n             * @property {number|Long|null} [pino] F2fsIgetFtraceEvent pino\n             * @property {number|null} [mode] F2fsIgetFtraceEvent mode\n             * @property {number|Long|null} [size] F2fsIgetFtraceEvent size\n             * @property {number|null} [nlink] F2fsIgetFtraceEvent nlink\n             * @property {number|Long|null} [blocks] F2fsIgetFtraceEvent blocks\n             * @property {number|null} [advise] F2fsIgetFtraceEvent advise\n             */\n\n            /**\n             * Constructs a new F2fsIgetFtraceEvent.\n             * @memberof perfetto.protos\n             * @classdesc Represents a F2fsIgetFtraceEvent.\n             * @implements IF2fsIgetFtraceEvent\n             * @constructor\n             * @param {perfetto.protos.IF2fsIgetFtraceEvent=} [properties] Properties to set\n             */\n            function F2fsIgetFtraceEvent(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * F2fsIgetFtraceEvent dev.\n             * @member {number|Long} dev\n             * @memberof perfetto.protos.F2fsIgetFtraceEvent\n             * @instance\n             */\n            F2fsIgetFtraceEvent.prototype.dev = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n            /**\n             * F2fsIgetFtraceEvent ino.\n             * @member {number|Long} ino\n             * @memberof perfetto.protos.F2fsIgetFtraceEvent\n             * @instance\n             */\n            F2fsIgetFtraceEvent.prototype.ino = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n            /**\n             * F2fsIgetFtraceEvent pino.\n             * @member {number|Long} pino\n             * @memberof perfetto.protos.F2fsIgetFtraceEvent\n             * @instance\n             */\n            F2fsIgetFtraceEvent.prototype.pino = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n            /**\n             * F2fsIgetFtraceEvent mode.\n             * @member {number} mode\n             * @memberof perfetto.protos.F2fsIgetFtraceEvent\n             * @instance\n             */\n            F2fsIgetFtraceEvent.prototype.mode = 0;\n\n            /**\n             * F2fsIgetFtraceEvent size.\n             * @member {number|Long} size\n             * @memberof perfetto.protos.F2fsIgetFtraceEvent\n             * @instance\n             */\n            F2fsIgetFtraceEvent.prototype.size = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n            /**\n             * F2fsIgetFtraceEvent nlink.\n             * @member {number} nlink\n             * @memberof perfetto.protos.F2fsIgetFtraceEvent\n             * @instance\n             */\n            F2fsIgetFtraceEvent.prototype.nlink = 0;\n\n            /**\n             * F2fsIgetFtraceEvent blocks.\n             * @member {number|Long} blocks\n             * @memberof perfetto.protos.F2fsIgetFtraceEvent\n             * @instance\n             */\n            F2fsIgetFtraceEvent.prototype.blocks = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n            /**\n             * F2fsIgetFtraceEvent advise.\n             * @member {number} advise\n             * @memberof perfetto.protos.F2fsIgetFtraceEvent\n             * @instance\n             */\n            F2fsIgetFtraceEvent.prototype.advise = 0;\n\n            /**\n             * Creates a new F2fsIgetFtraceEvent instance using the specified properties.\n             * @function create\n             * @memberof perfetto.protos.F2fsIgetFtraceEvent\n             * @static\n             * @param {perfetto.protos.IF2fsIgetFtraceEvent=} [properties] Properties to set\n             * @returns {perfetto.protos.F2fsIgetFtraceEvent} F2fsIgetFtraceEvent instance\n             */\n            F2fsIgetFtraceEvent.create = function create(properties) {\n                return new F2fsIgetFtraceEvent(properties);\n            };\n\n            /**\n             * Encodes the specified F2fsIgetFtraceEvent message. Does not implicitly {@link perfetto.protos.F2fsIgetFtraceEvent.verify|verify} messages.\n             * @function encode\n             * @memberof perfetto.protos.F2fsIgetFtraceEvent\n             * @static\n             * @param {perfetto.protos.IF2fsIgetFtraceEvent} message F2fsIgetFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            F2fsIgetFtraceEvent.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.dev != null && message.hasOwnProperty(\"dev\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.dev);\n                if (message.ino != null && message.hasOwnProperty(\"ino\"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.ino);\n                if (message.pino != null && message.hasOwnProperty(\"pino\"))\n                    writer.uint32(/* id 3, wireType 0 =*/24).uint64(message.pino);\n                if (message.mode != null && message.hasOwnProperty(\"mode\"))\n                    writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.mode);\n                if (message.size != null && message.hasOwnProperty(\"size\"))\n                    writer.uint32(/* id 5, wireType 0 =*/40).int64(message.size);\n                if (message.nlink != null && message.hasOwnProperty(\"nlink\"))\n                    writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.nlink);\n                if (message.blocks != null && message.hasOwnProperty(\"blocks\"))\n                    writer.uint32(/* id 7, wireType 0 =*/56).uint64(message.blocks);\n                if (message.advise != null && message.hasOwnProperty(\"advise\"))\n                    writer.uint32(/* id 8, wireType 0 =*/64).uint32(message.advise);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified F2fsIgetFtraceEvent message, length delimited. Does not implicitly {@link perfetto.protos.F2fsIgetFtraceEvent.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof perfetto.protos.F2fsIgetFtraceEvent\n             * @static\n             * @param {perfetto.protos.IF2fsIgetFtraceEvent} message F2fsIgetFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            F2fsIgetFtraceEvent.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a F2fsIgetFtraceEvent message from the specified reader or buffer.\n             * @function decode\n             * @memberof perfetto.protos.F2fsIgetFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {perfetto.protos.F2fsIgetFtraceEvent} F2fsIgetFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            F2fsIgetFtraceEvent.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.F2fsIgetFtraceEvent();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.dev = reader.uint64();\n                        break;\n                    case 2:\n                        message.ino = reader.uint64();\n                        break;\n                    case 3:\n                        message.pino = reader.uint64();\n                        break;\n                    case 4:\n                        message.mode = reader.uint32();\n                        break;\n                    case 5:\n                        message.size = reader.int64();\n                        break;\n                    case 6:\n                        message.nlink = reader.uint32();\n                        break;\n                    case 7:\n                        message.blocks = reader.uint64();\n                        break;\n                    case 8:\n                        message.advise = reader.uint32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a F2fsIgetFtraceEvent message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof perfetto.protos.F2fsIgetFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {perfetto.protos.F2fsIgetFtraceEvent} F2fsIgetFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            F2fsIgetFtraceEvent.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a F2fsIgetFtraceEvent message.\n             * @function verify\n             * @memberof perfetto.protos.F2fsIgetFtraceEvent\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            F2fsIgetFtraceEvent.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.dev != null && message.hasOwnProperty(\"dev\"))\n                    if (!$util.isInteger(message.dev) && !(message.dev && $util.isInteger(message.dev.low) && $util.isInteger(message.dev.high)))\n                        return \"dev: integer|Long expected\";\n                if (message.ino != null && message.hasOwnProperty(\"ino\"))\n                    if (!$util.isInteger(message.ino) && !(message.ino && $util.isInteger(message.ino.low) && $util.isInteger(message.ino.high)))\n                        return \"ino: integer|Long expected\";\n                if (message.pino != null && message.hasOwnProperty(\"pino\"))\n                    if (!$util.isInteger(message.pino) && !(message.pino && $util.isInteger(message.pino.low) && $util.isInteger(message.pino.high)))\n                        return \"pino: integer|Long expected\";\n                if (message.mode != null && message.hasOwnProperty(\"mode\"))\n                    if (!$util.isInteger(message.mode))\n                        return \"mode: integer expected\";\n                if (message.size != null && message.hasOwnProperty(\"size\"))\n                    if (!$util.isInteger(message.size) && !(message.size && $util.isInteger(message.size.low) && $util.isInteger(message.size.high)))\n                        return \"size: integer|Long expected\";\n                if (message.nlink != null && message.hasOwnProperty(\"nlink\"))\n                    if (!$util.isInteger(message.nlink))\n                        return \"nlink: integer expected\";\n                if (message.blocks != null && message.hasOwnProperty(\"blocks\"))\n                    if (!$util.isInteger(message.blocks) && !(message.blocks && $util.isInteger(message.blocks.low) && $util.isInteger(message.blocks.high)))\n                        return \"blocks: integer|Long expected\";\n                if (message.advise != null && message.hasOwnProperty(\"advise\"))\n                    if (!$util.isInteger(message.advise))\n                        return \"advise: integer expected\";\n                return null;\n            };\n\n            /**\n             * Creates a F2fsIgetFtraceEvent message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof perfetto.protos.F2fsIgetFtraceEvent\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {perfetto.protos.F2fsIgetFtraceEvent} F2fsIgetFtraceEvent\n             */\n            F2fsIgetFtraceEvent.fromObject = function fromObject(object) {\n                if (object instanceof $root.perfetto.protos.F2fsIgetFtraceEvent)\n                    return object;\n                var message = new $root.perfetto.protos.F2fsIgetFtraceEvent();\n                if (object.dev != null)\n                    if ($util.Long)\n                        (message.dev = $util.Long.fromValue(object.dev)).unsigned = true;\n                    else if (typeof object.dev === \"string\")\n                        message.dev = parseInt(object.dev, 10);\n                    else if (typeof object.dev === \"number\")\n                        message.dev = object.dev;\n                    else if (typeof object.dev === \"object\")\n                        message.dev = new $util.LongBits(object.dev.low >>> 0, object.dev.high >>> 0).toNumber(true);\n                if (object.ino != null)\n                    if ($util.Long)\n                        (message.ino = $util.Long.fromValue(object.ino)).unsigned = true;\n                    else if (typeof object.ino === \"string\")\n                        message.ino = parseInt(object.ino, 10);\n                    else if (typeof object.ino === \"number\")\n                        message.ino = object.ino;\n                    else if (typeof object.ino === \"object\")\n                        message.ino = new $util.LongBits(object.ino.low >>> 0, object.ino.high >>> 0).toNumber(true);\n                if (object.pino != null)\n                    if ($util.Long)\n                        (message.pino = $util.Long.fromValue(object.pino)).unsigned = true;\n                    else if (typeof object.pino === \"string\")\n                        message.pino = parseInt(object.pino, 10);\n                    else if (typeof object.pino === \"number\")\n                        message.pino = object.pino;\n                    else if (typeof object.pino === \"object\")\n                        message.pino = new $util.LongBits(object.pino.low >>> 0, object.pino.high >>> 0).toNumber(true);\n                if (object.mode != null)\n                    message.mode = object.mode >>> 0;\n                if (object.size != null)\n                    if ($util.Long)\n                        (message.size = $util.Long.fromValue(object.size)).unsigned = false;\n                    else if (typeof object.size === \"string\")\n                        message.size = parseInt(object.size, 10);\n                    else if (typeof object.size === \"number\")\n                        message.size = object.size;\n                    else if (typeof object.size === \"object\")\n                        message.size = new $util.LongBits(object.size.low >>> 0, object.size.high >>> 0).toNumber();\n                if (object.nlink != null)\n                    message.nlink = object.nlink >>> 0;\n                if (object.blocks != null)\n                    if ($util.Long)\n                        (message.blocks = $util.Long.fromValue(object.blocks)).unsigned = true;\n                    else if (typeof object.blocks === \"string\")\n                        message.blocks = parseInt(object.blocks, 10);\n                    else if (typeof object.blocks === \"number\")\n                        message.blocks = object.blocks;\n                    else if (typeof object.blocks === \"object\")\n                        message.blocks = new $util.LongBits(object.blocks.low >>> 0, object.blocks.high >>> 0).toNumber(true);\n                if (object.advise != null)\n                    message.advise = object.advise >>> 0;\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a F2fsIgetFtraceEvent message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof perfetto.protos.F2fsIgetFtraceEvent\n             * @static\n             * @param {perfetto.protos.F2fsIgetFtraceEvent} message F2fsIgetFtraceEvent\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            F2fsIgetFtraceEvent.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, true);\n                        object.dev = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.dev = options.longs === String ? \"0\" : 0;\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, true);\n                        object.ino = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.ino = options.longs === String ? \"0\" : 0;\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, true);\n                        object.pino = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.pino = options.longs === String ? \"0\" : 0;\n                    object.mode = 0;\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, false);\n                        object.size = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.size = options.longs === String ? \"0\" : 0;\n                    object.nlink = 0;\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, true);\n                        object.blocks = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.blocks = options.longs === String ? \"0\" : 0;\n                    object.advise = 0;\n                }\n                if (message.dev != null && message.hasOwnProperty(\"dev\"))\n                    if (typeof message.dev === \"number\")\n                        object.dev = options.longs === String ? String(message.dev) : message.dev;\n                    else\n                        object.dev = options.longs === String ? $util.Long.prototype.toString.call(message.dev) : options.longs === Number ? new $util.LongBits(message.dev.low >>> 0, message.dev.high >>> 0).toNumber(true) : message.dev;\n                if (message.ino != null && message.hasOwnProperty(\"ino\"))\n                    if (typeof message.ino === \"number\")\n                        object.ino = options.longs === String ? String(message.ino) : message.ino;\n                    else\n                        object.ino = options.longs === String ? $util.Long.prototype.toString.call(message.ino) : options.longs === Number ? new $util.LongBits(message.ino.low >>> 0, message.ino.high >>> 0).toNumber(true) : message.ino;\n                if (message.pino != null && message.hasOwnProperty(\"pino\"))\n                    if (typeof message.pino === \"number\")\n                        object.pino = options.longs === String ? String(message.pino) : message.pino;\n                    else\n                        object.pino = options.longs === String ? $util.Long.prototype.toString.call(message.pino) : options.longs === Number ? new $util.LongBits(message.pino.low >>> 0, message.pino.high >>> 0).toNumber(true) : message.pino;\n                if (message.mode != null && message.hasOwnProperty(\"mode\"))\n                    object.mode = message.mode;\n                if (message.size != null && message.hasOwnProperty(\"size\"))\n                    if (typeof message.size === \"number\")\n                        object.size = options.longs === String ? String(message.size) : message.size;\n                    else\n                        object.size = options.longs === String ? $util.Long.prototype.toString.call(message.size) : options.longs === Number ? new $util.LongBits(message.size.low >>> 0, message.size.high >>> 0).toNumber() : message.size;\n                if (message.nlink != null && message.hasOwnProperty(\"nlink\"))\n                    object.nlink = message.nlink;\n                if (message.blocks != null && message.hasOwnProperty(\"blocks\"))\n                    if (typeof message.blocks === \"number\")\n                        object.blocks = options.longs === String ? String(message.blocks) : message.blocks;\n                    else\n                        object.blocks = options.longs === String ? $util.Long.prototype.toString.call(message.blocks) : options.longs === Number ? new $util.LongBits(message.blocks.low >>> 0, message.blocks.high >>> 0).toNumber(true) : message.blocks;\n                if (message.advise != null && message.hasOwnProperty(\"advise\"))\n                    object.advise = message.advise;\n                return object;\n            };\n\n            /**\n             * Converts this F2fsIgetFtraceEvent to JSON.\n             * @function toJSON\n             * @memberof perfetto.protos.F2fsIgetFtraceEvent\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            F2fsIgetFtraceEvent.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return F2fsIgetFtraceEvent;\n        })();\n\n        protos.F2fsSyncFileEnterFtraceEvent = (function() {\n\n            /**\n             * Properties of a F2fsSyncFileEnterFtraceEvent.\n             * @memberof perfetto.protos\n             * @interface IF2fsSyncFileEnterFtraceEvent\n             * @property {number|Long|null} [dev] F2fsSyncFileEnterFtraceEvent dev\n             * @property {number|Long|null} [ino] F2fsSyncFileEnterFtraceEvent ino\n             * @property {number|Long|null} [pino] F2fsSyncFileEnterFtraceEvent pino\n             * @property {number|null} [mode] F2fsSyncFileEnterFtraceEvent mode\n             * @property {number|Long|null} [size] F2fsSyncFileEnterFtraceEvent size\n             * @property {number|null} [nlink] F2fsSyncFileEnterFtraceEvent nlink\n             * @property {number|Long|null} [blocks] F2fsSyncFileEnterFtraceEvent blocks\n             * @property {number|null} [advise] F2fsSyncFileEnterFtraceEvent advise\n             */\n\n            /**\n             * Constructs a new F2fsSyncFileEnterFtraceEvent.\n             * @memberof perfetto.protos\n             * @classdesc Represents a F2fsSyncFileEnterFtraceEvent.\n             * @implements IF2fsSyncFileEnterFtraceEvent\n             * @constructor\n             * @param {perfetto.protos.IF2fsSyncFileEnterFtraceEvent=} [properties] Properties to set\n             */\n            function F2fsSyncFileEnterFtraceEvent(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * F2fsSyncFileEnterFtraceEvent dev.\n             * @member {number|Long} dev\n             * @memberof perfetto.protos.F2fsSyncFileEnterFtraceEvent\n             * @instance\n             */\n            F2fsSyncFileEnterFtraceEvent.prototype.dev = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n            /**\n             * F2fsSyncFileEnterFtraceEvent ino.\n             * @member {number|Long} ino\n             * @memberof perfetto.protos.F2fsSyncFileEnterFtraceEvent\n             * @instance\n             */\n            F2fsSyncFileEnterFtraceEvent.prototype.ino = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n            /**\n             * F2fsSyncFileEnterFtraceEvent pino.\n             * @member {number|Long} pino\n             * @memberof perfetto.protos.F2fsSyncFileEnterFtraceEvent\n             * @instance\n             */\n            F2fsSyncFileEnterFtraceEvent.prototype.pino = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n            /**\n             * F2fsSyncFileEnterFtraceEvent mode.\n             * @member {number} mode\n             * @memberof perfetto.protos.F2fsSyncFileEnterFtraceEvent\n             * @instance\n             */\n            F2fsSyncFileEnterFtraceEvent.prototype.mode = 0;\n\n            /**\n             * F2fsSyncFileEnterFtraceEvent size.\n             * @member {number|Long} size\n             * @memberof perfetto.protos.F2fsSyncFileEnterFtraceEvent\n             * @instance\n             */\n            F2fsSyncFileEnterFtraceEvent.prototype.size = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n            /**\n             * F2fsSyncFileEnterFtraceEvent nlink.\n             * @member {number} nlink\n             * @memberof perfetto.protos.F2fsSyncFileEnterFtraceEvent\n             * @instance\n             */\n            F2fsSyncFileEnterFtraceEvent.prototype.nlink = 0;\n\n            /**\n             * F2fsSyncFileEnterFtraceEvent blocks.\n             * @member {number|Long} blocks\n             * @memberof perfetto.protos.F2fsSyncFileEnterFtraceEvent\n             * @instance\n             */\n            F2fsSyncFileEnterFtraceEvent.prototype.blocks = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n            /**\n             * F2fsSyncFileEnterFtraceEvent advise.\n             * @member {number} advise\n             * @memberof perfetto.protos.F2fsSyncFileEnterFtraceEvent\n             * @instance\n             */\n            F2fsSyncFileEnterFtraceEvent.prototype.advise = 0;\n\n            /**\n             * Creates a new F2fsSyncFileEnterFtraceEvent instance using the specified properties.\n             * @function create\n             * @memberof perfetto.protos.F2fsSyncFileEnterFtraceEvent\n             * @static\n             * @param {perfetto.protos.IF2fsSyncFileEnterFtraceEvent=} [properties] Properties to set\n             * @returns {perfetto.protos.F2fsSyncFileEnterFtraceEvent} F2fsSyncFileEnterFtraceEvent instance\n             */\n            F2fsSyncFileEnterFtraceEvent.create = function create(properties) {\n                return new F2fsSyncFileEnterFtraceEvent(properties);\n            };\n\n            /**\n             * Encodes the specified F2fsSyncFileEnterFtraceEvent message. Does not implicitly {@link perfetto.protos.F2fsSyncFileEnterFtraceEvent.verify|verify} messages.\n             * @function encode\n             * @memberof perfetto.protos.F2fsSyncFileEnterFtraceEvent\n             * @static\n             * @param {perfetto.protos.IF2fsSyncFileEnterFtraceEvent} message F2fsSyncFileEnterFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            F2fsSyncFileEnterFtraceEvent.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.dev != null && message.hasOwnProperty(\"dev\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.dev);\n                if (message.ino != null && message.hasOwnProperty(\"ino\"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.ino);\n                if (message.pino != null && message.hasOwnProperty(\"pino\"))\n                    writer.uint32(/* id 3, wireType 0 =*/24).uint64(message.pino);\n                if (message.mode != null && message.hasOwnProperty(\"mode\"))\n                    writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.mode);\n                if (message.size != null && message.hasOwnProperty(\"size\"))\n                    writer.uint32(/* id 5, wireType 0 =*/40).int64(message.size);\n                if (message.nlink != null && message.hasOwnProperty(\"nlink\"))\n                    writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.nlink);\n                if (message.blocks != null && message.hasOwnProperty(\"blocks\"))\n                    writer.uint32(/* id 7, wireType 0 =*/56).uint64(message.blocks);\n                if (message.advise != null && message.hasOwnProperty(\"advise\"))\n                    writer.uint32(/* id 8, wireType 0 =*/64).uint32(message.advise);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified F2fsSyncFileEnterFtraceEvent message, length delimited. Does not implicitly {@link perfetto.protos.F2fsSyncFileEnterFtraceEvent.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof perfetto.protos.F2fsSyncFileEnterFtraceEvent\n             * @static\n             * @param {perfetto.protos.IF2fsSyncFileEnterFtraceEvent} message F2fsSyncFileEnterFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            F2fsSyncFileEnterFtraceEvent.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a F2fsSyncFileEnterFtraceEvent message from the specified reader or buffer.\n             * @function decode\n             * @memberof perfetto.protos.F2fsSyncFileEnterFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {perfetto.protos.F2fsSyncFileEnterFtraceEvent} F2fsSyncFileEnterFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            F2fsSyncFileEnterFtraceEvent.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.F2fsSyncFileEnterFtraceEvent();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.dev = reader.uint64();\n                        break;\n                    case 2:\n                        message.ino = reader.uint64();\n                        break;\n                    case 3:\n                        message.pino = reader.uint64();\n                        break;\n                    case 4:\n                        message.mode = reader.uint32();\n                        break;\n                    case 5:\n                        message.size = reader.int64();\n                        break;\n                    case 6:\n                        message.nlink = reader.uint32();\n                        break;\n                    case 7:\n                        message.blocks = reader.uint64();\n                        break;\n                    case 8:\n                        message.advise = reader.uint32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a F2fsSyncFileEnterFtraceEvent message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof perfetto.protos.F2fsSyncFileEnterFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {perfetto.protos.F2fsSyncFileEnterFtraceEvent} F2fsSyncFileEnterFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            F2fsSyncFileEnterFtraceEvent.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a F2fsSyncFileEnterFtraceEvent message.\n             * @function verify\n             * @memberof perfetto.protos.F2fsSyncFileEnterFtraceEvent\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            F2fsSyncFileEnterFtraceEvent.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.dev != null && message.hasOwnProperty(\"dev\"))\n                    if (!$util.isInteger(message.dev) && !(message.dev && $util.isInteger(message.dev.low) && $util.isInteger(message.dev.high)))\n                        return \"dev: integer|Long expected\";\n                if (message.ino != null && message.hasOwnProperty(\"ino\"))\n                    if (!$util.isInteger(message.ino) && !(message.ino && $util.isInteger(message.ino.low) && $util.isInteger(message.ino.high)))\n                        return \"ino: integer|Long expected\";\n                if (message.pino != null && message.hasOwnProperty(\"pino\"))\n                    if (!$util.isInteger(message.pino) && !(message.pino && $util.isInteger(message.pino.low) && $util.isInteger(message.pino.high)))\n                        return \"pino: integer|Long expected\";\n                if (message.mode != null && message.hasOwnProperty(\"mode\"))\n                    if (!$util.isInteger(message.mode))\n                        return \"mode: integer expected\";\n                if (message.size != null && message.hasOwnProperty(\"size\"))\n                    if (!$util.isInteger(message.size) && !(message.size && $util.isInteger(message.size.low) && $util.isInteger(message.size.high)))\n                        return \"size: integer|Long expected\";\n                if (message.nlink != null && message.hasOwnProperty(\"nlink\"))\n                    if (!$util.isInteger(message.nlink))\n                        return \"nlink: integer expected\";\n                if (message.blocks != null && message.hasOwnProperty(\"blocks\"))\n                    if (!$util.isInteger(message.blocks) && !(message.blocks && $util.isInteger(message.blocks.low) && $util.isInteger(message.blocks.high)))\n                        return \"blocks: integer|Long expected\";\n                if (message.advise != null && message.hasOwnProperty(\"advise\"))\n                    if (!$util.isInteger(message.advise))\n                        return \"advise: integer expected\";\n                return null;\n            };\n\n            /**\n             * Creates a F2fsSyncFileEnterFtraceEvent message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof perfetto.protos.F2fsSyncFileEnterFtraceEvent\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {perfetto.protos.F2fsSyncFileEnterFtraceEvent} F2fsSyncFileEnterFtraceEvent\n             */\n            F2fsSyncFileEnterFtraceEvent.fromObject = function fromObject(object) {\n                if (object instanceof $root.perfetto.protos.F2fsSyncFileEnterFtraceEvent)\n                    return object;\n                var message = new $root.perfetto.protos.F2fsSyncFileEnterFtraceEvent();\n                if (object.dev != null)\n                    if ($util.Long)\n                        (message.dev = $util.Long.fromValue(object.dev)).unsigned = true;\n                    else if (typeof object.dev === \"string\")\n                        message.dev = parseInt(object.dev, 10);\n                    else if (typeof object.dev === \"number\")\n                        message.dev = object.dev;\n                    else if (typeof object.dev === \"object\")\n                        message.dev = new $util.LongBits(object.dev.low >>> 0, object.dev.high >>> 0).toNumber(true);\n                if (object.ino != null)\n                    if ($util.Long)\n                        (message.ino = $util.Long.fromValue(object.ino)).unsigned = true;\n                    else if (typeof object.ino === \"string\")\n                        message.ino = parseInt(object.ino, 10);\n                    else if (typeof object.ino === \"number\")\n                        message.ino = object.ino;\n                    else if (typeof object.ino === \"object\")\n                        message.ino = new $util.LongBits(object.ino.low >>> 0, object.ino.high >>> 0).toNumber(true);\n                if (object.pino != null)\n                    if ($util.Long)\n                        (message.pino = $util.Long.fromValue(object.pino)).unsigned = true;\n                    else if (typeof object.pino === \"string\")\n                        message.pino = parseInt(object.pino, 10);\n                    else if (typeof object.pino === \"number\")\n                        message.pino = object.pino;\n                    else if (typeof object.pino === \"object\")\n                        message.pino = new $util.LongBits(object.pino.low >>> 0, object.pino.high >>> 0).toNumber(true);\n                if (object.mode != null)\n                    message.mode = object.mode >>> 0;\n                if (object.size != null)\n                    if ($util.Long)\n                        (message.size = $util.Long.fromValue(object.size)).unsigned = false;\n                    else if (typeof object.size === \"string\")\n                        message.size = parseInt(object.size, 10);\n                    else if (typeof object.size === \"number\")\n                        message.size = object.size;\n                    else if (typeof object.size === \"object\")\n                        message.size = new $util.LongBits(object.size.low >>> 0, object.size.high >>> 0).toNumber();\n                if (object.nlink != null)\n                    message.nlink = object.nlink >>> 0;\n                if (object.blocks != null)\n                    if ($util.Long)\n                        (message.blocks = $util.Long.fromValue(object.blocks)).unsigned = true;\n                    else if (typeof object.blocks === \"string\")\n                        message.blocks = parseInt(object.blocks, 10);\n                    else if (typeof object.blocks === \"number\")\n                        message.blocks = object.blocks;\n                    else if (typeof object.blocks === \"object\")\n                        message.blocks = new $util.LongBits(object.blocks.low >>> 0, object.blocks.high >>> 0).toNumber(true);\n                if (object.advise != null)\n                    message.advise = object.advise >>> 0;\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a F2fsSyncFileEnterFtraceEvent message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof perfetto.protos.F2fsSyncFileEnterFtraceEvent\n             * @static\n             * @param {perfetto.protos.F2fsSyncFileEnterFtraceEvent} message F2fsSyncFileEnterFtraceEvent\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            F2fsSyncFileEnterFtraceEvent.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, true);\n                        object.dev = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.dev = options.longs === String ? \"0\" : 0;\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, true);\n                        object.ino = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.ino = options.longs === String ? \"0\" : 0;\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, true);\n                        object.pino = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.pino = options.longs === String ? \"0\" : 0;\n                    object.mode = 0;\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, false);\n                        object.size = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.size = options.longs === String ? \"0\" : 0;\n                    object.nlink = 0;\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, true);\n                        object.blocks = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.blocks = options.longs === String ? \"0\" : 0;\n                    object.advise = 0;\n                }\n                if (message.dev != null && message.hasOwnProperty(\"dev\"))\n                    if (typeof message.dev === \"number\")\n                        object.dev = options.longs === String ? String(message.dev) : message.dev;\n                    else\n                        object.dev = options.longs === String ? $util.Long.prototype.toString.call(message.dev) : options.longs === Number ? new $util.LongBits(message.dev.low >>> 0, message.dev.high >>> 0).toNumber(true) : message.dev;\n                if (message.ino != null && message.hasOwnProperty(\"ino\"))\n                    if (typeof message.ino === \"number\")\n                        object.ino = options.longs === String ? String(message.ino) : message.ino;\n                    else\n                        object.ino = options.longs === String ? $util.Long.prototype.toString.call(message.ino) : options.longs === Number ? new $util.LongBits(message.ino.low >>> 0, message.ino.high >>> 0).toNumber(true) : message.ino;\n                if (message.pino != null && message.hasOwnProperty(\"pino\"))\n                    if (typeof message.pino === \"number\")\n                        object.pino = options.longs === String ? String(message.pino) : message.pino;\n                    else\n                        object.pino = options.longs === String ? $util.Long.prototype.toString.call(message.pino) : options.longs === Number ? new $util.LongBits(message.pino.low >>> 0, message.pino.high >>> 0).toNumber(true) : message.pino;\n                if (message.mode != null && message.hasOwnProperty(\"mode\"))\n                    object.mode = message.mode;\n                if (message.size != null && message.hasOwnProperty(\"size\"))\n                    if (typeof message.size === \"number\")\n                        object.size = options.longs === String ? String(message.size) : message.size;\n                    else\n                        object.size = options.longs === String ? $util.Long.prototype.toString.call(message.size) : options.longs === Number ? new $util.LongBits(message.size.low >>> 0, message.size.high >>> 0).toNumber() : message.size;\n                if (message.nlink != null && message.hasOwnProperty(\"nlink\"))\n                    object.nlink = message.nlink;\n                if (message.blocks != null && message.hasOwnProperty(\"blocks\"))\n                    if (typeof message.blocks === \"number\")\n                        object.blocks = options.longs === String ? String(message.blocks) : message.blocks;\n                    else\n                        object.blocks = options.longs === String ? $util.Long.prototype.toString.call(message.blocks) : options.longs === Number ? new $util.LongBits(message.blocks.low >>> 0, message.blocks.high >>> 0).toNumber(true) : message.blocks;\n                if (message.advise != null && message.hasOwnProperty(\"advise\"))\n                    object.advise = message.advise;\n                return object;\n            };\n\n            /**\n             * Converts this F2fsSyncFileEnterFtraceEvent to JSON.\n             * @function toJSON\n             * @memberof perfetto.protos.F2fsSyncFileEnterFtraceEvent\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            F2fsSyncFileEnterFtraceEvent.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return F2fsSyncFileEnterFtraceEvent;\n        })();\n\n        protos.F2fsSyncFileExitFtraceEvent = (function() {\n\n            /**\n             * Properties of a F2fsSyncFileExitFtraceEvent.\n             * @memberof perfetto.protos\n             * @interface IF2fsSyncFileExitFtraceEvent\n             * @property {number|Long|null} [dev] F2fsSyncFileExitFtraceEvent dev\n             * @property {number|Long|null} [ino] F2fsSyncFileExitFtraceEvent ino\n             * @property {number|null} [needCp] F2fsSyncFileExitFtraceEvent needCp\n             * @property {number|null} [datasync] F2fsSyncFileExitFtraceEvent datasync\n             * @property {number|null} [ret] F2fsSyncFileExitFtraceEvent ret\n             */\n\n            /**\n             * Constructs a new F2fsSyncFileExitFtraceEvent.\n             * @memberof perfetto.protos\n             * @classdesc Represents a F2fsSyncFileExitFtraceEvent.\n             * @implements IF2fsSyncFileExitFtraceEvent\n             * @constructor\n             * @param {perfetto.protos.IF2fsSyncFileExitFtraceEvent=} [properties] Properties to set\n             */\n            function F2fsSyncFileExitFtraceEvent(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * F2fsSyncFileExitFtraceEvent dev.\n             * @member {number|Long} dev\n             * @memberof perfetto.protos.F2fsSyncFileExitFtraceEvent\n             * @instance\n             */\n            F2fsSyncFileExitFtraceEvent.prototype.dev = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n            /**\n             * F2fsSyncFileExitFtraceEvent ino.\n             * @member {number|Long} ino\n             * @memberof perfetto.protos.F2fsSyncFileExitFtraceEvent\n             * @instance\n             */\n            F2fsSyncFileExitFtraceEvent.prototype.ino = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n            /**\n             * F2fsSyncFileExitFtraceEvent needCp.\n             * @member {number} needCp\n             * @memberof perfetto.protos.F2fsSyncFileExitFtraceEvent\n             * @instance\n             */\n            F2fsSyncFileExitFtraceEvent.prototype.needCp = 0;\n\n            /**\n             * F2fsSyncFileExitFtraceEvent datasync.\n             * @member {number} datasync\n             * @memberof perfetto.protos.F2fsSyncFileExitFtraceEvent\n             * @instance\n             */\n            F2fsSyncFileExitFtraceEvent.prototype.datasync = 0;\n\n            /**\n             * F2fsSyncFileExitFtraceEvent ret.\n             * @member {number} ret\n             * @memberof perfetto.protos.F2fsSyncFileExitFtraceEvent\n             * @instance\n             */\n            F2fsSyncFileExitFtraceEvent.prototype.ret = 0;\n\n            /**\n             * Creates a new F2fsSyncFileExitFtraceEvent instance using the specified properties.\n             * @function create\n             * @memberof perfetto.protos.F2fsSyncFileExitFtraceEvent\n             * @static\n             * @param {perfetto.protos.IF2fsSyncFileExitFtraceEvent=} [properties] Properties to set\n             * @returns {perfetto.protos.F2fsSyncFileExitFtraceEvent} F2fsSyncFileExitFtraceEvent instance\n             */\n            F2fsSyncFileExitFtraceEvent.create = function create(properties) {\n                return new F2fsSyncFileExitFtraceEvent(properties);\n            };\n\n            /**\n             * Encodes the specified F2fsSyncFileExitFtraceEvent message. Does not implicitly {@link perfetto.protos.F2fsSyncFileExitFtraceEvent.verify|verify} messages.\n             * @function encode\n             * @memberof perfetto.protos.F2fsSyncFileExitFtraceEvent\n             * @static\n             * @param {perfetto.protos.IF2fsSyncFileExitFtraceEvent} message F2fsSyncFileExitFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            F2fsSyncFileExitFtraceEvent.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.dev != null && message.hasOwnProperty(\"dev\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.dev);\n                if (message.ino != null && message.hasOwnProperty(\"ino\"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.ino);\n                if (message.needCp != null && message.hasOwnProperty(\"needCp\"))\n                    writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.needCp);\n                if (message.datasync != null && message.hasOwnProperty(\"datasync\"))\n                    writer.uint32(/* id 4, wireType 0 =*/32).int32(message.datasync);\n                if (message.ret != null && message.hasOwnProperty(\"ret\"))\n                    writer.uint32(/* id 5, wireType 0 =*/40).int32(message.ret);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified F2fsSyncFileExitFtraceEvent message, length delimited. Does not implicitly {@link perfetto.protos.F2fsSyncFileExitFtraceEvent.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof perfetto.protos.F2fsSyncFileExitFtraceEvent\n             * @static\n             * @param {perfetto.protos.IF2fsSyncFileExitFtraceEvent} message F2fsSyncFileExitFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            F2fsSyncFileExitFtraceEvent.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a F2fsSyncFileExitFtraceEvent message from the specified reader or buffer.\n             * @function decode\n             * @memberof perfetto.protos.F2fsSyncFileExitFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {perfetto.protos.F2fsSyncFileExitFtraceEvent} F2fsSyncFileExitFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            F2fsSyncFileExitFtraceEvent.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.F2fsSyncFileExitFtraceEvent();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.dev = reader.uint64();\n                        break;\n                    case 2:\n                        message.ino = reader.uint64();\n                        break;\n                    case 3:\n                        message.needCp = reader.uint32();\n                        break;\n                    case 4:\n                        message.datasync = reader.int32();\n                        break;\n                    case 5:\n                        message.ret = reader.int32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a F2fsSyncFileExitFtraceEvent message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof perfetto.protos.F2fsSyncFileExitFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {perfetto.protos.F2fsSyncFileExitFtraceEvent} F2fsSyncFileExitFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            F2fsSyncFileExitFtraceEvent.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a F2fsSyncFileExitFtraceEvent message.\n             * @function verify\n             * @memberof perfetto.protos.F2fsSyncFileExitFtraceEvent\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            F2fsSyncFileExitFtraceEvent.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.dev != null && message.hasOwnProperty(\"dev\"))\n                    if (!$util.isInteger(message.dev) && !(message.dev && $util.isInteger(message.dev.low) && $util.isInteger(message.dev.high)))\n                        return \"dev: integer|Long expected\";\n                if (message.ino != null && message.hasOwnProperty(\"ino\"))\n                    if (!$util.isInteger(message.ino) && !(message.ino && $util.isInteger(message.ino.low) && $util.isInteger(message.ino.high)))\n                        return \"ino: integer|Long expected\";\n                if (message.needCp != null && message.hasOwnProperty(\"needCp\"))\n                    if (!$util.isInteger(message.needCp))\n                        return \"needCp: integer expected\";\n                if (message.datasync != null && message.hasOwnProperty(\"datasync\"))\n                    if (!$util.isInteger(message.datasync))\n                        return \"datasync: integer expected\";\n                if (message.ret != null && message.hasOwnProperty(\"ret\"))\n                    if (!$util.isInteger(message.ret))\n                        return \"ret: integer expected\";\n                return null;\n            };\n\n            /**\n             * Creates a F2fsSyncFileExitFtraceEvent message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof perfetto.protos.F2fsSyncFileExitFtraceEvent\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {perfetto.protos.F2fsSyncFileExitFtraceEvent} F2fsSyncFileExitFtraceEvent\n             */\n            F2fsSyncFileExitFtraceEvent.fromObject = function fromObject(object) {\n                if (object instanceof $root.perfetto.protos.F2fsSyncFileExitFtraceEvent)\n                    return object;\n                var message = new $root.perfetto.protos.F2fsSyncFileExitFtraceEvent();\n                if (object.dev != null)\n                    if ($util.Long)\n                        (message.dev = $util.Long.fromValue(object.dev)).unsigned = true;\n                    else if (typeof object.dev === \"string\")\n                        message.dev = parseInt(object.dev, 10);\n                    else if (typeof object.dev === \"number\")\n                        message.dev = object.dev;\n                    else if (typeof object.dev === \"object\")\n                        message.dev = new $util.LongBits(object.dev.low >>> 0, object.dev.high >>> 0).toNumber(true);\n                if (object.ino != null)\n                    if ($util.Long)\n                        (message.ino = $util.Long.fromValue(object.ino)).unsigned = true;\n                    else if (typeof object.ino === \"string\")\n                        message.ino = parseInt(object.ino, 10);\n                    else if (typeof object.ino === \"number\")\n                        message.ino = object.ino;\n                    else if (typeof object.ino === \"object\")\n                        message.ino = new $util.LongBits(object.ino.low >>> 0, object.ino.high >>> 0).toNumber(true);\n                if (object.needCp != null)\n                    message.needCp = object.needCp >>> 0;\n                if (object.datasync != null)\n                    message.datasync = object.datasync | 0;\n                if (object.ret != null)\n                    message.ret = object.ret | 0;\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a F2fsSyncFileExitFtraceEvent message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof perfetto.protos.F2fsSyncFileExitFtraceEvent\n             * @static\n             * @param {perfetto.protos.F2fsSyncFileExitFtraceEvent} message F2fsSyncFileExitFtraceEvent\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            F2fsSyncFileExitFtraceEvent.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, true);\n                        object.dev = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.dev = options.longs === String ? \"0\" : 0;\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, true);\n                        object.ino = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.ino = options.longs === String ? \"0\" : 0;\n                    object.needCp = 0;\n                    object.datasync = 0;\n                    object.ret = 0;\n                }\n                if (message.dev != null && message.hasOwnProperty(\"dev\"))\n                    if (typeof message.dev === \"number\")\n                        object.dev = options.longs === String ? String(message.dev) : message.dev;\n                    else\n                        object.dev = options.longs === String ? $util.Long.prototype.toString.call(message.dev) : options.longs === Number ? new $util.LongBits(message.dev.low >>> 0, message.dev.high >>> 0).toNumber(true) : message.dev;\n                if (message.ino != null && message.hasOwnProperty(\"ino\"))\n                    if (typeof message.ino === \"number\")\n                        object.ino = options.longs === String ? String(message.ino) : message.ino;\n                    else\n                        object.ino = options.longs === String ? $util.Long.prototype.toString.call(message.ino) : options.longs === Number ? new $util.LongBits(message.ino.low >>> 0, message.ino.high >>> 0).toNumber(true) : message.ino;\n                if (message.needCp != null && message.hasOwnProperty(\"needCp\"))\n                    object.needCp = message.needCp;\n                if (message.datasync != null && message.hasOwnProperty(\"datasync\"))\n                    object.datasync = message.datasync;\n                if (message.ret != null && message.hasOwnProperty(\"ret\"))\n                    object.ret = message.ret;\n                return object;\n            };\n\n            /**\n             * Converts this F2fsSyncFileExitFtraceEvent to JSON.\n             * @function toJSON\n             * @memberof perfetto.protos.F2fsSyncFileExitFtraceEvent\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            F2fsSyncFileExitFtraceEvent.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return F2fsSyncFileExitFtraceEvent;\n        })();\n\n        protos.F2fsWriteBeginFtraceEvent = (function() {\n\n            /**\n             * Properties of a F2fsWriteBeginFtraceEvent.\n             * @memberof perfetto.protos\n             * @interface IF2fsWriteBeginFtraceEvent\n             * @property {number|Long|null} [dev] F2fsWriteBeginFtraceEvent dev\n             * @property {number|Long|null} [ino] F2fsWriteBeginFtraceEvent ino\n             * @property {number|Long|null} [pos] F2fsWriteBeginFtraceEvent pos\n             * @property {number|null} [len] F2fsWriteBeginFtraceEvent len\n             * @property {number|null} [flags] F2fsWriteBeginFtraceEvent flags\n             */\n\n            /**\n             * Constructs a new F2fsWriteBeginFtraceEvent.\n             * @memberof perfetto.protos\n             * @classdesc Represents a F2fsWriteBeginFtraceEvent.\n             * @implements IF2fsWriteBeginFtraceEvent\n             * @constructor\n             * @param {perfetto.protos.IF2fsWriteBeginFtraceEvent=} [properties] Properties to set\n             */\n            function F2fsWriteBeginFtraceEvent(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * F2fsWriteBeginFtraceEvent dev.\n             * @member {number|Long} dev\n             * @memberof perfetto.protos.F2fsWriteBeginFtraceEvent\n             * @instance\n             */\n            F2fsWriteBeginFtraceEvent.prototype.dev = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n            /**\n             * F2fsWriteBeginFtraceEvent ino.\n             * @member {number|Long} ino\n             * @memberof perfetto.protos.F2fsWriteBeginFtraceEvent\n             * @instance\n             */\n            F2fsWriteBeginFtraceEvent.prototype.ino = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n            /**\n             * F2fsWriteBeginFtraceEvent pos.\n             * @member {number|Long} pos\n             * @memberof perfetto.protos.F2fsWriteBeginFtraceEvent\n             * @instance\n             */\n            F2fsWriteBeginFtraceEvent.prototype.pos = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n            /**\n             * F2fsWriteBeginFtraceEvent len.\n             * @member {number} len\n             * @memberof perfetto.protos.F2fsWriteBeginFtraceEvent\n             * @instance\n             */\n            F2fsWriteBeginFtraceEvent.prototype.len = 0;\n\n            /**\n             * F2fsWriteBeginFtraceEvent flags.\n             * @member {number} flags\n             * @memberof perfetto.protos.F2fsWriteBeginFtraceEvent\n             * @instance\n             */\n            F2fsWriteBeginFtraceEvent.prototype.flags = 0;\n\n            /**\n             * Creates a new F2fsWriteBeginFtraceEvent instance using the specified properties.\n             * @function create\n             * @memberof perfetto.protos.F2fsWriteBeginFtraceEvent\n             * @static\n             * @param {perfetto.protos.IF2fsWriteBeginFtraceEvent=} [properties] Properties to set\n             * @returns {perfetto.protos.F2fsWriteBeginFtraceEvent} F2fsWriteBeginFtraceEvent instance\n             */\n            F2fsWriteBeginFtraceEvent.create = function create(properties) {\n                return new F2fsWriteBeginFtraceEvent(properties);\n            };\n\n            /**\n             * Encodes the specified F2fsWriteBeginFtraceEvent message. Does not implicitly {@link perfetto.protos.F2fsWriteBeginFtraceEvent.verify|verify} messages.\n             * @function encode\n             * @memberof perfetto.protos.F2fsWriteBeginFtraceEvent\n             * @static\n             * @param {perfetto.protos.IF2fsWriteBeginFtraceEvent} message F2fsWriteBeginFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            F2fsWriteBeginFtraceEvent.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.dev != null && message.hasOwnProperty(\"dev\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.dev);\n                if (message.ino != null && message.hasOwnProperty(\"ino\"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.ino);\n                if (message.pos != null && message.hasOwnProperty(\"pos\"))\n                    writer.uint32(/* id 3, wireType 0 =*/24).int64(message.pos);\n                if (message.len != null && message.hasOwnProperty(\"len\"))\n                    writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.len);\n                if (message.flags != null && message.hasOwnProperty(\"flags\"))\n                    writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.flags);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified F2fsWriteBeginFtraceEvent message, length delimited. Does not implicitly {@link perfetto.protos.F2fsWriteBeginFtraceEvent.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof perfetto.protos.F2fsWriteBeginFtraceEvent\n             * @static\n             * @param {perfetto.protos.IF2fsWriteBeginFtraceEvent} message F2fsWriteBeginFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            F2fsWriteBeginFtraceEvent.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a F2fsWriteBeginFtraceEvent message from the specified reader or buffer.\n             * @function decode\n             * @memberof perfetto.protos.F2fsWriteBeginFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {perfetto.protos.F2fsWriteBeginFtraceEvent} F2fsWriteBeginFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            F2fsWriteBeginFtraceEvent.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.F2fsWriteBeginFtraceEvent();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.dev = reader.uint64();\n                        break;\n                    case 2:\n                        message.ino = reader.uint64();\n                        break;\n                    case 3:\n                        message.pos = reader.int64();\n                        break;\n                    case 4:\n                        message.len = reader.uint32();\n                        break;\n                    case 5:\n                        message.flags = reader.uint32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a F2fsWriteBeginFtraceEvent message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof perfetto.protos.F2fsWriteBeginFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {perfetto.protos.F2fsWriteBeginFtraceEvent} F2fsWriteBeginFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            F2fsWriteBeginFtraceEvent.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a F2fsWriteBeginFtraceEvent message.\n             * @function verify\n             * @memberof perfetto.protos.F2fsWriteBeginFtraceEvent\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            F2fsWriteBeginFtraceEvent.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.dev != null && message.hasOwnProperty(\"dev\"))\n                    if (!$util.isInteger(message.dev) && !(message.dev && $util.isInteger(message.dev.low) && $util.isInteger(message.dev.high)))\n                        return \"dev: integer|Long expected\";\n                if (message.ino != null && message.hasOwnProperty(\"ino\"))\n                    if (!$util.isInteger(message.ino) && !(message.ino && $util.isInteger(message.ino.low) && $util.isInteger(message.ino.high)))\n                        return \"ino: integer|Long expected\";\n                if (message.pos != null && message.hasOwnProperty(\"pos\"))\n                    if (!$util.isInteger(message.pos) && !(message.pos && $util.isInteger(message.pos.low) && $util.isInteger(message.pos.high)))\n                        return \"pos: integer|Long expected\";\n                if (message.len != null && message.hasOwnProperty(\"len\"))\n                    if (!$util.isInteger(message.len))\n                        return \"len: integer expected\";\n                if (message.flags != null && message.hasOwnProperty(\"flags\"))\n                    if (!$util.isInteger(message.flags))\n                        return \"flags: integer expected\";\n                return null;\n            };\n\n            /**\n             * Creates a F2fsWriteBeginFtraceEvent message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof perfetto.protos.F2fsWriteBeginFtraceEvent\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {perfetto.protos.F2fsWriteBeginFtraceEvent} F2fsWriteBeginFtraceEvent\n             */\n            F2fsWriteBeginFtraceEvent.fromObject = function fromObject(object) {\n                if (object instanceof $root.perfetto.protos.F2fsWriteBeginFtraceEvent)\n                    return object;\n                var message = new $root.perfetto.protos.F2fsWriteBeginFtraceEvent();\n                if (object.dev != null)\n                    if ($util.Long)\n                        (message.dev = $util.Long.fromValue(object.dev)).unsigned = true;\n                    else if (typeof object.dev === \"string\")\n                        message.dev = parseInt(object.dev, 10);\n                    else if (typeof object.dev === \"number\")\n                        message.dev = object.dev;\n                    else if (typeof object.dev === \"object\")\n                        message.dev = new $util.LongBits(object.dev.low >>> 0, object.dev.high >>> 0).toNumber(true);\n                if (object.ino != null)\n                    if ($util.Long)\n                        (message.ino = $util.Long.fromValue(object.ino)).unsigned = true;\n                    else if (typeof object.ino === \"string\")\n                        message.ino = parseInt(object.ino, 10);\n                    else if (typeof object.ino === \"number\")\n                        message.ino = object.ino;\n                    else if (typeof object.ino === \"object\")\n                        message.ino = new $util.LongBits(object.ino.low >>> 0, object.ino.high >>> 0).toNumber(true);\n                if (object.pos != null)\n                    if ($util.Long)\n                        (message.pos = $util.Long.fromValue(object.pos)).unsigned = false;\n                    else if (typeof object.pos === \"string\")\n                        message.pos = parseInt(object.pos, 10);\n                    else if (typeof object.pos === \"number\")\n                        message.pos = object.pos;\n                    else if (typeof object.pos === \"object\")\n                        message.pos = new $util.LongBits(object.pos.low >>> 0, object.pos.high >>> 0).toNumber();\n                if (object.len != null)\n                    message.len = object.len >>> 0;\n                if (object.flags != null)\n                    message.flags = object.flags >>> 0;\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a F2fsWriteBeginFtraceEvent message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof perfetto.protos.F2fsWriteBeginFtraceEvent\n             * @static\n             * @param {perfetto.protos.F2fsWriteBeginFtraceEvent} message F2fsWriteBeginFtraceEvent\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            F2fsWriteBeginFtraceEvent.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, true);\n                        object.dev = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.dev = options.longs === String ? \"0\" : 0;\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, true);\n                        object.ino = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.ino = options.longs === String ? \"0\" : 0;\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, false);\n                        object.pos = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.pos = options.longs === String ? \"0\" : 0;\n                    object.len = 0;\n                    object.flags = 0;\n                }\n                if (message.dev != null && message.hasOwnProperty(\"dev\"))\n                    if (typeof message.dev === \"number\")\n                        object.dev = options.longs === String ? String(message.dev) : message.dev;\n                    else\n                        object.dev = options.longs === String ? $util.Long.prototype.toString.call(message.dev) : options.longs === Number ? new $util.LongBits(message.dev.low >>> 0, message.dev.high >>> 0).toNumber(true) : message.dev;\n                if (message.ino != null && message.hasOwnProperty(\"ino\"))\n                    if (typeof message.ino === \"number\")\n                        object.ino = options.longs === String ? String(message.ino) : message.ino;\n                    else\n                        object.ino = options.longs === String ? $util.Long.prototype.toString.call(message.ino) : options.longs === Number ? new $util.LongBits(message.ino.low >>> 0, message.ino.high >>> 0).toNumber(true) : message.ino;\n                if (message.pos != null && message.hasOwnProperty(\"pos\"))\n                    if (typeof message.pos === \"number\")\n                        object.pos = options.longs === String ? String(message.pos) : message.pos;\n                    else\n                        object.pos = options.longs === String ? $util.Long.prototype.toString.call(message.pos) : options.longs === Number ? new $util.LongBits(message.pos.low >>> 0, message.pos.high >>> 0).toNumber() : message.pos;\n                if (message.len != null && message.hasOwnProperty(\"len\"))\n                    object.len = message.len;\n                if (message.flags != null && message.hasOwnProperty(\"flags\"))\n                    object.flags = message.flags;\n                return object;\n            };\n\n            /**\n             * Converts this F2fsWriteBeginFtraceEvent to JSON.\n             * @function toJSON\n             * @memberof perfetto.protos.F2fsWriteBeginFtraceEvent\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            F2fsWriteBeginFtraceEvent.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return F2fsWriteBeginFtraceEvent;\n        })();\n\n        protos.F2fsWriteEndFtraceEvent = (function() {\n\n            /**\n             * Properties of a F2fsWriteEndFtraceEvent.\n             * @memberof perfetto.protos\n             * @interface IF2fsWriteEndFtraceEvent\n             * @property {number|Long|null} [dev] F2fsWriteEndFtraceEvent dev\n             * @property {number|Long|null} [ino] F2fsWriteEndFtraceEvent ino\n             * @property {number|Long|null} [pos] F2fsWriteEndFtraceEvent pos\n             * @property {number|null} [len] F2fsWriteEndFtraceEvent len\n             * @property {number|null} [copied] F2fsWriteEndFtraceEvent copied\n             */\n\n            /**\n             * Constructs a new F2fsWriteEndFtraceEvent.\n             * @memberof perfetto.protos\n             * @classdesc Represents a F2fsWriteEndFtraceEvent.\n             * @implements IF2fsWriteEndFtraceEvent\n             * @constructor\n             * @param {perfetto.protos.IF2fsWriteEndFtraceEvent=} [properties] Properties to set\n             */\n            function F2fsWriteEndFtraceEvent(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * F2fsWriteEndFtraceEvent dev.\n             * @member {number|Long} dev\n             * @memberof perfetto.protos.F2fsWriteEndFtraceEvent\n             * @instance\n             */\n            F2fsWriteEndFtraceEvent.prototype.dev = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n            /**\n             * F2fsWriteEndFtraceEvent ino.\n             * @member {number|Long} ino\n             * @memberof perfetto.protos.F2fsWriteEndFtraceEvent\n             * @instance\n             */\n            F2fsWriteEndFtraceEvent.prototype.ino = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n            /**\n             * F2fsWriteEndFtraceEvent pos.\n             * @member {number|Long} pos\n             * @memberof perfetto.protos.F2fsWriteEndFtraceEvent\n             * @instance\n             */\n            F2fsWriteEndFtraceEvent.prototype.pos = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n            /**\n             * F2fsWriteEndFtraceEvent len.\n             * @member {number} len\n             * @memberof perfetto.protos.F2fsWriteEndFtraceEvent\n             * @instance\n             */\n            F2fsWriteEndFtraceEvent.prototype.len = 0;\n\n            /**\n             * F2fsWriteEndFtraceEvent copied.\n             * @member {number} copied\n             * @memberof perfetto.protos.F2fsWriteEndFtraceEvent\n             * @instance\n             */\n            F2fsWriteEndFtraceEvent.prototype.copied = 0;\n\n            /**\n             * Creates a new F2fsWriteEndFtraceEvent instance using the specified properties.\n             * @function create\n             * @memberof perfetto.protos.F2fsWriteEndFtraceEvent\n             * @static\n             * @param {perfetto.protos.IF2fsWriteEndFtraceEvent=} [properties] Properties to set\n             * @returns {perfetto.protos.F2fsWriteEndFtraceEvent} F2fsWriteEndFtraceEvent instance\n             */\n            F2fsWriteEndFtraceEvent.create = function create(properties) {\n                return new F2fsWriteEndFtraceEvent(properties);\n            };\n\n            /**\n             * Encodes the specified F2fsWriteEndFtraceEvent message. Does not implicitly {@link perfetto.protos.F2fsWriteEndFtraceEvent.verify|verify} messages.\n             * @function encode\n             * @memberof perfetto.protos.F2fsWriteEndFtraceEvent\n             * @static\n             * @param {perfetto.protos.IF2fsWriteEndFtraceEvent} message F2fsWriteEndFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            F2fsWriteEndFtraceEvent.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.dev != null && message.hasOwnProperty(\"dev\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.dev);\n                if (message.ino != null && message.hasOwnProperty(\"ino\"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.ino);\n                if (message.pos != null && message.hasOwnProperty(\"pos\"))\n                    writer.uint32(/* id 3, wireType 0 =*/24).int64(message.pos);\n                if (message.len != null && message.hasOwnProperty(\"len\"))\n                    writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.len);\n                if (message.copied != null && message.hasOwnProperty(\"copied\"))\n                    writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.copied);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified F2fsWriteEndFtraceEvent message, length delimited. Does not implicitly {@link perfetto.protos.F2fsWriteEndFtraceEvent.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof perfetto.protos.F2fsWriteEndFtraceEvent\n             * @static\n             * @param {perfetto.protos.IF2fsWriteEndFtraceEvent} message F2fsWriteEndFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            F2fsWriteEndFtraceEvent.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a F2fsWriteEndFtraceEvent message from the specified reader or buffer.\n             * @function decode\n             * @memberof perfetto.protos.F2fsWriteEndFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {perfetto.protos.F2fsWriteEndFtraceEvent} F2fsWriteEndFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            F2fsWriteEndFtraceEvent.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.F2fsWriteEndFtraceEvent();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.dev = reader.uint64();\n                        break;\n                    case 2:\n                        message.ino = reader.uint64();\n                        break;\n                    case 3:\n                        message.pos = reader.int64();\n                        break;\n                    case 4:\n                        message.len = reader.uint32();\n                        break;\n                    case 5:\n                        message.copied = reader.uint32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a F2fsWriteEndFtraceEvent message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof perfetto.protos.F2fsWriteEndFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {perfetto.protos.F2fsWriteEndFtraceEvent} F2fsWriteEndFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            F2fsWriteEndFtraceEvent.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a F2fsWriteEndFtraceEvent message.\n             * @function verify\n             * @memberof perfetto.protos.F2fsWriteEndFtraceEvent\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            F2fsWriteEndFtraceEvent.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.dev != null && message.hasOwnProperty(\"dev\"))\n                    if (!$util.isInteger(message.dev) && !(message.dev && $util.isInteger(message.dev.low) && $util.isInteger(message.dev.high)))\n                        return \"dev: integer|Long expected\";\n                if (message.ino != null && message.hasOwnProperty(\"ino\"))\n                    if (!$util.isInteger(message.ino) && !(message.ino && $util.isInteger(message.ino.low) && $util.isInteger(message.ino.high)))\n                        return \"ino: integer|Long expected\";\n                if (message.pos != null && message.hasOwnProperty(\"pos\"))\n                    if (!$util.isInteger(message.pos) && !(message.pos && $util.isInteger(message.pos.low) && $util.isInteger(message.pos.high)))\n                        return \"pos: integer|Long expected\";\n                if (message.len != null && message.hasOwnProperty(\"len\"))\n                    if (!$util.isInteger(message.len))\n                        return \"len: integer expected\";\n                if (message.copied != null && message.hasOwnProperty(\"copied\"))\n                    if (!$util.isInteger(message.copied))\n                        return \"copied: integer expected\";\n                return null;\n            };\n\n            /**\n             * Creates a F2fsWriteEndFtraceEvent message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof perfetto.protos.F2fsWriteEndFtraceEvent\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {perfetto.protos.F2fsWriteEndFtraceEvent} F2fsWriteEndFtraceEvent\n             */\n            F2fsWriteEndFtraceEvent.fromObject = function fromObject(object) {\n                if (object instanceof $root.perfetto.protos.F2fsWriteEndFtraceEvent)\n                    return object;\n                var message = new $root.perfetto.protos.F2fsWriteEndFtraceEvent();\n                if (object.dev != null)\n                    if ($util.Long)\n                        (message.dev = $util.Long.fromValue(object.dev)).unsigned = true;\n                    else if (typeof object.dev === \"string\")\n                        message.dev = parseInt(object.dev, 10);\n                    else if (typeof object.dev === \"number\")\n                        message.dev = object.dev;\n                    else if (typeof object.dev === \"object\")\n                        message.dev = new $util.LongBits(object.dev.low >>> 0, object.dev.high >>> 0).toNumber(true);\n                if (object.ino != null)\n                    if ($util.Long)\n                        (message.ino = $util.Long.fromValue(object.ino)).unsigned = true;\n                    else if (typeof object.ino === \"string\")\n                        message.ino = parseInt(object.ino, 10);\n                    else if (typeof object.ino === \"number\")\n                        message.ino = object.ino;\n                    else if (typeof object.ino === \"object\")\n                        message.ino = new $util.LongBits(object.ino.low >>> 0, object.ino.high >>> 0).toNumber(true);\n                if (object.pos != null)\n                    if ($util.Long)\n                        (message.pos = $util.Long.fromValue(object.pos)).unsigned = false;\n                    else if (typeof object.pos === \"string\")\n                        message.pos = parseInt(object.pos, 10);\n                    else if (typeof object.pos === \"number\")\n                        message.pos = object.pos;\n                    else if (typeof object.pos === \"object\")\n                        message.pos = new $util.LongBits(object.pos.low >>> 0, object.pos.high >>> 0).toNumber();\n                if (object.len != null)\n                    message.len = object.len >>> 0;\n                if (object.copied != null)\n                    message.copied = object.copied >>> 0;\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a F2fsWriteEndFtraceEvent message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof perfetto.protos.F2fsWriteEndFtraceEvent\n             * @static\n             * @param {perfetto.protos.F2fsWriteEndFtraceEvent} message F2fsWriteEndFtraceEvent\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            F2fsWriteEndFtraceEvent.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, true);\n                        object.dev = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.dev = options.longs === String ? \"0\" : 0;\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, true);\n                        object.ino = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.ino = options.longs === String ? \"0\" : 0;\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, false);\n                        object.pos = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.pos = options.longs === String ? \"0\" : 0;\n                    object.len = 0;\n                    object.copied = 0;\n                }\n                if (message.dev != null && message.hasOwnProperty(\"dev\"))\n                    if (typeof message.dev === \"number\")\n                        object.dev = options.longs === String ? String(message.dev) : message.dev;\n                    else\n                        object.dev = options.longs === String ? $util.Long.prototype.toString.call(message.dev) : options.longs === Number ? new $util.LongBits(message.dev.low >>> 0, message.dev.high >>> 0).toNumber(true) : message.dev;\n                if (message.ino != null && message.hasOwnProperty(\"ino\"))\n                    if (typeof message.ino === \"number\")\n                        object.ino = options.longs === String ? String(message.ino) : message.ino;\n                    else\n                        object.ino = options.longs === String ? $util.Long.prototype.toString.call(message.ino) : options.longs === Number ? new $util.LongBits(message.ino.low >>> 0, message.ino.high >>> 0).toNumber(true) : message.ino;\n                if (message.pos != null && message.hasOwnProperty(\"pos\"))\n                    if (typeof message.pos === \"number\")\n                        object.pos = options.longs === String ? String(message.pos) : message.pos;\n                    else\n                        object.pos = options.longs === String ? $util.Long.prototype.toString.call(message.pos) : options.longs === Number ? new $util.LongBits(message.pos.low >>> 0, message.pos.high >>> 0).toNumber() : message.pos;\n                if (message.len != null && message.hasOwnProperty(\"len\"))\n                    object.len = message.len;\n                if (message.copied != null && message.hasOwnProperty(\"copied\"))\n                    object.copied = message.copied;\n                return object;\n            };\n\n            /**\n             * Converts this F2fsWriteEndFtraceEvent to JSON.\n             * @function toJSON\n             * @memberof perfetto.protos.F2fsWriteEndFtraceEvent\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            F2fsWriteEndFtraceEvent.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return F2fsWriteEndFtraceEvent;\n        })();\n\n        protos.LowmemoryKillFtraceEvent = (function() {\n\n            /**\n             * Properties of a LowmemoryKillFtraceEvent.\n             * @memberof perfetto.protos\n             * @interface ILowmemoryKillFtraceEvent\n             * @property {string|null} [comm] LowmemoryKillFtraceEvent comm\n             * @property {number|null} [pid] LowmemoryKillFtraceEvent pid\n             * @property {number|Long|null} [pagecacheSize] LowmemoryKillFtraceEvent pagecacheSize\n             * @property {number|Long|null} [pagecacheLimit] LowmemoryKillFtraceEvent pagecacheLimit\n             * @property {number|Long|null} [free] LowmemoryKillFtraceEvent free\n             */\n\n            /**\n             * Constructs a new LowmemoryKillFtraceEvent.\n             * @memberof perfetto.protos\n             * @classdesc Represents a LowmemoryKillFtraceEvent.\n             * @implements ILowmemoryKillFtraceEvent\n             * @constructor\n             * @param {perfetto.protos.ILowmemoryKillFtraceEvent=} [properties] Properties to set\n             */\n            function LowmemoryKillFtraceEvent(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * LowmemoryKillFtraceEvent comm.\n             * @member {string} comm\n             * @memberof perfetto.protos.LowmemoryKillFtraceEvent\n             * @instance\n             */\n            LowmemoryKillFtraceEvent.prototype.comm = \"\";\n\n            /**\n             * LowmemoryKillFtraceEvent pid.\n             * @member {number} pid\n             * @memberof perfetto.protos.LowmemoryKillFtraceEvent\n             * @instance\n             */\n            LowmemoryKillFtraceEvent.prototype.pid = 0;\n\n            /**\n             * LowmemoryKillFtraceEvent pagecacheSize.\n             * @member {number|Long} pagecacheSize\n             * @memberof perfetto.protos.LowmemoryKillFtraceEvent\n             * @instance\n             */\n            LowmemoryKillFtraceEvent.prototype.pagecacheSize = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n            /**\n             * LowmemoryKillFtraceEvent pagecacheLimit.\n             * @member {number|Long} pagecacheLimit\n             * @memberof perfetto.protos.LowmemoryKillFtraceEvent\n             * @instance\n             */\n            LowmemoryKillFtraceEvent.prototype.pagecacheLimit = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n            /**\n             * LowmemoryKillFtraceEvent free.\n             * @member {number|Long} free\n             * @memberof perfetto.protos.LowmemoryKillFtraceEvent\n             * @instance\n             */\n            LowmemoryKillFtraceEvent.prototype.free = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n            /**\n             * Creates a new LowmemoryKillFtraceEvent instance using the specified properties.\n             * @function create\n             * @memberof perfetto.protos.LowmemoryKillFtraceEvent\n             * @static\n             * @param {perfetto.protos.ILowmemoryKillFtraceEvent=} [properties] Properties to set\n             * @returns {perfetto.protos.LowmemoryKillFtraceEvent} LowmemoryKillFtraceEvent instance\n             */\n            LowmemoryKillFtraceEvent.create = function create(properties) {\n                return new LowmemoryKillFtraceEvent(properties);\n            };\n\n            /**\n             * Encodes the specified LowmemoryKillFtraceEvent message. Does not implicitly {@link perfetto.protos.LowmemoryKillFtraceEvent.verify|verify} messages.\n             * @function encode\n             * @memberof perfetto.protos.LowmemoryKillFtraceEvent\n             * @static\n             * @param {perfetto.protos.ILowmemoryKillFtraceEvent} message LowmemoryKillFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            LowmemoryKillFtraceEvent.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.comm != null && message.hasOwnProperty(\"comm\"))\n                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.comm);\n                if (message.pid != null && message.hasOwnProperty(\"pid\"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pid);\n                if (message.pagecacheSize != null && message.hasOwnProperty(\"pagecacheSize\"))\n                    writer.uint32(/* id 3, wireType 0 =*/24).int64(message.pagecacheSize);\n                if (message.pagecacheLimit != null && message.hasOwnProperty(\"pagecacheLimit\"))\n                    writer.uint32(/* id 4, wireType 0 =*/32).int64(message.pagecacheLimit);\n                if (message.free != null && message.hasOwnProperty(\"free\"))\n                    writer.uint32(/* id 5, wireType 0 =*/40).int64(message.free);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified LowmemoryKillFtraceEvent message, length delimited. Does not implicitly {@link perfetto.protos.LowmemoryKillFtraceEvent.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof perfetto.protos.LowmemoryKillFtraceEvent\n             * @static\n             * @param {perfetto.protos.ILowmemoryKillFtraceEvent} message LowmemoryKillFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            LowmemoryKillFtraceEvent.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a LowmemoryKillFtraceEvent message from the specified reader or buffer.\n             * @function decode\n             * @memberof perfetto.protos.LowmemoryKillFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {perfetto.protos.LowmemoryKillFtraceEvent} LowmemoryKillFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            LowmemoryKillFtraceEvent.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.LowmemoryKillFtraceEvent();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.comm = reader.string();\n                        break;\n                    case 2:\n                        message.pid = reader.int32();\n                        break;\n                    case 3:\n                        message.pagecacheSize = reader.int64();\n                        break;\n                    case 4:\n                        message.pagecacheLimit = reader.int64();\n                        break;\n                    case 5:\n                        message.free = reader.int64();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a LowmemoryKillFtraceEvent message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof perfetto.protos.LowmemoryKillFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {perfetto.protos.LowmemoryKillFtraceEvent} LowmemoryKillFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            LowmemoryKillFtraceEvent.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a LowmemoryKillFtraceEvent message.\n             * @function verify\n             * @memberof perfetto.protos.LowmemoryKillFtraceEvent\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            LowmemoryKillFtraceEvent.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.comm != null && message.hasOwnProperty(\"comm\"))\n                    if (!$util.isString(message.comm))\n                        return \"comm: string expected\";\n                if (message.pid != null && message.hasOwnProperty(\"pid\"))\n                    if (!$util.isInteger(message.pid))\n                        return \"pid: integer expected\";\n                if (message.pagecacheSize != null && message.hasOwnProperty(\"pagecacheSize\"))\n                    if (!$util.isInteger(message.pagecacheSize) && !(message.pagecacheSize && $util.isInteger(message.pagecacheSize.low) && $util.isInteger(message.pagecacheSize.high)))\n                        return \"pagecacheSize: integer|Long expected\";\n                if (message.pagecacheLimit != null && message.hasOwnProperty(\"pagecacheLimit\"))\n                    if (!$util.isInteger(message.pagecacheLimit) && !(message.pagecacheLimit && $util.isInteger(message.pagecacheLimit.low) && $util.isInteger(message.pagecacheLimit.high)))\n                        return \"pagecacheLimit: integer|Long expected\";\n                if (message.free != null && message.hasOwnProperty(\"free\"))\n                    if (!$util.isInteger(message.free) && !(message.free && $util.isInteger(message.free.low) && $util.isInteger(message.free.high)))\n                        return \"free: integer|Long expected\";\n                return null;\n            };\n\n            /**\n             * Creates a LowmemoryKillFtraceEvent message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof perfetto.protos.LowmemoryKillFtraceEvent\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {perfetto.protos.LowmemoryKillFtraceEvent} LowmemoryKillFtraceEvent\n             */\n            LowmemoryKillFtraceEvent.fromObject = function fromObject(object) {\n                if (object instanceof $root.perfetto.protos.LowmemoryKillFtraceEvent)\n                    return object;\n                var message = new $root.perfetto.protos.LowmemoryKillFtraceEvent();\n                if (object.comm != null)\n                    message.comm = String(object.comm);\n                if (object.pid != null)\n                    message.pid = object.pid | 0;\n                if (object.pagecacheSize != null)\n                    if ($util.Long)\n                        (message.pagecacheSize = $util.Long.fromValue(object.pagecacheSize)).unsigned = false;\n                    else if (typeof object.pagecacheSize === \"string\")\n                        message.pagecacheSize = parseInt(object.pagecacheSize, 10);\n                    else if (typeof object.pagecacheSize === \"number\")\n                        message.pagecacheSize = object.pagecacheSize;\n                    else if (typeof object.pagecacheSize === \"object\")\n                        message.pagecacheSize = new $util.LongBits(object.pagecacheSize.low >>> 0, object.pagecacheSize.high >>> 0).toNumber();\n                if (object.pagecacheLimit != null)\n                    if ($util.Long)\n                        (message.pagecacheLimit = $util.Long.fromValue(object.pagecacheLimit)).unsigned = false;\n                    else if (typeof object.pagecacheLimit === \"string\")\n                        message.pagecacheLimit = parseInt(object.pagecacheLimit, 10);\n                    else if (typeof object.pagecacheLimit === \"number\")\n                        message.pagecacheLimit = object.pagecacheLimit;\n                    else if (typeof object.pagecacheLimit === \"object\")\n                        message.pagecacheLimit = new $util.LongBits(object.pagecacheLimit.low >>> 0, object.pagecacheLimit.high >>> 0).toNumber();\n                if (object.free != null)\n                    if ($util.Long)\n                        (message.free = $util.Long.fromValue(object.free)).unsigned = false;\n                    else if (typeof object.free === \"string\")\n                        message.free = parseInt(object.free, 10);\n                    else if (typeof object.free === \"number\")\n                        message.free = object.free;\n                    else if (typeof object.free === \"object\")\n                        message.free = new $util.LongBits(object.free.low >>> 0, object.free.high >>> 0).toNumber();\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a LowmemoryKillFtraceEvent message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof perfetto.protos.LowmemoryKillFtraceEvent\n             * @static\n             * @param {perfetto.protos.LowmemoryKillFtraceEvent} message LowmemoryKillFtraceEvent\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            LowmemoryKillFtraceEvent.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.comm = \"\";\n                    object.pid = 0;\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, false);\n                        object.pagecacheSize = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.pagecacheSize = options.longs === String ? \"0\" : 0;\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, false);\n                        object.pagecacheLimit = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.pagecacheLimit = options.longs === String ? \"0\" : 0;\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, false);\n                        object.free = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.free = options.longs === String ? \"0\" : 0;\n                }\n                if (message.comm != null && message.hasOwnProperty(\"comm\"))\n                    object.comm = message.comm;\n                if (message.pid != null && message.hasOwnProperty(\"pid\"))\n                    object.pid = message.pid;\n                if (message.pagecacheSize != null && message.hasOwnProperty(\"pagecacheSize\"))\n                    if (typeof message.pagecacheSize === \"number\")\n                        object.pagecacheSize = options.longs === String ? String(message.pagecacheSize) : message.pagecacheSize;\n                    else\n                        object.pagecacheSize = options.longs === String ? $util.Long.prototype.toString.call(message.pagecacheSize) : options.longs === Number ? new $util.LongBits(message.pagecacheSize.low >>> 0, message.pagecacheSize.high >>> 0).toNumber() : message.pagecacheSize;\n                if (message.pagecacheLimit != null && message.hasOwnProperty(\"pagecacheLimit\"))\n                    if (typeof message.pagecacheLimit === \"number\")\n                        object.pagecacheLimit = options.longs === String ? String(message.pagecacheLimit) : message.pagecacheLimit;\n                    else\n                        object.pagecacheLimit = options.longs === String ? $util.Long.prototype.toString.call(message.pagecacheLimit) : options.longs === Number ? new $util.LongBits(message.pagecacheLimit.low >>> 0, message.pagecacheLimit.high >>> 0).toNumber() : message.pagecacheLimit;\n                if (message.free != null && message.hasOwnProperty(\"free\"))\n                    if (typeof message.free === \"number\")\n                        object.free = options.longs === String ? String(message.free) : message.free;\n                    else\n                        object.free = options.longs === String ? $util.Long.prototype.toString.call(message.free) : options.longs === Number ? new $util.LongBits(message.free.low >>> 0, message.free.high >>> 0).toNumber() : message.free;\n                return object;\n            };\n\n            /**\n             * Converts this LowmemoryKillFtraceEvent to JSON.\n             * @function toJSON\n             * @memberof perfetto.protos.LowmemoryKillFtraceEvent\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            LowmemoryKillFtraceEvent.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return LowmemoryKillFtraceEvent;\n        })();\n\n        protos.MmVmscanDirectReclaimBeginFtraceEvent = (function() {\n\n            /**\n             * Properties of a MmVmscanDirectReclaimBeginFtraceEvent.\n             * @memberof perfetto.protos\n             * @interface IMmVmscanDirectReclaimBeginFtraceEvent\n             * @property {number|null} [order] MmVmscanDirectReclaimBeginFtraceEvent order\n             * @property {number|null} [mayWritepage] MmVmscanDirectReclaimBeginFtraceEvent mayWritepage\n             * @property {number|null} [gfpFlags] MmVmscanDirectReclaimBeginFtraceEvent gfpFlags\n             */\n\n            /**\n             * Constructs a new MmVmscanDirectReclaimBeginFtraceEvent.\n             * @memberof perfetto.protos\n             * @classdesc Represents a MmVmscanDirectReclaimBeginFtraceEvent.\n             * @implements IMmVmscanDirectReclaimBeginFtraceEvent\n             * @constructor\n             * @param {perfetto.protos.IMmVmscanDirectReclaimBeginFtraceEvent=} [properties] Properties to set\n             */\n            function MmVmscanDirectReclaimBeginFtraceEvent(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * MmVmscanDirectReclaimBeginFtraceEvent order.\n             * @member {number} order\n             * @memberof perfetto.protos.MmVmscanDirectReclaimBeginFtraceEvent\n             * @instance\n             */\n            MmVmscanDirectReclaimBeginFtraceEvent.prototype.order = 0;\n\n            /**\n             * MmVmscanDirectReclaimBeginFtraceEvent mayWritepage.\n             * @member {number} mayWritepage\n             * @memberof perfetto.protos.MmVmscanDirectReclaimBeginFtraceEvent\n             * @instance\n             */\n            MmVmscanDirectReclaimBeginFtraceEvent.prototype.mayWritepage = 0;\n\n            /**\n             * MmVmscanDirectReclaimBeginFtraceEvent gfpFlags.\n             * @member {number} gfpFlags\n             * @memberof perfetto.protos.MmVmscanDirectReclaimBeginFtraceEvent\n             * @instance\n             */\n            MmVmscanDirectReclaimBeginFtraceEvent.prototype.gfpFlags = 0;\n\n            /**\n             * Creates a new MmVmscanDirectReclaimBeginFtraceEvent instance using the specified properties.\n             * @function create\n             * @memberof perfetto.protos.MmVmscanDirectReclaimBeginFtraceEvent\n             * @static\n             * @param {perfetto.protos.IMmVmscanDirectReclaimBeginFtraceEvent=} [properties] Properties to set\n             * @returns {perfetto.protos.MmVmscanDirectReclaimBeginFtraceEvent} MmVmscanDirectReclaimBeginFtraceEvent instance\n             */\n            MmVmscanDirectReclaimBeginFtraceEvent.create = function create(properties) {\n                return new MmVmscanDirectReclaimBeginFtraceEvent(properties);\n            };\n\n            /**\n             * Encodes the specified MmVmscanDirectReclaimBeginFtraceEvent message. Does not implicitly {@link perfetto.protos.MmVmscanDirectReclaimBeginFtraceEvent.verify|verify} messages.\n             * @function encode\n             * @memberof perfetto.protos.MmVmscanDirectReclaimBeginFtraceEvent\n             * @static\n             * @param {perfetto.protos.IMmVmscanDirectReclaimBeginFtraceEvent} message MmVmscanDirectReclaimBeginFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            MmVmscanDirectReclaimBeginFtraceEvent.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.order != null && message.hasOwnProperty(\"order\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.order);\n                if (message.mayWritepage != null && message.hasOwnProperty(\"mayWritepage\"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.mayWritepage);\n                if (message.gfpFlags != null && message.hasOwnProperty(\"gfpFlags\"))\n                    writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.gfpFlags);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified MmVmscanDirectReclaimBeginFtraceEvent message, length delimited. Does not implicitly {@link perfetto.protos.MmVmscanDirectReclaimBeginFtraceEvent.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof perfetto.protos.MmVmscanDirectReclaimBeginFtraceEvent\n             * @static\n             * @param {perfetto.protos.IMmVmscanDirectReclaimBeginFtraceEvent} message MmVmscanDirectReclaimBeginFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            MmVmscanDirectReclaimBeginFtraceEvent.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a MmVmscanDirectReclaimBeginFtraceEvent message from the specified reader or buffer.\n             * @function decode\n             * @memberof perfetto.protos.MmVmscanDirectReclaimBeginFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {perfetto.protos.MmVmscanDirectReclaimBeginFtraceEvent} MmVmscanDirectReclaimBeginFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            MmVmscanDirectReclaimBeginFtraceEvent.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.MmVmscanDirectReclaimBeginFtraceEvent();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.order = reader.int32();\n                        break;\n                    case 2:\n                        message.mayWritepage = reader.int32();\n                        break;\n                    case 3:\n                        message.gfpFlags = reader.uint32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a MmVmscanDirectReclaimBeginFtraceEvent message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof perfetto.protos.MmVmscanDirectReclaimBeginFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {perfetto.protos.MmVmscanDirectReclaimBeginFtraceEvent} MmVmscanDirectReclaimBeginFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            MmVmscanDirectReclaimBeginFtraceEvent.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a MmVmscanDirectReclaimBeginFtraceEvent message.\n             * @function verify\n             * @memberof perfetto.protos.MmVmscanDirectReclaimBeginFtraceEvent\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            MmVmscanDirectReclaimBeginFtraceEvent.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.order != null && message.hasOwnProperty(\"order\"))\n                    if (!$util.isInteger(message.order))\n                        return \"order: integer expected\";\n                if (message.mayWritepage != null && message.hasOwnProperty(\"mayWritepage\"))\n                    if (!$util.isInteger(message.mayWritepage))\n                        return \"mayWritepage: integer expected\";\n                if (message.gfpFlags != null && message.hasOwnProperty(\"gfpFlags\"))\n                    if (!$util.isInteger(message.gfpFlags))\n                        return \"gfpFlags: integer expected\";\n                return null;\n            };\n\n            /**\n             * Creates a MmVmscanDirectReclaimBeginFtraceEvent message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof perfetto.protos.MmVmscanDirectReclaimBeginFtraceEvent\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {perfetto.protos.MmVmscanDirectReclaimBeginFtraceEvent} MmVmscanDirectReclaimBeginFtraceEvent\n             */\n            MmVmscanDirectReclaimBeginFtraceEvent.fromObject = function fromObject(object) {\n                if (object instanceof $root.perfetto.protos.MmVmscanDirectReclaimBeginFtraceEvent)\n                    return object;\n                var message = new $root.perfetto.protos.MmVmscanDirectReclaimBeginFtraceEvent();\n                if (object.order != null)\n                    message.order = object.order | 0;\n                if (object.mayWritepage != null)\n                    message.mayWritepage = object.mayWritepage | 0;\n                if (object.gfpFlags != null)\n                    message.gfpFlags = object.gfpFlags >>> 0;\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a MmVmscanDirectReclaimBeginFtraceEvent message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof perfetto.protos.MmVmscanDirectReclaimBeginFtraceEvent\n             * @static\n             * @param {perfetto.protos.MmVmscanDirectReclaimBeginFtraceEvent} message MmVmscanDirectReclaimBeginFtraceEvent\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            MmVmscanDirectReclaimBeginFtraceEvent.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.order = 0;\n                    object.mayWritepage = 0;\n                    object.gfpFlags = 0;\n                }\n                if (message.order != null && message.hasOwnProperty(\"order\"))\n                    object.order = message.order;\n                if (message.mayWritepage != null && message.hasOwnProperty(\"mayWritepage\"))\n                    object.mayWritepage = message.mayWritepage;\n                if (message.gfpFlags != null && message.hasOwnProperty(\"gfpFlags\"))\n                    object.gfpFlags = message.gfpFlags;\n                return object;\n            };\n\n            /**\n             * Converts this MmVmscanDirectReclaimBeginFtraceEvent to JSON.\n             * @function toJSON\n             * @memberof perfetto.protos.MmVmscanDirectReclaimBeginFtraceEvent\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            MmVmscanDirectReclaimBeginFtraceEvent.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return MmVmscanDirectReclaimBeginFtraceEvent;\n        })();\n\n        protos.MmVmscanDirectReclaimEndFtraceEvent = (function() {\n\n            /**\n             * Properties of a MmVmscanDirectReclaimEndFtraceEvent.\n             * @memberof perfetto.protos\n             * @interface IMmVmscanDirectReclaimEndFtraceEvent\n             * @property {number|Long|null} [nrReclaimed] MmVmscanDirectReclaimEndFtraceEvent nrReclaimed\n             */\n\n            /**\n             * Constructs a new MmVmscanDirectReclaimEndFtraceEvent.\n             * @memberof perfetto.protos\n             * @classdesc Represents a MmVmscanDirectReclaimEndFtraceEvent.\n             * @implements IMmVmscanDirectReclaimEndFtraceEvent\n             * @constructor\n             * @param {perfetto.protos.IMmVmscanDirectReclaimEndFtraceEvent=} [properties] Properties to set\n             */\n            function MmVmscanDirectReclaimEndFtraceEvent(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * MmVmscanDirectReclaimEndFtraceEvent nrReclaimed.\n             * @member {number|Long} nrReclaimed\n             * @memberof perfetto.protos.MmVmscanDirectReclaimEndFtraceEvent\n             * @instance\n             */\n            MmVmscanDirectReclaimEndFtraceEvent.prototype.nrReclaimed = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n            /**\n             * Creates a new MmVmscanDirectReclaimEndFtraceEvent instance using the specified properties.\n             * @function create\n             * @memberof perfetto.protos.MmVmscanDirectReclaimEndFtraceEvent\n             * @static\n             * @param {perfetto.protos.IMmVmscanDirectReclaimEndFtraceEvent=} [properties] Properties to set\n             * @returns {perfetto.protos.MmVmscanDirectReclaimEndFtraceEvent} MmVmscanDirectReclaimEndFtraceEvent instance\n             */\n            MmVmscanDirectReclaimEndFtraceEvent.create = function create(properties) {\n                return new MmVmscanDirectReclaimEndFtraceEvent(properties);\n            };\n\n            /**\n             * Encodes the specified MmVmscanDirectReclaimEndFtraceEvent message. Does not implicitly {@link perfetto.protos.MmVmscanDirectReclaimEndFtraceEvent.verify|verify} messages.\n             * @function encode\n             * @memberof perfetto.protos.MmVmscanDirectReclaimEndFtraceEvent\n             * @static\n             * @param {perfetto.protos.IMmVmscanDirectReclaimEndFtraceEvent} message MmVmscanDirectReclaimEndFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            MmVmscanDirectReclaimEndFtraceEvent.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.nrReclaimed != null && message.hasOwnProperty(\"nrReclaimed\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.nrReclaimed);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified MmVmscanDirectReclaimEndFtraceEvent message, length delimited. Does not implicitly {@link perfetto.protos.MmVmscanDirectReclaimEndFtraceEvent.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof perfetto.protos.MmVmscanDirectReclaimEndFtraceEvent\n             * @static\n             * @param {perfetto.protos.IMmVmscanDirectReclaimEndFtraceEvent} message MmVmscanDirectReclaimEndFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            MmVmscanDirectReclaimEndFtraceEvent.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a MmVmscanDirectReclaimEndFtraceEvent message from the specified reader or buffer.\n             * @function decode\n             * @memberof perfetto.protos.MmVmscanDirectReclaimEndFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {perfetto.protos.MmVmscanDirectReclaimEndFtraceEvent} MmVmscanDirectReclaimEndFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            MmVmscanDirectReclaimEndFtraceEvent.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.MmVmscanDirectReclaimEndFtraceEvent();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.nrReclaimed = reader.uint64();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a MmVmscanDirectReclaimEndFtraceEvent message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof perfetto.protos.MmVmscanDirectReclaimEndFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {perfetto.protos.MmVmscanDirectReclaimEndFtraceEvent} MmVmscanDirectReclaimEndFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            MmVmscanDirectReclaimEndFtraceEvent.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a MmVmscanDirectReclaimEndFtraceEvent message.\n             * @function verify\n             * @memberof perfetto.protos.MmVmscanDirectReclaimEndFtraceEvent\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            MmVmscanDirectReclaimEndFtraceEvent.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.nrReclaimed != null && message.hasOwnProperty(\"nrReclaimed\"))\n                    if (!$util.isInteger(message.nrReclaimed) && !(message.nrReclaimed && $util.isInteger(message.nrReclaimed.low) && $util.isInteger(message.nrReclaimed.high)))\n                        return \"nrReclaimed: integer|Long expected\";\n                return null;\n            };\n\n            /**\n             * Creates a MmVmscanDirectReclaimEndFtraceEvent message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof perfetto.protos.MmVmscanDirectReclaimEndFtraceEvent\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {perfetto.protos.MmVmscanDirectReclaimEndFtraceEvent} MmVmscanDirectReclaimEndFtraceEvent\n             */\n            MmVmscanDirectReclaimEndFtraceEvent.fromObject = function fromObject(object) {\n                if (object instanceof $root.perfetto.protos.MmVmscanDirectReclaimEndFtraceEvent)\n                    return object;\n                var message = new $root.perfetto.protos.MmVmscanDirectReclaimEndFtraceEvent();\n                if (object.nrReclaimed != null)\n                    if ($util.Long)\n                        (message.nrReclaimed = $util.Long.fromValue(object.nrReclaimed)).unsigned = true;\n                    else if (typeof object.nrReclaimed === \"string\")\n                        message.nrReclaimed = parseInt(object.nrReclaimed, 10);\n                    else if (typeof object.nrReclaimed === \"number\")\n                        message.nrReclaimed = object.nrReclaimed;\n                    else if (typeof object.nrReclaimed === \"object\")\n                        message.nrReclaimed = new $util.LongBits(object.nrReclaimed.low >>> 0, object.nrReclaimed.high >>> 0).toNumber(true);\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a MmVmscanDirectReclaimEndFtraceEvent message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof perfetto.protos.MmVmscanDirectReclaimEndFtraceEvent\n             * @static\n             * @param {perfetto.protos.MmVmscanDirectReclaimEndFtraceEvent} message MmVmscanDirectReclaimEndFtraceEvent\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            MmVmscanDirectReclaimEndFtraceEvent.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults)\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, true);\n                        object.nrReclaimed = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.nrReclaimed = options.longs === String ? \"0\" : 0;\n                if (message.nrReclaimed != null && message.hasOwnProperty(\"nrReclaimed\"))\n                    if (typeof message.nrReclaimed === \"number\")\n                        object.nrReclaimed = options.longs === String ? String(message.nrReclaimed) : message.nrReclaimed;\n                    else\n                        object.nrReclaimed = options.longs === String ? $util.Long.prototype.toString.call(message.nrReclaimed) : options.longs === Number ? new $util.LongBits(message.nrReclaimed.low >>> 0, message.nrReclaimed.high >>> 0).toNumber(true) : message.nrReclaimed;\n                return object;\n            };\n\n            /**\n             * Converts this MmVmscanDirectReclaimEndFtraceEvent to JSON.\n             * @function toJSON\n             * @memberof perfetto.protos.MmVmscanDirectReclaimEndFtraceEvent\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            MmVmscanDirectReclaimEndFtraceEvent.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return MmVmscanDirectReclaimEndFtraceEvent;\n        })();\n\n        protos.MmVmscanKswapdSleepFtraceEvent = (function() {\n\n            /**\n             * Properties of a MmVmscanKswapdSleepFtraceEvent.\n             * @memberof perfetto.protos\n             * @interface IMmVmscanKswapdSleepFtraceEvent\n             * @property {number|null} [nid] MmVmscanKswapdSleepFtraceEvent nid\n             */\n\n            /**\n             * Constructs a new MmVmscanKswapdSleepFtraceEvent.\n             * @memberof perfetto.protos\n             * @classdesc Represents a MmVmscanKswapdSleepFtraceEvent.\n             * @implements IMmVmscanKswapdSleepFtraceEvent\n             * @constructor\n             * @param {perfetto.protos.IMmVmscanKswapdSleepFtraceEvent=} [properties] Properties to set\n             */\n            function MmVmscanKswapdSleepFtraceEvent(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * MmVmscanKswapdSleepFtraceEvent nid.\n             * @member {number} nid\n             * @memberof perfetto.protos.MmVmscanKswapdSleepFtraceEvent\n             * @instance\n             */\n            MmVmscanKswapdSleepFtraceEvent.prototype.nid = 0;\n\n            /**\n             * Creates a new MmVmscanKswapdSleepFtraceEvent instance using the specified properties.\n             * @function create\n             * @memberof perfetto.protos.MmVmscanKswapdSleepFtraceEvent\n             * @static\n             * @param {perfetto.protos.IMmVmscanKswapdSleepFtraceEvent=} [properties] Properties to set\n             * @returns {perfetto.protos.MmVmscanKswapdSleepFtraceEvent} MmVmscanKswapdSleepFtraceEvent instance\n             */\n            MmVmscanKswapdSleepFtraceEvent.create = function create(properties) {\n                return new MmVmscanKswapdSleepFtraceEvent(properties);\n            };\n\n            /**\n             * Encodes the specified MmVmscanKswapdSleepFtraceEvent message. Does not implicitly {@link perfetto.protos.MmVmscanKswapdSleepFtraceEvent.verify|verify} messages.\n             * @function encode\n             * @memberof perfetto.protos.MmVmscanKswapdSleepFtraceEvent\n             * @static\n             * @param {perfetto.protos.IMmVmscanKswapdSleepFtraceEvent} message MmVmscanKswapdSleepFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            MmVmscanKswapdSleepFtraceEvent.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.nid != null && message.hasOwnProperty(\"nid\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.nid);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified MmVmscanKswapdSleepFtraceEvent message, length delimited. Does not implicitly {@link perfetto.protos.MmVmscanKswapdSleepFtraceEvent.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof perfetto.protos.MmVmscanKswapdSleepFtraceEvent\n             * @static\n             * @param {perfetto.protos.IMmVmscanKswapdSleepFtraceEvent} message MmVmscanKswapdSleepFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            MmVmscanKswapdSleepFtraceEvent.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a MmVmscanKswapdSleepFtraceEvent message from the specified reader or buffer.\n             * @function decode\n             * @memberof perfetto.protos.MmVmscanKswapdSleepFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {perfetto.protos.MmVmscanKswapdSleepFtraceEvent} MmVmscanKswapdSleepFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            MmVmscanKswapdSleepFtraceEvent.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.MmVmscanKswapdSleepFtraceEvent();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.nid = reader.int32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a MmVmscanKswapdSleepFtraceEvent message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof perfetto.protos.MmVmscanKswapdSleepFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {perfetto.protos.MmVmscanKswapdSleepFtraceEvent} MmVmscanKswapdSleepFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            MmVmscanKswapdSleepFtraceEvent.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a MmVmscanKswapdSleepFtraceEvent message.\n             * @function verify\n             * @memberof perfetto.protos.MmVmscanKswapdSleepFtraceEvent\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            MmVmscanKswapdSleepFtraceEvent.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.nid != null && message.hasOwnProperty(\"nid\"))\n                    if (!$util.isInteger(message.nid))\n                        return \"nid: integer expected\";\n                return null;\n            };\n\n            /**\n             * Creates a MmVmscanKswapdSleepFtraceEvent message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof perfetto.protos.MmVmscanKswapdSleepFtraceEvent\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {perfetto.protos.MmVmscanKswapdSleepFtraceEvent} MmVmscanKswapdSleepFtraceEvent\n             */\n            MmVmscanKswapdSleepFtraceEvent.fromObject = function fromObject(object) {\n                if (object instanceof $root.perfetto.protos.MmVmscanKswapdSleepFtraceEvent)\n                    return object;\n                var message = new $root.perfetto.protos.MmVmscanKswapdSleepFtraceEvent();\n                if (object.nid != null)\n                    message.nid = object.nid | 0;\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a MmVmscanKswapdSleepFtraceEvent message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof perfetto.protos.MmVmscanKswapdSleepFtraceEvent\n             * @static\n             * @param {perfetto.protos.MmVmscanKswapdSleepFtraceEvent} message MmVmscanKswapdSleepFtraceEvent\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            MmVmscanKswapdSleepFtraceEvent.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults)\n                    object.nid = 0;\n                if (message.nid != null && message.hasOwnProperty(\"nid\"))\n                    object.nid = message.nid;\n                return object;\n            };\n\n            /**\n             * Converts this MmVmscanKswapdSleepFtraceEvent to JSON.\n             * @function toJSON\n             * @memberof perfetto.protos.MmVmscanKswapdSleepFtraceEvent\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            MmVmscanKswapdSleepFtraceEvent.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return MmVmscanKswapdSleepFtraceEvent;\n        })();\n\n        protos.MmVmscanKswapdWakeFtraceEvent = (function() {\n\n            /**\n             * Properties of a MmVmscanKswapdWakeFtraceEvent.\n             * @memberof perfetto.protos\n             * @interface IMmVmscanKswapdWakeFtraceEvent\n             * @property {number|null} [nid] MmVmscanKswapdWakeFtraceEvent nid\n             * @property {number|null} [order] MmVmscanKswapdWakeFtraceEvent order\n             */\n\n            /**\n             * Constructs a new MmVmscanKswapdWakeFtraceEvent.\n             * @memberof perfetto.protos\n             * @classdesc Represents a MmVmscanKswapdWakeFtraceEvent.\n             * @implements IMmVmscanKswapdWakeFtraceEvent\n             * @constructor\n             * @param {perfetto.protos.IMmVmscanKswapdWakeFtraceEvent=} [properties] Properties to set\n             */\n            function MmVmscanKswapdWakeFtraceEvent(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * MmVmscanKswapdWakeFtraceEvent nid.\n             * @member {number} nid\n             * @memberof perfetto.protos.MmVmscanKswapdWakeFtraceEvent\n             * @instance\n             */\n            MmVmscanKswapdWakeFtraceEvent.prototype.nid = 0;\n\n            /**\n             * MmVmscanKswapdWakeFtraceEvent order.\n             * @member {number} order\n             * @memberof perfetto.protos.MmVmscanKswapdWakeFtraceEvent\n             * @instance\n             */\n            MmVmscanKswapdWakeFtraceEvent.prototype.order = 0;\n\n            /**\n             * Creates a new MmVmscanKswapdWakeFtraceEvent instance using the specified properties.\n             * @function create\n             * @memberof perfetto.protos.MmVmscanKswapdWakeFtraceEvent\n             * @static\n             * @param {perfetto.protos.IMmVmscanKswapdWakeFtraceEvent=} [properties] Properties to set\n             * @returns {perfetto.protos.MmVmscanKswapdWakeFtraceEvent} MmVmscanKswapdWakeFtraceEvent instance\n             */\n            MmVmscanKswapdWakeFtraceEvent.create = function create(properties) {\n                return new MmVmscanKswapdWakeFtraceEvent(properties);\n            };\n\n            /**\n             * Encodes the specified MmVmscanKswapdWakeFtraceEvent message. Does not implicitly {@link perfetto.protos.MmVmscanKswapdWakeFtraceEvent.verify|verify} messages.\n             * @function encode\n             * @memberof perfetto.protos.MmVmscanKswapdWakeFtraceEvent\n             * @static\n             * @param {perfetto.protos.IMmVmscanKswapdWakeFtraceEvent} message MmVmscanKswapdWakeFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            MmVmscanKswapdWakeFtraceEvent.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.nid != null && message.hasOwnProperty(\"nid\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.nid);\n                if (message.order != null && message.hasOwnProperty(\"order\"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.order);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified MmVmscanKswapdWakeFtraceEvent message, length delimited. Does not implicitly {@link perfetto.protos.MmVmscanKswapdWakeFtraceEvent.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof perfetto.protos.MmVmscanKswapdWakeFtraceEvent\n             * @static\n             * @param {perfetto.protos.IMmVmscanKswapdWakeFtraceEvent} message MmVmscanKswapdWakeFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            MmVmscanKswapdWakeFtraceEvent.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a MmVmscanKswapdWakeFtraceEvent message from the specified reader or buffer.\n             * @function decode\n             * @memberof perfetto.protos.MmVmscanKswapdWakeFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {perfetto.protos.MmVmscanKswapdWakeFtraceEvent} MmVmscanKswapdWakeFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            MmVmscanKswapdWakeFtraceEvent.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.MmVmscanKswapdWakeFtraceEvent();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.nid = reader.int32();\n                        break;\n                    case 2:\n                        message.order = reader.int32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a MmVmscanKswapdWakeFtraceEvent message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof perfetto.protos.MmVmscanKswapdWakeFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {perfetto.protos.MmVmscanKswapdWakeFtraceEvent} MmVmscanKswapdWakeFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            MmVmscanKswapdWakeFtraceEvent.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a MmVmscanKswapdWakeFtraceEvent message.\n             * @function verify\n             * @memberof perfetto.protos.MmVmscanKswapdWakeFtraceEvent\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            MmVmscanKswapdWakeFtraceEvent.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.nid != null && message.hasOwnProperty(\"nid\"))\n                    if (!$util.isInteger(message.nid))\n                        return \"nid: integer expected\";\n                if (message.order != null && message.hasOwnProperty(\"order\"))\n                    if (!$util.isInteger(message.order))\n                        return \"order: integer expected\";\n                return null;\n            };\n\n            /**\n             * Creates a MmVmscanKswapdWakeFtraceEvent message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof perfetto.protos.MmVmscanKswapdWakeFtraceEvent\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {perfetto.protos.MmVmscanKswapdWakeFtraceEvent} MmVmscanKswapdWakeFtraceEvent\n             */\n            MmVmscanKswapdWakeFtraceEvent.fromObject = function fromObject(object) {\n                if (object instanceof $root.perfetto.protos.MmVmscanKswapdWakeFtraceEvent)\n                    return object;\n                var message = new $root.perfetto.protos.MmVmscanKswapdWakeFtraceEvent();\n                if (object.nid != null)\n                    message.nid = object.nid | 0;\n                if (object.order != null)\n                    message.order = object.order | 0;\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a MmVmscanKswapdWakeFtraceEvent message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof perfetto.protos.MmVmscanKswapdWakeFtraceEvent\n             * @static\n             * @param {perfetto.protos.MmVmscanKswapdWakeFtraceEvent} message MmVmscanKswapdWakeFtraceEvent\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            MmVmscanKswapdWakeFtraceEvent.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.nid = 0;\n                    object.order = 0;\n                }\n                if (message.nid != null && message.hasOwnProperty(\"nid\"))\n                    object.nid = message.nid;\n                if (message.order != null && message.hasOwnProperty(\"order\"))\n                    object.order = message.order;\n                return object;\n            };\n\n            /**\n             * Converts this MmVmscanKswapdWakeFtraceEvent to JSON.\n             * @function toJSON\n             * @memberof perfetto.protos.MmVmscanKswapdWakeFtraceEvent\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            MmVmscanKswapdWakeFtraceEvent.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return MmVmscanKswapdWakeFtraceEvent;\n        })();\n\n        protos.SchedBlockedReasonFtraceEvent = (function() {\n\n            /**\n             * Properties of a SchedBlockedReasonFtraceEvent.\n             * @memberof perfetto.protos\n             * @interface ISchedBlockedReasonFtraceEvent\n             * @property {number|null} [pid] SchedBlockedReasonFtraceEvent pid\n             * @property {number|Long|null} [caller] SchedBlockedReasonFtraceEvent caller\n             * @property {number|null} [ioWait] SchedBlockedReasonFtraceEvent ioWait\n             */\n\n            /**\n             * Constructs a new SchedBlockedReasonFtraceEvent.\n             * @memberof perfetto.protos\n             * @classdesc Represents a SchedBlockedReasonFtraceEvent.\n             * @implements ISchedBlockedReasonFtraceEvent\n             * @constructor\n             * @param {perfetto.protos.ISchedBlockedReasonFtraceEvent=} [properties] Properties to set\n             */\n            function SchedBlockedReasonFtraceEvent(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * SchedBlockedReasonFtraceEvent pid.\n             * @member {number} pid\n             * @memberof perfetto.protos.SchedBlockedReasonFtraceEvent\n             * @instance\n             */\n            SchedBlockedReasonFtraceEvent.prototype.pid = 0;\n\n            /**\n             * SchedBlockedReasonFtraceEvent caller.\n             * @member {number|Long} caller\n             * @memberof perfetto.protos.SchedBlockedReasonFtraceEvent\n             * @instance\n             */\n            SchedBlockedReasonFtraceEvent.prototype.caller = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n            /**\n             * SchedBlockedReasonFtraceEvent ioWait.\n             * @member {number} ioWait\n             * @memberof perfetto.protos.SchedBlockedReasonFtraceEvent\n             * @instance\n             */\n            SchedBlockedReasonFtraceEvent.prototype.ioWait = 0;\n\n            /**\n             * Creates a new SchedBlockedReasonFtraceEvent instance using the specified properties.\n             * @function create\n             * @memberof perfetto.protos.SchedBlockedReasonFtraceEvent\n             * @static\n             * @param {perfetto.protos.ISchedBlockedReasonFtraceEvent=} [properties] Properties to set\n             * @returns {perfetto.protos.SchedBlockedReasonFtraceEvent} SchedBlockedReasonFtraceEvent instance\n             */\n            SchedBlockedReasonFtraceEvent.create = function create(properties) {\n                return new SchedBlockedReasonFtraceEvent(properties);\n            };\n\n            /**\n             * Encodes the specified SchedBlockedReasonFtraceEvent message. Does not implicitly {@link perfetto.protos.SchedBlockedReasonFtraceEvent.verify|verify} messages.\n             * @function encode\n             * @memberof perfetto.protos.SchedBlockedReasonFtraceEvent\n             * @static\n             * @param {perfetto.protos.ISchedBlockedReasonFtraceEvent} message SchedBlockedReasonFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            SchedBlockedReasonFtraceEvent.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.pid != null && message.hasOwnProperty(\"pid\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.pid);\n                if (message.caller != null && message.hasOwnProperty(\"caller\"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).uint64(message.caller);\n                if (message.ioWait != null && message.hasOwnProperty(\"ioWait\"))\n                    writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.ioWait);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified SchedBlockedReasonFtraceEvent message, length delimited. Does not implicitly {@link perfetto.protos.SchedBlockedReasonFtraceEvent.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof perfetto.protos.SchedBlockedReasonFtraceEvent\n             * @static\n             * @param {perfetto.protos.ISchedBlockedReasonFtraceEvent} message SchedBlockedReasonFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            SchedBlockedReasonFtraceEvent.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a SchedBlockedReasonFtraceEvent message from the specified reader or buffer.\n             * @function decode\n             * @memberof perfetto.protos.SchedBlockedReasonFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {perfetto.protos.SchedBlockedReasonFtraceEvent} SchedBlockedReasonFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            SchedBlockedReasonFtraceEvent.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.SchedBlockedReasonFtraceEvent();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.pid = reader.int32();\n                        break;\n                    case 2:\n                        message.caller = reader.uint64();\n                        break;\n                    case 3:\n                        message.ioWait = reader.uint32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a SchedBlockedReasonFtraceEvent message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof perfetto.protos.SchedBlockedReasonFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {perfetto.protos.SchedBlockedReasonFtraceEvent} SchedBlockedReasonFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            SchedBlockedReasonFtraceEvent.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a SchedBlockedReasonFtraceEvent message.\n             * @function verify\n             * @memberof perfetto.protos.SchedBlockedReasonFtraceEvent\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            SchedBlockedReasonFtraceEvent.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.pid != null && message.hasOwnProperty(\"pid\"))\n                    if (!$util.isInteger(message.pid))\n                        return \"pid: integer expected\";\n                if (message.caller != null && message.hasOwnProperty(\"caller\"))\n                    if (!$util.isInteger(message.caller) && !(message.caller && $util.isInteger(message.caller.low) && $util.isInteger(message.caller.high)))\n                        return \"caller: integer|Long expected\";\n                if (message.ioWait != null && message.hasOwnProperty(\"ioWait\"))\n                    if (!$util.isInteger(message.ioWait))\n                        return \"ioWait: integer expected\";\n                return null;\n            };\n\n            /**\n             * Creates a SchedBlockedReasonFtraceEvent message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof perfetto.protos.SchedBlockedReasonFtraceEvent\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {perfetto.protos.SchedBlockedReasonFtraceEvent} SchedBlockedReasonFtraceEvent\n             */\n            SchedBlockedReasonFtraceEvent.fromObject = function fromObject(object) {\n                if (object instanceof $root.perfetto.protos.SchedBlockedReasonFtraceEvent)\n                    return object;\n                var message = new $root.perfetto.protos.SchedBlockedReasonFtraceEvent();\n                if (object.pid != null)\n                    message.pid = object.pid | 0;\n                if (object.caller != null)\n                    if ($util.Long)\n                        (message.caller = $util.Long.fromValue(object.caller)).unsigned = true;\n                    else if (typeof object.caller === \"string\")\n                        message.caller = parseInt(object.caller, 10);\n                    else if (typeof object.caller === \"number\")\n                        message.caller = object.caller;\n                    else if (typeof object.caller === \"object\")\n                        message.caller = new $util.LongBits(object.caller.low >>> 0, object.caller.high >>> 0).toNumber(true);\n                if (object.ioWait != null)\n                    message.ioWait = object.ioWait >>> 0;\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a SchedBlockedReasonFtraceEvent message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof perfetto.protos.SchedBlockedReasonFtraceEvent\n             * @static\n             * @param {perfetto.protos.SchedBlockedReasonFtraceEvent} message SchedBlockedReasonFtraceEvent\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            SchedBlockedReasonFtraceEvent.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.pid = 0;\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, true);\n                        object.caller = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.caller = options.longs === String ? \"0\" : 0;\n                    object.ioWait = 0;\n                }\n                if (message.pid != null && message.hasOwnProperty(\"pid\"))\n                    object.pid = message.pid;\n                if (message.caller != null && message.hasOwnProperty(\"caller\"))\n                    if (typeof message.caller === \"number\")\n                        object.caller = options.longs === String ? String(message.caller) : message.caller;\n                    else\n                        object.caller = options.longs === String ? $util.Long.prototype.toString.call(message.caller) : options.longs === Number ? new $util.LongBits(message.caller.low >>> 0, message.caller.high >>> 0).toNumber(true) : message.caller;\n                if (message.ioWait != null && message.hasOwnProperty(\"ioWait\"))\n                    object.ioWait = message.ioWait;\n                return object;\n            };\n\n            /**\n             * Converts this SchedBlockedReasonFtraceEvent to JSON.\n             * @function toJSON\n             * @memberof perfetto.protos.SchedBlockedReasonFtraceEvent\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            SchedBlockedReasonFtraceEvent.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return SchedBlockedReasonFtraceEvent;\n        })();\n\n        protos.SchedCpuHotplugFtraceEvent = (function() {\n\n            /**\n             * Properties of a SchedCpuHotplugFtraceEvent.\n             * @memberof perfetto.protos\n             * @interface ISchedCpuHotplugFtraceEvent\n             * @property {number|null} [affectedCpu] SchedCpuHotplugFtraceEvent affectedCpu\n             * @property {number|null} [error] SchedCpuHotplugFtraceEvent error\n             * @property {number|null} [status] SchedCpuHotplugFtraceEvent status\n             */\n\n            /**\n             * Constructs a new SchedCpuHotplugFtraceEvent.\n             * @memberof perfetto.protos\n             * @classdesc Represents a SchedCpuHotplugFtraceEvent.\n             * @implements ISchedCpuHotplugFtraceEvent\n             * @constructor\n             * @param {perfetto.protos.ISchedCpuHotplugFtraceEvent=} [properties] Properties to set\n             */\n            function SchedCpuHotplugFtraceEvent(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * SchedCpuHotplugFtraceEvent affectedCpu.\n             * @member {number} affectedCpu\n             * @memberof perfetto.protos.SchedCpuHotplugFtraceEvent\n             * @instance\n             */\n            SchedCpuHotplugFtraceEvent.prototype.affectedCpu = 0;\n\n            /**\n             * SchedCpuHotplugFtraceEvent error.\n             * @member {number} error\n             * @memberof perfetto.protos.SchedCpuHotplugFtraceEvent\n             * @instance\n             */\n            SchedCpuHotplugFtraceEvent.prototype.error = 0;\n\n            /**\n             * SchedCpuHotplugFtraceEvent status.\n             * @member {number} status\n             * @memberof perfetto.protos.SchedCpuHotplugFtraceEvent\n             * @instance\n             */\n            SchedCpuHotplugFtraceEvent.prototype.status = 0;\n\n            /**\n             * Creates a new SchedCpuHotplugFtraceEvent instance using the specified properties.\n             * @function create\n             * @memberof perfetto.protos.SchedCpuHotplugFtraceEvent\n             * @static\n             * @param {perfetto.protos.ISchedCpuHotplugFtraceEvent=} [properties] Properties to set\n             * @returns {perfetto.protos.SchedCpuHotplugFtraceEvent} SchedCpuHotplugFtraceEvent instance\n             */\n            SchedCpuHotplugFtraceEvent.create = function create(properties) {\n                return new SchedCpuHotplugFtraceEvent(properties);\n            };\n\n            /**\n             * Encodes the specified SchedCpuHotplugFtraceEvent message. Does not implicitly {@link perfetto.protos.SchedCpuHotplugFtraceEvent.verify|verify} messages.\n             * @function encode\n             * @memberof perfetto.protos.SchedCpuHotplugFtraceEvent\n             * @static\n             * @param {perfetto.protos.ISchedCpuHotplugFtraceEvent} message SchedCpuHotplugFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            SchedCpuHotplugFtraceEvent.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.affectedCpu != null && message.hasOwnProperty(\"affectedCpu\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.affectedCpu);\n                if (message.error != null && message.hasOwnProperty(\"error\"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.error);\n                if (message.status != null && message.hasOwnProperty(\"status\"))\n                    writer.uint32(/* id 3, wireType 0 =*/24).int32(message.status);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified SchedCpuHotplugFtraceEvent message, length delimited. Does not implicitly {@link perfetto.protos.SchedCpuHotplugFtraceEvent.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof perfetto.protos.SchedCpuHotplugFtraceEvent\n             * @static\n             * @param {perfetto.protos.ISchedCpuHotplugFtraceEvent} message SchedCpuHotplugFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            SchedCpuHotplugFtraceEvent.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a SchedCpuHotplugFtraceEvent message from the specified reader or buffer.\n             * @function decode\n             * @memberof perfetto.protos.SchedCpuHotplugFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {perfetto.protos.SchedCpuHotplugFtraceEvent} SchedCpuHotplugFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            SchedCpuHotplugFtraceEvent.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.SchedCpuHotplugFtraceEvent();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.affectedCpu = reader.int32();\n                        break;\n                    case 2:\n                        message.error = reader.int32();\n                        break;\n                    case 3:\n                        message.status = reader.int32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a SchedCpuHotplugFtraceEvent message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof perfetto.protos.SchedCpuHotplugFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {perfetto.protos.SchedCpuHotplugFtraceEvent} SchedCpuHotplugFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            SchedCpuHotplugFtraceEvent.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a SchedCpuHotplugFtraceEvent message.\n             * @function verify\n             * @memberof perfetto.protos.SchedCpuHotplugFtraceEvent\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            SchedCpuHotplugFtraceEvent.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.affectedCpu != null && message.hasOwnProperty(\"affectedCpu\"))\n                    if (!$util.isInteger(message.affectedCpu))\n                        return \"affectedCpu: integer expected\";\n                if (message.error != null && message.hasOwnProperty(\"error\"))\n                    if (!$util.isInteger(message.error))\n                        return \"error: integer expected\";\n                if (message.status != null && message.hasOwnProperty(\"status\"))\n                    if (!$util.isInteger(message.status))\n                        return \"status: integer expected\";\n                return null;\n            };\n\n            /**\n             * Creates a SchedCpuHotplugFtraceEvent message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof perfetto.protos.SchedCpuHotplugFtraceEvent\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {perfetto.protos.SchedCpuHotplugFtraceEvent} SchedCpuHotplugFtraceEvent\n             */\n            SchedCpuHotplugFtraceEvent.fromObject = function fromObject(object) {\n                if (object instanceof $root.perfetto.protos.SchedCpuHotplugFtraceEvent)\n                    return object;\n                var message = new $root.perfetto.protos.SchedCpuHotplugFtraceEvent();\n                if (object.affectedCpu != null)\n                    message.affectedCpu = object.affectedCpu | 0;\n                if (object.error != null)\n                    message.error = object.error | 0;\n                if (object.status != null)\n                    message.status = object.status | 0;\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a SchedCpuHotplugFtraceEvent message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof perfetto.protos.SchedCpuHotplugFtraceEvent\n             * @static\n             * @param {perfetto.protos.SchedCpuHotplugFtraceEvent} message SchedCpuHotplugFtraceEvent\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            SchedCpuHotplugFtraceEvent.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.affectedCpu = 0;\n                    object.error = 0;\n                    object.status = 0;\n                }\n                if (message.affectedCpu != null && message.hasOwnProperty(\"affectedCpu\"))\n                    object.affectedCpu = message.affectedCpu;\n                if (message.error != null && message.hasOwnProperty(\"error\"))\n                    object.error = message.error;\n                if (message.status != null && message.hasOwnProperty(\"status\"))\n                    object.status = message.status;\n                return object;\n            };\n\n            /**\n             * Converts this SchedCpuHotplugFtraceEvent to JSON.\n             * @function toJSON\n             * @memberof perfetto.protos.SchedCpuHotplugFtraceEvent\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            SchedCpuHotplugFtraceEvent.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return SchedCpuHotplugFtraceEvent;\n        })();\n\n        protos.SchedSwitchFtraceEvent = (function() {\n\n            /**\n             * Properties of a SchedSwitchFtraceEvent.\n             * @memberof perfetto.protos\n             * @interface ISchedSwitchFtraceEvent\n             * @property {string|null} [prevComm] SchedSwitchFtraceEvent prevComm\n             * @property {number|null} [prevPid] SchedSwitchFtraceEvent prevPid\n             * @property {number|null} [prevPrio] SchedSwitchFtraceEvent prevPrio\n             * @property {number|Long|null} [prevState] SchedSwitchFtraceEvent prevState\n             * @property {string|null} [nextComm] SchedSwitchFtraceEvent nextComm\n             * @property {number|null} [nextPid] SchedSwitchFtraceEvent nextPid\n             * @property {number|null} [nextPrio] SchedSwitchFtraceEvent nextPrio\n             */\n\n            /**\n             * Constructs a new SchedSwitchFtraceEvent.\n             * @memberof perfetto.protos\n             * @classdesc Represents a SchedSwitchFtraceEvent.\n             * @implements ISchedSwitchFtraceEvent\n             * @constructor\n             * @param {perfetto.protos.ISchedSwitchFtraceEvent=} [properties] Properties to set\n             */\n            function SchedSwitchFtraceEvent(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * SchedSwitchFtraceEvent prevComm.\n             * @member {string} prevComm\n             * @memberof perfetto.protos.SchedSwitchFtraceEvent\n             * @instance\n             */\n            SchedSwitchFtraceEvent.prototype.prevComm = \"\";\n\n            /**\n             * SchedSwitchFtraceEvent prevPid.\n             * @member {number} prevPid\n             * @memberof perfetto.protos.SchedSwitchFtraceEvent\n             * @instance\n             */\n            SchedSwitchFtraceEvent.prototype.prevPid = 0;\n\n            /**\n             * SchedSwitchFtraceEvent prevPrio.\n             * @member {number} prevPrio\n             * @memberof perfetto.protos.SchedSwitchFtraceEvent\n             * @instance\n             */\n            SchedSwitchFtraceEvent.prototype.prevPrio = 0;\n\n            /**\n             * SchedSwitchFtraceEvent prevState.\n             * @member {number|Long} prevState\n             * @memberof perfetto.protos.SchedSwitchFtraceEvent\n             * @instance\n             */\n            SchedSwitchFtraceEvent.prototype.prevState = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n            /**\n             * SchedSwitchFtraceEvent nextComm.\n             * @member {string} nextComm\n             * @memberof perfetto.protos.SchedSwitchFtraceEvent\n             * @instance\n             */\n            SchedSwitchFtraceEvent.prototype.nextComm = \"\";\n\n            /**\n             * SchedSwitchFtraceEvent nextPid.\n             * @member {number} nextPid\n             * @memberof perfetto.protos.SchedSwitchFtraceEvent\n             * @instance\n             */\n            SchedSwitchFtraceEvent.prototype.nextPid = 0;\n\n            /**\n             * SchedSwitchFtraceEvent nextPrio.\n             * @member {number} nextPrio\n             * @memberof perfetto.protos.SchedSwitchFtraceEvent\n             * @instance\n             */\n            SchedSwitchFtraceEvent.prototype.nextPrio = 0;\n\n            /**\n             * Creates a new SchedSwitchFtraceEvent instance using the specified properties.\n             * @function create\n             * @memberof perfetto.protos.SchedSwitchFtraceEvent\n             * @static\n             * @param {perfetto.protos.ISchedSwitchFtraceEvent=} [properties] Properties to set\n             * @returns {perfetto.protos.SchedSwitchFtraceEvent} SchedSwitchFtraceEvent instance\n             */\n            SchedSwitchFtraceEvent.create = function create(properties) {\n                return new SchedSwitchFtraceEvent(properties);\n            };\n\n            /**\n             * Encodes the specified SchedSwitchFtraceEvent message. Does not implicitly {@link perfetto.protos.SchedSwitchFtraceEvent.verify|verify} messages.\n             * @function encode\n             * @memberof perfetto.protos.SchedSwitchFtraceEvent\n             * @static\n             * @param {perfetto.protos.ISchedSwitchFtraceEvent} message SchedSwitchFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            SchedSwitchFtraceEvent.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.prevComm != null && message.hasOwnProperty(\"prevComm\"))\n                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.prevComm);\n                if (message.prevPid != null && message.hasOwnProperty(\"prevPid\"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.prevPid);\n                if (message.prevPrio != null && message.hasOwnProperty(\"prevPrio\"))\n                    writer.uint32(/* id 3, wireType 0 =*/24).int32(message.prevPrio);\n                if (message.prevState != null && message.hasOwnProperty(\"prevState\"))\n                    writer.uint32(/* id 4, wireType 0 =*/32).int64(message.prevState);\n                if (message.nextComm != null && message.hasOwnProperty(\"nextComm\"))\n                    writer.uint32(/* id 5, wireType 2 =*/42).string(message.nextComm);\n                if (message.nextPid != null && message.hasOwnProperty(\"nextPid\"))\n                    writer.uint32(/* id 6, wireType 0 =*/48).int32(message.nextPid);\n                if (message.nextPrio != null && message.hasOwnProperty(\"nextPrio\"))\n                    writer.uint32(/* id 7, wireType 0 =*/56).int32(message.nextPrio);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified SchedSwitchFtraceEvent message, length delimited. Does not implicitly {@link perfetto.protos.SchedSwitchFtraceEvent.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof perfetto.protos.SchedSwitchFtraceEvent\n             * @static\n             * @param {perfetto.protos.ISchedSwitchFtraceEvent} message SchedSwitchFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            SchedSwitchFtraceEvent.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a SchedSwitchFtraceEvent message from the specified reader or buffer.\n             * @function decode\n             * @memberof perfetto.protos.SchedSwitchFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {perfetto.protos.SchedSwitchFtraceEvent} SchedSwitchFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            SchedSwitchFtraceEvent.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.SchedSwitchFtraceEvent();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.prevComm = reader.string();\n                        break;\n                    case 2:\n                        message.prevPid = reader.int32();\n                        break;\n                    case 3:\n                        message.prevPrio = reader.int32();\n                        break;\n                    case 4:\n                        message.prevState = reader.int64();\n                        break;\n                    case 5:\n                        message.nextComm = reader.string();\n                        break;\n                    case 6:\n                        message.nextPid = reader.int32();\n                        break;\n                    case 7:\n                        message.nextPrio = reader.int32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a SchedSwitchFtraceEvent message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof perfetto.protos.SchedSwitchFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {perfetto.protos.SchedSwitchFtraceEvent} SchedSwitchFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            SchedSwitchFtraceEvent.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a SchedSwitchFtraceEvent message.\n             * @function verify\n             * @memberof perfetto.protos.SchedSwitchFtraceEvent\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            SchedSwitchFtraceEvent.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.prevComm != null && message.hasOwnProperty(\"prevComm\"))\n                    if (!$util.isString(message.prevComm))\n                        return \"prevComm: string expected\";\n                if (message.prevPid != null && message.hasOwnProperty(\"prevPid\"))\n                    if (!$util.isInteger(message.prevPid))\n                        return \"prevPid: integer expected\";\n                if (message.prevPrio != null && message.hasOwnProperty(\"prevPrio\"))\n                    if (!$util.isInteger(message.prevPrio))\n                        return \"prevPrio: integer expected\";\n                if (message.prevState != null && message.hasOwnProperty(\"prevState\"))\n                    if (!$util.isInteger(message.prevState) && !(message.prevState && $util.isInteger(message.prevState.low) && $util.isInteger(message.prevState.high)))\n                        return \"prevState: integer|Long expected\";\n                if (message.nextComm != null && message.hasOwnProperty(\"nextComm\"))\n                    if (!$util.isString(message.nextComm))\n                        return \"nextComm: string expected\";\n                if (message.nextPid != null && message.hasOwnProperty(\"nextPid\"))\n                    if (!$util.isInteger(message.nextPid))\n                        return \"nextPid: integer expected\";\n                if (message.nextPrio != null && message.hasOwnProperty(\"nextPrio\"))\n                    if (!$util.isInteger(message.nextPrio))\n                        return \"nextPrio: integer expected\";\n                return null;\n            };\n\n            /**\n             * Creates a SchedSwitchFtraceEvent message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof perfetto.protos.SchedSwitchFtraceEvent\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {perfetto.protos.SchedSwitchFtraceEvent} SchedSwitchFtraceEvent\n             */\n            SchedSwitchFtraceEvent.fromObject = function fromObject(object) {\n                if (object instanceof $root.perfetto.protos.SchedSwitchFtraceEvent)\n                    return object;\n                var message = new $root.perfetto.protos.SchedSwitchFtraceEvent();\n                if (object.prevComm != null)\n                    message.prevComm = String(object.prevComm);\n                if (object.prevPid != null)\n                    message.prevPid = object.prevPid | 0;\n                if (object.prevPrio != null)\n                    message.prevPrio = object.prevPrio | 0;\n                if (object.prevState != null)\n                    if ($util.Long)\n                        (message.prevState = $util.Long.fromValue(object.prevState)).unsigned = false;\n                    else if (typeof object.prevState === \"string\")\n                        message.prevState = parseInt(object.prevState, 10);\n                    else if (typeof object.prevState === \"number\")\n                        message.prevState = object.prevState;\n                    else if (typeof object.prevState === \"object\")\n                        message.prevState = new $util.LongBits(object.prevState.low >>> 0, object.prevState.high >>> 0).toNumber();\n                if (object.nextComm != null)\n                    message.nextComm = String(object.nextComm);\n                if (object.nextPid != null)\n                    message.nextPid = object.nextPid | 0;\n                if (object.nextPrio != null)\n                    message.nextPrio = object.nextPrio | 0;\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a SchedSwitchFtraceEvent message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof perfetto.protos.SchedSwitchFtraceEvent\n             * @static\n             * @param {perfetto.protos.SchedSwitchFtraceEvent} message SchedSwitchFtraceEvent\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            SchedSwitchFtraceEvent.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.prevComm = \"\";\n                    object.prevPid = 0;\n                    object.prevPrio = 0;\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, false);\n                        object.prevState = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.prevState = options.longs === String ? \"0\" : 0;\n                    object.nextComm = \"\";\n                    object.nextPid = 0;\n                    object.nextPrio = 0;\n                }\n                if (message.prevComm != null && message.hasOwnProperty(\"prevComm\"))\n                    object.prevComm = message.prevComm;\n                if (message.prevPid != null && message.hasOwnProperty(\"prevPid\"))\n                    object.prevPid = message.prevPid;\n                if (message.prevPrio != null && message.hasOwnProperty(\"prevPrio\"))\n                    object.prevPrio = message.prevPrio;\n                if (message.prevState != null && message.hasOwnProperty(\"prevState\"))\n                    if (typeof message.prevState === \"number\")\n                        object.prevState = options.longs === String ? String(message.prevState) : message.prevState;\n                    else\n                        object.prevState = options.longs === String ? $util.Long.prototype.toString.call(message.prevState) : options.longs === Number ? new $util.LongBits(message.prevState.low >>> 0, message.prevState.high >>> 0).toNumber() : message.prevState;\n                if (message.nextComm != null && message.hasOwnProperty(\"nextComm\"))\n                    object.nextComm = message.nextComm;\n                if (message.nextPid != null && message.hasOwnProperty(\"nextPid\"))\n                    object.nextPid = message.nextPid;\n                if (message.nextPrio != null && message.hasOwnProperty(\"nextPrio\"))\n                    object.nextPrio = message.nextPrio;\n                return object;\n            };\n\n            /**\n             * Converts this SchedSwitchFtraceEvent to JSON.\n             * @function toJSON\n             * @memberof perfetto.protos.SchedSwitchFtraceEvent\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            SchedSwitchFtraceEvent.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return SchedSwitchFtraceEvent;\n        })();\n\n        protos.SchedWakeupFtraceEvent = (function() {\n\n            /**\n             * Properties of a SchedWakeupFtraceEvent.\n             * @memberof perfetto.protos\n             * @interface ISchedWakeupFtraceEvent\n             * @property {string|null} [comm] SchedWakeupFtraceEvent comm\n             * @property {number|null} [pid] SchedWakeupFtraceEvent pid\n             * @property {number|null} [prio] SchedWakeupFtraceEvent prio\n             * @property {number|null} [success] SchedWakeupFtraceEvent success\n             * @property {number|null} [targetCpu] SchedWakeupFtraceEvent targetCpu\n             */\n\n            /**\n             * Constructs a new SchedWakeupFtraceEvent.\n             * @memberof perfetto.protos\n             * @classdesc Represents a SchedWakeupFtraceEvent.\n             * @implements ISchedWakeupFtraceEvent\n             * @constructor\n             * @param {perfetto.protos.ISchedWakeupFtraceEvent=} [properties] Properties to set\n             */\n            function SchedWakeupFtraceEvent(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * SchedWakeupFtraceEvent comm.\n             * @member {string} comm\n             * @memberof perfetto.protos.SchedWakeupFtraceEvent\n             * @instance\n             */\n            SchedWakeupFtraceEvent.prototype.comm = \"\";\n\n            /**\n             * SchedWakeupFtraceEvent pid.\n             * @member {number} pid\n             * @memberof perfetto.protos.SchedWakeupFtraceEvent\n             * @instance\n             */\n            SchedWakeupFtraceEvent.prototype.pid = 0;\n\n            /**\n             * SchedWakeupFtraceEvent prio.\n             * @member {number} prio\n             * @memberof perfetto.protos.SchedWakeupFtraceEvent\n             * @instance\n             */\n            SchedWakeupFtraceEvent.prototype.prio = 0;\n\n            /**\n             * SchedWakeupFtraceEvent success.\n             * @member {number} success\n             * @memberof perfetto.protos.SchedWakeupFtraceEvent\n             * @instance\n             */\n            SchedWakeupFtraceEvent.prototype.success = 0;\n\n            /**\n             * SchedWakeupFtraceEvent targetCpu.\n             * @member {number} targetCpu\n             * @memberof perfetto.protos.SchedWakeupFtraceEvent\n             * @instance\n             */\n            SchedWakeupFtraceEvent.prototype.targetCpu = 0;\n\n            /**\n             * Creates a new SchedWakeupFtraceEvent instance using the specified properties.\n             * @function create\n             * @memberof perfetto.protos.SchedWakeupFtraceEvent\n             * @static\n             * @param {perfetto.protos.ISchedWakeupFtraceEvent=} [properties] Properties to set\n             * @returns {perfetto.protos.SchedWakeupFtraceEvent} SchedWakeupFtraceEvent instance\n             */\n            SchedWakeupFtraceEvent.create = function create(properties) {\n                return new SchedWakeupFtraceEvent(properties);\n            };\n\n            /**\n             * Encodes the specified SchedWakeupFtraceEvent message. Does not implicitly {@link perfetto.protos.SchedWakeupFtraceEvent.verify|verify} messages.\n             * @function encode\n             * @memberof perfetto.protos.SchedWakeupFtraceEvent\n             * @static\n             * @param {perfetto.protos.ISchedWakeupFtraceEvent} message SchedWakeupFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            SchedWakeupFtraceEvent.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.comm != null && message.hasOwnProperty(\"comm\"))\n                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.comm);\n                if (message.pid != null && message.hasOwnProperty(\"pid\"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pid);\n                if (message.prio != null && message.hasOwnProperty(\"prio\"))\n                    writer.uint32(/* id 3, wireType 0 =*/24).int32(message.prio);\n                if (message.success != null && message.hasOwnProperty(\"success\"))\n                    writer.uint32(/* id 4, wireType 0 =*/32).int32(message.success);\n                if (message.targetCpu != null && message.hasOwnProperty(\"targetCpu\"))\n                    writer.uint32(/* id 5, wireType 0 =*/40).int32(message.targetCpu);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified SchedWakeupFtraceEvent message, length delimited. Does not implicitly {@link perfetto.protos.SchedWakeupFtraceEvent.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof perfetto.protos.SchedWakeupFtraceEvent\n             * @static\n             * @param {perfetto.protos.ISchedWakeupFtraceEvent} message SchedWakeupFtraceEvent message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            SchedWakeupFtraceEvent.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a SchedWakeupFtraceEvent message from the specified reader or buffer.\n             * @function decode\n             * @memberof perfetto.protos.SchedWakeupFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {perfetto.protos.SchedWakeupFtraceEvent} SchedWakeupFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            SchedWakeupFtraceEvent.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.perfetto.protos.SchedWakeupFtraceEvent();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.comm = reader.string();\n                        break;\n                    case 2:\n                        message.pid = reader.int32();\n                        break;\n                    case 3:\n                        message.prio = reader.int32();\n                        break;\n                    case 4:\n                        message.success = reader.int32();\n                        break;\n                    case 5:\n                        message.targetCpu = reader.int32();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a SchedWakeupFtraceEvent message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof perfetto.protos.SchedWakeupFtraceEvent\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {perfetto.protos.SchedWakeupFtraceEvent} SchedWakeupFtraceEvent\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            SchedWakeupFtraceEvent.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a SchedWakeupFtraceEvent message.\n             * @function verify\n             * @memberof perfetto.protos.SchedWakeupFtraceEvent\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            SchedWakeupFtraceEvent.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.comm != null && message.hasOwnProperty(\"comm\"))\n                    if (!$util.isString(message.comm))\n                        return \"comm: string expected\";\n                if (message.pid != null && message.hasOwnProperty(\"pid\"))\n                    if (!$util.isInteger(message.pid))\n                        return \"pid: integer expected\";\n                if (message.prio != null && message.hasOwnProperty(\"prio\"))\n                    if (!$util.isInteger(message.prio))\n                        return \"prio: integer expected\";\n                if (message.success != null && message.hasOwnProperty(\"success\"))\n                    if (!$util.isInteger(message.success))\n                        return \"success: integer expected\";\n                if (message.targetCpu != null && message.hasOwnProperty(\"targetCpu\"))\n                    if (!$util.isInteger(message.targetCpu))\n                        return \"targetCpu: integer expected\";\n                return null;\n            };\n\n            /**\n             * Creates a SchedWakeupFtraceEvent message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof perfetto.protos.SchedWakeupFtraceEvent\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {perfetto.protos.SchedWakeupFtraceEvent} SchedWakeupFtraceEvent\n             */\n            SchedWakeupFtraceEvent.fromObject = function fromObject(object) {\n                if (object instanceof $root.perfetto.protos.SchedWakeupFtraceEvent)\n                    return object;\n                var message = new $root.perfetto.protos.SchedWakeupFtraceEvent();\n                if (object.comm != null)\n                    message.comm = String(object.comm);\n                if (object.pid != null)\n                    message.pid = object.pid | 0;\n                if (object.prio != null)\n                    message.prio = object.prio | 0;\n                if (object.success != null)\n                    message.success = object.success | 0;\n                if (object.targetCpu != null)\n                    message.targetCpu = object.targetCpu | 0;\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a SchedWakeupFtraceEvent message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof perfetto.protos.SchedWakeupFtraceEvent\n             * @static\n             * @param {perfetto.protos.SchedWakeupFtraceEvent} message SchedWakeupFtraceEvent\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            SchedWakeupFtraceEvent.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.comm = \"\";\n                    object.pid = 0;\n                    object.prio = 0;\n                    object.success = 0;\n                    object.targetCpu = 0;\n                }\n                if (message.comm != null && message.hasOwnProperty(\"comm\"))\n                    object.comm = message.comm;\n                if (message.pid != null && message.hasOwnProperty(\"pid\"))\n                    object.pid = message.pid;\n                if (message.prio != null && message.hasOwnProperty(\"prio\"))\n                    object.prio = message.prio;\n                if (message.success != null && message.hasOwnProperty(\"success\"))\n                    object.success = message.success;\n                if (message.targetCpu != null && message.hasOwnProperty(\"targetCpu\"))\n                    object.targetCpu = message.targetCpu;\n                return object;\n            };\n\n            /**\n             * Converts this SchedWakeupFtraceEvent to JSON.\n             * @function toJSON\n             * @memberof perfetto.protos.SchedWakeupFtraceEvent\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            SchedWakeupFtraceEvent.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return SchedWakeupFtraceEvent;\n        })();\n\n        return protos;\n    })();\n\n    return perfetto;\n})();\n\nmodule.exports = $root;\n","// minimal library entry point.\r\n\r\n\"use strict\";\r\nmodule.exports = require(\"./src/index-minimal\");\r\n","\"use strict\";\r\nvar protobuf = exports;\r\n\r\n/**\r\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\r\n * @name build\r\n * @type {string}\r\n * @const\r\n */\r\nprotobuf.build = \"minimal\";\r\n\r\n// Serialization\r\nprotobuf.Writer       = require(\"./writer\");\r\nprotobuf.BufferWriter = require(\"./writer_buffer\");\r\nprotobuf.Reader       = require(\"./reader\");\r\nprotobuf.BufferReader = require(\"./reader_buffer\");\r\n\r\n// Utility\r\nprotobuf.util         = require(\"./util/minimal\");\r\nprotobuf.rpc          = require(\"./rpc\");\r\nprotobuf.roots        = require(\"./roots\");\r\nprotobuf.configure    = configure;\r\n\r\n/* istanbul ignore next */\r\n/**\r\n * Reconfigures the library according to the environment.\r\n * @returns {undefined}\r\n */\r\nfunction configure() {\r\n    protobuf.Reader._configure(protobuf.BufferReader);\r\n    protobuf.util._configure();\r\n}\r\n\r\n// Configure serialization\r\nprotobuf.Writer._configure(protobuf.BufferWriter);\r\nconfigure();\r\n","\"use strict\";\r\nmodule.exports = {};\r\n\r\n/**\r\n * Named roots.\r\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\r\n * Can also be used manually to make roots available accross modules.\r\n * @name roots\r\n * @type {Object.<string,Root>}\r\n * @example\r\n * // pbjs -r myroot -o compiled.js ...\r\n *\r\n * // in another module:\r\n * require(\"./compiled.js\");\r\n *\r\n * // in any subsequent module:\r\n * var root = protobuf.roots[\"myroot\"];\r\n */\r\n","\"use strict\";\r\n\r\n/**\r\n * Streaming RPC helpers.\r\n * @namespace\r\n */\r\nvar rpc = exports;\r\n\r\n/**\r\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\r\n * @typedef RPCImpl\r\n * @type {function}\r\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\r\n * @param {Uint8Array} requestData Request data\r\n * @param {RPCImplCallback} callback Callback function\r\n * @returns {undefined}\r\n * @example\r\n * function rpcImpl(method, requestData, callback) {\r\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\r\n *         throw Error(\"no such method\");\r\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\r\n *         callback(err, responseData);\r\n *     });\r\n * }\r\n */\r\n\r\n/**\r\n * Node-style callback as used by {@link RPCImpl}.\r\n * @typedef RPCImplCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any, otherwise `null`\r\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\r\n * @returns {undefined}\r\n */\r\n\r\nrpc.Service = require(\"./rpc/service\");\r\n","\"use strict\";\r\nmodule.exports = Service;\r\n\r\nvar util = require(\"../util/minimal\");\r\n\r\n// Extends EventEmitter\r\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\r\n\r\n/**\r\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\r\n *\r\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\r\n * @typedef rpc.ServiceMethodCallback\r\n * @template TRes extends Message<TRes>\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {TRes} [response] Response message\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\r\n * @typedef rpc.ServiceMethod\r\n * @template TReq extends Message<TReq>\r\n * @template TRes extends Message<TRes>\r\n * @type {function}\r\n * @param {TReq|Properties<TReq>} request Request message or plain object\r\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\r\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\r\n */\r\n\r\n/**\r\n * Constructs a new RPC service instance.\r\n * @classdesc An RPC service as returned by {@link Service#create}.\r\n * @exports rpc.Service\r\n * @extends util.EventEmitter\r\n * @constructor\r\n * @param {RPCImpl} rpcImpl RPC implementation\r\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\r\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\r\n */\r\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\r\n\r\n    if (typeof rpcImpl !== \"function\")\r\n        throw TypeError(\"rpcImpl must be a function\");\r\n\r\n    util.EventEmitter.call(this);\r\n\r\n    /**\r\n     * RPC implementation. Becomes `null` once the service is ended.\r\n     * @type {RPCImpl|null}\r\n     */\r\n    this.rpcImpl = rpcImpl;\r\n\r\n    /**\r\n     * Whether requests are length-delimited.\r\n     * @type {boolean}\r\n     */\r\n    this.requestDelimited = Boolean(requestDelimited);\r\n\r\n    /**\r\n     * Whether responses are length-delimited.\r\n     * @type {boolean}\r\n     */\r\n    this.responseDelimited = Boolean(responseDelimited);\r\n}\r\n\r\n/**\r\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\r\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\r\n * @param {Constructor<TReq>} requestCtor Request constructor\r\n * @param {Constructor<TRes>} responseCtor Response constructor\r\n * @param {TReq|Properties<TReq>} request Request message or plain object\r\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\r\n * @returns {undefined}\r\n * @template TReq extends Message<TReq>\r\n * @template TRes extends Message<TRes>\r\n */\r\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\r\n\r\n    if (!request)\r\n        throw TypeError(\"request must be specified\");\r\n\r\n    var self = this;\r\n    if (!callback)\r\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\r\n\r\n    if (!self.rpcImpl) {\r\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\r\n        return undefined;\r\n    }\r\n\r\n    try {\r\n        return self.rpcImpl(\r\n            method,\r\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\r\n            function rpcCallback(err, response) {\r\n\r\n                if (err) {\r\n                    self.emit(\"error\", err, method);\r\n                    return callback(err);\r\n                }\r\n\r\n                if (response === null) {\r\n                    self.end(/* endedByRPC */ true);\r\n                    return undefined;\r\n                }\r\n\r\n                if (!(response instanceof responseCtor)) {\r\n                    try {\r\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\r\n                    } catch (err) {\r\n                        self.emit(\"error\", err, method);\r\n                        return callback(err);\r\n                    }\r\n                }\r\n\r\n                self.emit(\"data\", response, method);\r\n                return callback(null, response);\r\n            }\r\n        );\r\n    } catch (err) {\r\n        self.emit(\"error\", err, method);\r\n        setTimeout(function() { callback(err); }, 0);\r\n        return undefined;\r\n    }\r\n};\r\n\r\n/**\r\n * Ends this service and emits the `end` event.\r\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\r\n * @returns {rpc.Service} `this`\r\n */\r\nService.prototype.end = function end(endedByRPC) {\r\n    if (this.rpcImpl) {\r\n        if (!endedByRPC) // signal end to rpcImpl\r\n            this.rpcImpl(null, null, null);\r\n        this.rpcImpl = null;\r\n        this.emit(\"end\").off();\r\n    }\r\n    return this;\r\n};\r\n","\"use strict\";\r\nmodule.exports = BufferReader;\r\n\r\n// extends Reader\r\nvar Reader = require(\"./reader\");\r\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\r\n\r\nvar util = require(\"./util/minimal\");\r\n\r\n/**\r\n * Constructs a new buffer reader instance.\r\n * @classdesc Wire format reader using node buffers.\r\n * @extends Reader\r\n * @constructor\r\n * @param {Buffer} buffer Buffer to read from\r\n */\r\nfunction BufferReader(buffer) {\r\n    Reader.call(this, buffer);\r\n\r\n    /**\r\n     * Read buffer.\r\n     * @name BufferReader#buf\r\n     * @type {Buffer}\r\n     */\r\n}\r\n\r\n/* istanbul ignore else */\r\nif (util.Buffer)\r\n    BufferReader.prototype._slice = util.Buffer.prototype.slice;\r\n\r\n/**\r\n * @override\r\n */\r\nBufferReader.prototype.string = function read_string_buffer() {\r\n    var len = this.uint32(); // modifies pos\r\n    return this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len));\r\n};\r\n\r\n/**\r\n * Reads a sequence of bytes preceeded by its length as a varint.\r\n * @name BufferReader#bytes\r\n * @function\r\n * @returns {Buffer} Value read\r\n */\r\n","\"use strict\";\r\nmodule.exports = Reader;\r\n\r\nvar util      = require(\"./util/minimal\");\r\n\r\nvar BufferReader; // cyclic\r\n\r\nvar LongBits  = util.LongBits,\r\n    utf8      = util.utf8;\r\n\r\n/* istanbul ignore next */\r\nfunction indexOutOfRange(reader, writeLength) {\r\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\r\n}\r\n\r\n/**\r\n * Constructs a new reader instance using the specified buffer.\r\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\r\n * @constructor\r\n * @param {Uint8Array} buffer Buffer to read from\r\n */\r\nfunction Reader(buffer) {\r\n\r\n    /**\r\n     * Read buffer.\r\n     * @type {Uint8Array}\r\n     */\r\n    this.buf = buffer;\r\n\r\n    /**\r\n     * Read buffer position.\r\n     * @type {number}\r\n     */\r\n    this.pos = 0;\r\n\r\n    /**\r\n     * Read buffer length.\r\n     * @type {number}\r\n     */\r\n    this.len = buffer.length;\r\n}\r\n\r\nvar create_array = typeof Uint8Array !== \"undefined\"\r\n    ? function create_typed_array(buffer) {\r\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\r\n            return new Reader(buffer);\r\n        throw Error(\"illegal buffer\");\r\n    }\r\n    /* istanbul ignore next */\r\n    : function create_array(buffer) {\r\n        if (Array.isArray(buffer))\r\n            return new Reader(buffer);\r\n        throw Error(\"illegal buffer\");\r\n    };\r\n\r\n/**\r\n * Creates a new reader using the specified buffer.\r\n * @function\r\n * @param {Uint8Array|Buffer} buffer Buffer to read from\r\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\r\n * @throws {Error} If `buffer` is not a valid buffer\r\n */\r\nReader.create = util.Buffer\r\n    ? function create_buffer_setup(buffer) {\r\n        return (Reader.create = function create_buffer(buffer) {\r\n            return util.Buffer.isBuffer(buffer)\r\n                ? new BufferReader(buffer)\r\n                /* istanbul ignore next */\r\n                : create_array(buffer);\r\n        })(buffer);\r\n    }\r\n    /* istanbul ignore next */\r\n    : create_array;\r\n\r\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\r\n\r\n/**\r\n * Reads a varint as an unsigned 32 bit value.\r\n * @function\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.uint32 = (function read_uint32_setup() {\r\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\r\n    return function read_uint32() {\r\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\r\n\r\n        /* istanbul ignore if */\r\n        if ((this.pos += 5) > this.len) {\r\n            this.pos = this.len;\r\n            throw indexOutOfRange(this, 10);\r\n        }\r\n        return value;\r\n    };\r\n})();\r\n\r\n/**\r\n * Reads a varint as a signed 32 bit value.\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.int32 = function read_int32() {\r\n    return this.uint32() | 0;\r\n};\r\n\r\n/**\r\n * Reads a zig-zag encoded varint as a signed 32 bit value.\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.sint32 = function read_sint32() {\r\n    var value = this.uint32();\r\n    return value >>> 1 ^ -(value & 1) | 0;\r\n};\r\n\r\n/* eslint-disable no-invalid-this */\r\n\r\nfunction readLongVarint() {\r\n    // tends to deopt with local vars for octet etc.\r\n    var bits = new LongBits(0, 0);\r\n    var i = 0;\r\n    if (this.len - this.pos > 4) { // fast route (lo)\r\n        for (; i < 4; ++i) {\r\n            // 1st..4th\r\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\r\n            if (this.buf[this.pos++] < 128)\r\n                return bits;\r\n        }\r\n        // 5th\r\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\r\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\r\n        if (this.buf[this.pos++] < 128)\r\n            return bits;\r\n        i = 0;\r\n    } else {\r\n        for (; i < 3; ++i) {\r\n            /* istanbul ignore if */\r\n            if (this.pos >= this.len)\r\n                throw indexOutOfRange(this);\r\n            // 1st..3th\r\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\r\n            if (this.buf[this.pos++] < 128)\r\n                return bits;\r\n        }\r\n        // 4th\r\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\r\n        return bits;\r\n    }\r\n    if (this.len - this.pos > 4) { // fast route (hi)\r\n        for (; i < 5; ++i) {\r\n            // 6th..10th\r\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\r\n            if (this.buf[this.pos++] < 128)\r\n                return bits;\r\n        }\r\n    } else {\r\n        for (; i < 5; ++i) {\r\n            /* istanbul ignore if */\r\n            if (this.pos >= this.len)\r\n                throw indexOutOfRange(this);\r\n            // 6th..10th\r\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\r\n            if (this.buf[this.pos++] < 128)\r\n                return bits;\r\n        }\r\n    }\r\n    /* istanbul ignore next */\r\n    throw Error(\"invalid varint encoding\");\r\n}\r\n\r\n/* eslint-enable no-invalid-this */\r\n\r\n/**\r\n * Reads a varint as a signed 64 bit value.\r\n * @name Reader#int64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads a varint as an unsigned 64 bit value.\r\n * @name Reader#uint64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads a zig-zag encoded varint as a signed 64 bit value.\r\n * @name Reader#sint64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads a varint as a boolean.\r\n * @returns {boolean} Value read\r\n */\r\nReader.prototype.bool = function read_bool() {\r\n    return this.uint32() !== 0;\r\n};\r\n\r\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\r\n    return (buf[end - 4]\r\n          | buf[end - 3] << 8\r\n          | buf[end - 2] << 16\r\n          | buf[end - 1] << 24) >>> 0;\r\n}\r\n\r\n/**\r\n * Reads fixed 32 bits as an unsigned 32 bit integer.\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.fixed32 = function read_fixed32() {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 4 > this.len)\r\n        throw indexOutOfRange(this, 4);\r\n\r\n    return readFixed32_end(this.buf, this.pos += 4);\r\n};\r\n\r\n/**\r\n * Reads fixed 32 bits as a signed 32 bit integer.\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.sfixed32 = function read_sfixed32() {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 4 > this.len)\r\n        throw indexOutOfRange(this, 4);\r\n\r\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\r\n};\r\n\r\n/* eslint-disable no-invalid-this */\r\n\r\nfunction readFixed64(/* this: Reader */) {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 8 > this.len)\r\n        throw indexOutOfRange(this, 8);\r\n\r\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\r\n}\r\n\r\n/* eslint-enable no-invalid-this */\r\n\r\n/**\r\n * Reads fixed 64 bits.\r\n * @name Reader#fixed64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads zig-zag encoded fixed 64 bits.\r\n * @name Reader#sfixed64\r\n * @function\r\n * @returns {Long} Value read\r\n */\r\n\r\n/**\r\n * Reads a float (32 bit) as a number.\r\n * @function\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.float = function read_float() {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 4 > this.len)\r\n        throw indexOutOfRange(this, 4);\r\n\r\n    var value = util.float.readFloatLE(this.buf, this.pos);\r\n    this.pos += 4;\r\n    return value;\r\n};\r\n\r\n/**\r\n * Reads a double (64 bit float) as a number.\r\n * @function\r\n * @returns {number} Value read\r\n */\r\nReader.prototype.double = function read_double() {\r\n\r\n    /* istanbul ignore if */\r\n    if (this.pos + 8 > this.len)\r\n        throw indexOutOfRange(this, 4);\r\n\r\n    var value = util.float.readDoubleLE(this.buf, this.pos);\r\n    this.pos += 8;\r\n    return value;\r\n};\r\n\r\n/**\r\n * Reads a sequence of bytes preceeded by its length as a varint.\r\n * @returns {Uint8Array} Value read\r\n */\r\nReader.prototype.bytes = function read_bytes() {\r\n    var length = this.uint32(),\r\n        start  = this.pos,\r\n        end    = this.pos + length;\r\n\r\n    /* istanbul ignore if */\r\n    if (end > this.len)\r\n        throw indexOutOfRange(this, length);\r\n\r\n    this.pos += length;\r\n    if (Array.isArray(this.buf)) // plain array\r\n        return this.buf.slice(start, end);\r\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\r\n        ? new this.buf.constructor(0)\r\n        : this._slice.call(this.buf, start, end);\r\n};\r\n\r\n/**\r\n * Reads a string preceeded by its byte length as a varint.\r\n * @returns {string} Value read\r\n */\r\nReader.prototype.string = function read_string() {\r\n    var bytes = this.bytes();\r\n    return utf8.read(bytes, 0, bytes.length);\r\n};\r\n\r\n/**\r\n * Skips the specified number of bytes if specified, otherwise skips a varint.\r\n * @param {number} [length] Length if known, otherwise a varint is assumed\r\n * @returns {Reader} `this`\r\n */\r\nReader.prototype.skip = function skip(length) {\r\n    if (typeof length === \"number\") {\r\n        /* istanbul ignore if */\r\n        if (this.pos + length > this.len)\r\n            throw indexOutOfRange(this, length);\r\n        this.pos += length;\r\n    } else {\r\n        do {\r\n            /* istanbul ignore if */\r\n            if (this.pos >= this.len)\r\n                throw indexOutOfRange(this);\r\n        } while (this.buf[this.pos++] & 128);\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Skips the next element of the specified wire type.\r\n * @param {number} wireType Wire type received\r\n * @returns {Reader} `this`\r\n */\r\nReader.prototype.skipType = function(wireType) {\r\n    switch (wireType) {\r\n        case 0:\r\n            this.skip();\r\n            break;\r\n        case 1:\r\n            this.skip(8);\r\n            break;\r\n        case 2:\r\n            this.skip(this.uint32());\r\n            break;\r\n        case 3:\r\n            do { // eslint-disable-line no-constant-condition\r\n                if ((wireType = this.uint32() & 7) === 4)\r\n                    break;\r\n                this.skipType(wireType);\r\n            } while (true);\r\n            break;\r\n        case 5:\r\n            this.skip(4);\r\n            break;\r\n\r\n        /* istanbul ignore next */\r\n        default:\r\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\r\n    }\r\n    return this;\r\n};\r\n\r\nReader._configure = function(BufferReader_) {\r\n    BufferReader = BufferReader_;\r\n\r\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\r\n    util.merge(Reader.prototype, {\r\n\r\n        int64: function read_int64() {\r\n            return readLongVarint.call(this)[fn](false);\r\n        },\r\n\r\n        uint64: function read_uint64() {\r\n            return readLongVarint.call(this)[fn](true);\r\n        },\r\n\r\n        sint64: function read_sint64() {\r\n            return readLongVarint.call(this).zzDecode()[fn](false);\r\n        },\r\n\r\n        fixed64: function read_fixed64() {\r\n            return readFixed64.call(this)[fn](true);\r\n        },\r\n\r\n        sfixed64: function read_sfixed64() {\r\n            return readFixed64.call(this)[fn](false);\r\n        }\r\n\r\n    });\r\n};\r\n","\"use strict\";\r\nmodule.exports = BufferWriter;\r\n\r\n// extends Writer\r\nvar Writer = require(\"./writer\");\r\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\r\n\r\nvar util = require(\"./util/minimal\");\r\n\r\nvar Buffer = util.Buffer;\r\n\r\n/**\r\n * Constructs a new buffer writer instance.\r\n * @classdesc Wire format writer using node buffers.\r\n * @extends Writer\r\n * @constructor\r\n */\r\nfunction BufferWriter() {\r\n    Writer.call(this);\r\n}\r\n\r\n/**\r\n * Allocates a buffer of the specified size.\r\n * @param {number} size Buffer size\r\n * @returns {Buffer} Buffer\r\n */\r\nBufferWriter.alloc = function alloc_buffer(size) {\r\n    return (BufferWriter.alloc = util._Buffer_allocUnsafe)(size);\r\n};\r\n\r\nvar writeBytesBuffer = Buffer && Buffer.prototype instanceof Uint8Array && Buffer.prototype.set.name === \"set\"\r\n    ? function writeBytesBuffer_set(val, buf, pos) {\r\n        buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\r\n                           // also works for plain array values\r\n    }\r\n    /* istanbul ignore next */\r\n    : function writeBytesBuffer_copy(val, buf, pos) {\r\n        if (val.copy) // Buffer values\r\n            val.copy(buf, pos, 0, val.length);\r\n        else for (var i = 0; i < val.length;) // plain array values\r\n            buf[pos++] = val[i++];\r\n    };\r\n\r\n/**\r\n * @override\r\n */\r\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\r\n    if (util.isString(value))\r\n        value = util._Buffer_from(value, \"base64\");\r\n    var len = value.length >>> 0;\r\n    this.uint32(len);\r\n    if (len)\r\n        this._push(writeBytesBuffer, len, value);\r\n    return this;\r\n};\r\n\r\nfunction writeStringBuffer(val, buf, pos) {\r\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\r\n        util.utf8.write(val, buf, pos);\r\n    else\r\n        buf.utf8Write(val, pos);\r\n}\r\n\r\n/**\r\n * @override\r\n */\r\nBufferWriter.prototype.string = function write_string_buffer(value) {\r\n    var len = Buffer.byteLength(value);\r\n    this.uint32(len);\r\n    if (len)\r\n        this._push(writeStringBuffer, len, value);\r\n    return this;\r\n};\r\n\r\n\r\n/**\r\n * Finishes the write operation.\r\n * @name BufferWriter#finish\r\n * @function\r\n * @returns {Buffer} Finished buffer\r\n */\r\n","\"use strict\";\r\nmodule.exports = Writer;\r\n\r\nvar util      = require(\"./util/minimal\");\r\n\r\nvar BufferWriter; // cyclic\r\n\r\nvar LongBits  = util.LongBits,\r\n    base64    = util.base64,\r\n    utf8      = util.utf8;\r\n\r\n/**\r\n * Constructs a new writer operation instance.\r\n * @classdesc Scheduled writer operation.\r\n * @constructor\r\n * @param {function(*, Uint8Array, number)} fn Function to call\r\n * @param {number} len Value byte length\r\n * @param {*} val Value to write\r\n * @ignore\r\n */\r\nfunction Op(fn, len, val) {\r\n\r\n    /**\r\n     * Function to call.\r\n     * @type {function(Uint8Array, number, *)}\r\n     */\r\n    this.fn = fn;\r\n\r\n    /**\r\n     * Value byte length.\r\n     * @type {number}\r\n     */\r\n    this.len = len;\r\n\r\n    /**\r\n     * Next operation.\r\n     * @type {Writer.Op|undefined}\r\n     */\r\n    this.next = undefined;\r\n\r\n    /**\r\n     * Value to write.\r\n     * @type {*}\r\n     */\r\n    this.val = val; // type varies\r\n}\r\n\r\n/* istanbul ignore next */\r\nfunction noop() {} // eslint-disable-line no-empty-function\r\n\r\n/**\r\n * Constructs a new writer state instance.\r\n * @classdesc Copied writer state.\r\n * @memberof Writer\r\n * @constructor\r\n * @param {Writer} writer Writer to copy state from\r\n * @ignore\r\n */\r\nfunction State(writer) {\r\n\r\n    /**\r\n     * Current head.\r\n     * @type {Writer.Op}\r\n     */\r\n    this.head = writer.head;\r\n\r\n    /**\r\n     * Current tail.\r\n     * @type {Writer.Op}\r\n     */\r\n    this.tail = writer.tail;\r\n\r\n    /**\r\n     * Current buffer length.\r\n     * @type {number}\r\n     */\r\n    this.len = writer.len;\r\n\r\n    /**\r\n     * Next state.\r\n     * @type {State|null}\r\n     */\r\n    this.next = writer.states;\r\n}\r\n\r\n/**\r\n * Constructs a new writer instance.\r\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\r\n * @constructor\r\n */\r\nfunction Writer() {\r\n\r\n    /**\r\n     * Current length.\r\n     * @type {number}\r\n     */\r\n    this.len = 0;\r\n\r\n    /**\r\n     * Operations head.\r\n     * @type {Object}\r\n     */\r\n    this.head = new Op(noop, 0, 0);\r\n\r\n    /**\r\n     * Operations tail\r\n     * @type {Object}\r\n     */\r\n    this.tail = this.head;\r\n\r\n    /**\r\n     * Linked forked states.\r\n     * @type {Object|null}\r\n     */\r\n    this.states = null;\r\n\r\n    // When a value is written, the writer calculates its byte length and puts it into a linked\r\n    // list of operations to perform when finish() is called. This both allows us to allocate\r\n    // buffers of the exact required size and reduces the amount of work we have to do compared\r\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\r\n    // part is just a linked list walk calling operations with already prepared values.\r\n}\r\n\r\n/**\r\n * Creates a new writer.\r\n * @function\r\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\r\n */\r\nWriter.create = util.Buffer\r\n    ? function create_buffer_setup() {\r\n        return (Writer.create = function create_buffer() {\r\n            return new BufferWriter();\r\n        })();\r\n    }\r\n    /* istanbul ignore next */\r\n    : function create_array() {\r\n        return new Writer();\r\n    };\r\n\r\n/**\r\n * Allocates a buffer of the specified size.\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\nWriter.alloc = function alloc(size) {\r\n    return new util.Array(size);\r\n};\r\n\r\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\r\n/* istanbul ignore else */\r\nif (util.Array !== Array)\r\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\r\n\r\n/**\r\n * Pushes a new operation to the queue.\r\n * @param {function(Uint8Array, number, *)} fn Function to call\r\n * @param {number} len Value byte length\r\n * @param {number} val Value to write\r\n * @returns {Writer} `this`\r\n * @private\r\n */\r\nWriter.prototype._push = function push(fn, len, val) {\r\n    this.tail = this.tail.next = new Op(fn, len, val);\r\n    this.len += len;\r\n    return this;\r\n};\r\n\r\nfunction writeByte(val, buf, pos) {\r\n    buf[pos] = val & 255;\r\n}\r\n\r\nfunction writeVarint32(val, buf, pos) {\r\n    while (val > 127) {\r\n        buf[pos++] = val & 127 | 128;\r\n        val >>>= 7;\r\n    }\r\n    buf[pos] = val;\r\n}\r\n\r\n/**\r\n * Constructs a new varint writer operation instance.\r\n * @classdesc Scheduled varint writer operation.\r\n * @extends Op\r\n * @constructor\r\n * @param {number} len Value byte length\r\n * @param {number} val Value to write\r\n * @ignore\r\n */\r\nfunction VarintOp(len, val) {\r\n    this.len = len;\r\n    this.next = undefined;\r\n    this.val = val;\r\n}\r\n\r\nVarintOp.prototype = Object.create(Op.prototype);\r\nVarintOp.prototype.fn = writeVarint32;\r\n\r\n/**\r\n * Writes an unsigned 32 bit value as a varint.\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.uint32 = function write_uint32(value) {\r\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\r\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\r\n    this.len += (this.tail = this.tail.next = new VarintOp(\r\n        (value = value >>> 0)\r\n                < 128       ? 1\r\n        : value < 16384     ? 2\r\n        : value < 2097152   ? 3\r\n        : value < 268435456 ? 4\r\n        :                     5,\r\n    value)).len;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Writes a signed 32 bit value as a varint.\r\n * @function\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.int32 = function write_int32(value) {\r\n    return value < 0\r\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\r\n        : this.uint32(value);\r\n};\r\n\r\n/**\r\n * Writes a 32 bit value as a varint, zig-zag encoded.\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.sint32 = function write_sint32(value) {\r\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\r\n};\r\n\r\nfunction writeVarint64(val, buf, pos) {\r\n    while (val.hi) {\r\n        buf[pos++] = val.lo & 127 | 128;\r\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\r\n        val.hi >>>= 7;\r\n    }\r\n    while (val.lo > 127) {\r\n        buf[pos++] = val.lo & 127 | 128;\r\n        val.lo = val.lo >>> 7;\r\n    }\r\n    buf[pos++] = val.lo;\r\n}\r\n\r\n/**\r\n * Writes an unsigned 64 bit value as a varint.\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.uint64 = function write_uint64(value) {\r\n    var bits = LongBits.from(value);\r\n    return this._push(writeVarint64, bits.length(), bits);\r\n};\r\n\r\n/**\r\n * Writes a signed 64 bit value as a varint.\r\n * @function\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.int64 = Writer.prototype.uint64;\r\n\r\n/**\r\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.sint64 = function write_sint64(value) {\r\n    var bits = LongBits.from(value).zzEncode();\r\n    return this._push(writeVarint64, bits.length(), bits);\r\n};\r\n\r\n/**\r\n * Writes a boolish value as a varint.\r\n * @param {boolean} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.bool = function write_bool(value) {\r\n    return this._push(writeByte, 1, value ? 1 : 0);\r\n};\r\n\r\nfunction writeFixed32(val, buf, pos) {\r\n    buf[pos    ] =  val         & 255;\r\n    buf[pos + 1] =  val >>> 8   & 255;\r\n    buf[pos + 2] =  val >>> 16  & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\n/**\r\n * Writes an unsigned 32 bit value as fixed 32 bits.\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.fixed32 = function write_fixed32(value) {\r\n    return this._push(writeFixed32, 4, value >>> 0);\r\n};\r\n\r\n/**\r\n * Writes a signed 32 bit value as fixed 32 bits.\r\n * @function\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\r\n\r\n/**\r\n * Writes an unsigned 64 bit value as fixed 64 bits.\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.fixed64 = function write_fixed64(value) {\r\n    var bits = LongBits.from(value);\r\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\r\n};\r\n\r\n/**\r\n * Writes a signed 64 bit value as fixed 64 bits.\r\n * @function\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\r\n\r\n/**\r\n * Writes a float (32 bit).\r\n * @function\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.float = function write_float(value) {\r\n    return this._push(util.float.writeFloatLE, 4, value);\r\n};\r\n\r\n/**\r\n * Writes a double (64 bit float).\r\n * @function\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.double = function write_double(value) {\r\n    return this._push(util.float.writeDoubleLE, 8, value);\r\n};\r\n\r\nvar writeBytes = util.Array.prototype.set\r\n    ? function writeBytes_set(val, buf, pos) {\r\n        buf.set(val, pos); // also works for plain array values\r\n    }\r\n    /* istanbul ignore next */\r\n    : function writeBytes_for(val, buf, pos) {\r\n        for (var i = 0; i < val.length; ++i)\r\n            buf[pos + i] = val[i];\r\n    };\r\n\r\n/**\r\n * Writes a sequence of bytes.\r\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.bytes = function write_bytes(value) {\r\n    var len = value.length >>> 0;\r\n    if (!len)\r\n        return this._push(writeByte, 1, 0);\r\n    if (util.isString(value)) {\r\n        var buf = Writer.alloc(len = base64.length(value));\r\n        base64.decode(value, buf, 0);\r\n        value = buf;\r\n    }\r\n    return this.uint32(len)._push(writeBytes, len, value);\r\n};\r\n\r\n/**\r\n * Writes a string.\r\n * @param {string} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.string = function write_string(value) {\r\n    var len = utf8.length(value);\r\n    return len\r\n        ? this.uint32(len)._push(utf8.write, len, value)\r\n        : this._push(writeByte, 1, 0);\r\n};\r\n\r\n/**\r\n * Forks this writer's state by pushing it to a stack.\r\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.fork = function fork() {\r\n    this.states = new State(this);\r\n    this.head = this.tail = new Op(noop, 0, 0);\r\n    this.len = 0;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Resets this instance to the last state.\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.reset = function reset() {\r\n    if (this.states) {\r\n        this.head   = this.states.head;\r\n        this.tail   = this.states.tail;\r\n        this.len    = this.states.len;\r\n        this.states = this.states.next;\r\n    } else {\r\n        this.head = this.tail = new Op(noop, 0, 0);\r\n        this.len  = 0;\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.ldelim = function ldelim() {\r\n    var head = this.head,\r\n        tail = this.tail,\r\n        len  = this.len;\r\n    this.reset().uint32(len);\r\n    if (len) {\r\n        this.tail.next = head.next; // skip noop\r\n        this.tail = tail;\r\n        this.len += len;\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Finishes the write operation.\r\n * @returns {Uint8Array} Finished buffer\r\n */\r\nWriter.prototype.finish = function finish() {\r\n    var head = this.head.next, // skip noop\r\n        buf  = this.constructor.alloc(this.len),\r\n        pos  = 0;\r\n    while (head) {\r\n        head.fn(head.val, buf, pos);\r\n        pos += head.len;\r\n        head = head.next;\r\n    }\r\n    // this.head = this.tail = null;\r\n    return buf;\r\n};\r\n\r\nWriter._configure = function(BufferWriter_) {\r\n    BufferWriter = BufferWriter_;\r\n};\r\n","\"use strict\";\r\nvar util = exports;\r\n\r\n// used to return a Promise where callback is omitted\r\nutil.asPromise = require(\"@protobufjs/aspromise\");\r\n\r\n// converts to / from base64 encoded strings\r\nutil.base64 = require(\"@protobufjs/base64\");\r\n\r\n// base class of rpc.Service\r\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\r\n\r\n// float handling accross browsers\r\nutil.float = require(\"@protobufjs/float\");\r\n\r\n// requires modules optionally and hides the call from bundlers\r\nutil.inquire = require(\"@protobufjs/inquire\");\r\n\r\n// converts to / from utf8 encoded strings\r\nutil.utf8 = require(\"@protobufjs/utf8\");\r\n\r\n// provides a node-like buffer pool in the browser\r\nutil.pool = require(\"@protobufjs/pool\");\r\n\r\n// utility to work with the low and high bits of a 64 bit value\r\nutil.LongBits = require(\"./longbits\");\r\n\r\n/**\r\n * An immuable empty array.\r\n * @memberof util\r\n * @type {Array.<*>}\r\n * @const\r\n */\r\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\r\n\r\n/**\r\n * An immutable empty object.\r\n * @type {Object}\r\n * @const\r\n */\r\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\r\n\r\n/**\r\n * Whether running within node or not.\r\n * @memberof util\r\n * @type {boolean}\r\n * @const\r\n */\r\nutil.isNode = Boolean(global.process && global.process.versions && global.process.versions.node);\r\n\r\n/**\r\n * Tests if the specified value is an integer.\r\n * @function\r\n * @param {*} value Value to test\r\n * @returns {boolean} `true` if the value is an integer\r\n */\r\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\r\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\r\n};\r\n\r\n/**\r\n * Tests if the specified value is a string.\r\n * @param {*} value Value to test\r\n * @returns {boolean} `true` if the value is a string\r\n */\r\nutil.isString = function isString(value) {\r\n    return typeof value === \"string\" || value instanceof String;\r\n};\r\n\r\n/**\r\n * Tests if the specified value is a non-null object.\r\n * @param {*} value Value to test\r\n * @returns {boolean} `true` if the value is a non-null object\r\n */\r\nutil.isObject = function isObject(value) {\r\n    return value && typeof value === \"object\";\r\n};\r\n\r\n/**\r\n * Checks if a property on a message is considered to be present.\r\n * This is an alias of {@link util.isSet}.\r\n * @function\r\n * @param {Object} obj Plain object or message instance\r\n * @param {string} prop Property name\r\n * @returns {boolean} `true` if considered to be present, otherwise `false`\r\n */\r\nutil.isset =\r\n\r\n/**\r\n * Checks if a property on a message is considered to be present.\r\n * @param {Object} obj Plain object or message instance\r\n * @param {string} prop Property name\r\n * @returns {boolean} `true` if considered to be present, otherwise `false`\r\n */\r\nutil.isSet = function isSet(obj, prop) {\r\n    var value = obj[prop];\r\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\r\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\r\n    return false;\r\n};\r\n\r\n/**\r\n * Any compatible Buffer instance.\r\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\r\n * @interface Buffer\r\n * @extends Uint8Array\r\n */\r\n\r\n/**\r\n * Node's Buffer class if available.\r\n * @type {Constructor<Buffer>}\r\n */\r\nutil.Buffer = (function() {\r\n    try {\r\n        var Buffer = util.inquire(\"buffer\").Buffer;\r\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\r\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\r\n    } catch (e) {\r\n        /* istanbul ignore next */\r\n        return null;\r\n    }\r\n})();\r\n\r\n// Internal alias of or polyfull for Buffer.from.\r\nutil._Buffer_from = null;\r\n\r\n// Internal alias of or polyfill for Buffer.allocUnsafe.\r\nutil._Buffer_allocUnsafe = null;\r\n\r\n/**\r\n * Creates a new buffer of whatever type supported by the environment.\r\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\r\n * @returns {Uint8Array|Buffer} Buffer\r\n */\r\nutil.newBuffer = function newBuffer(sizeOrArray) {\r\n    /* istanbul ignore next */\r\n    return typeof sizeOrArray === \"number\"\r\n        ? util.Buffer\r\n            ? util._Buffer_allocUnsafe(sizeOrArray)\r\n            : new util.Array(sizeOrArray)\r\n        : util.Buffer\r\n            ? util._Buffer_from(sizeOrArray)\r\n            : typeof Uint8Array === \"undefined\"\r\n                ? sizeOrArray\r\n                : new Uint8Array(sizeOrArray);\r\n};\r\n\r\n/**\r\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\r\n * @type {Constructor<Uint8Array>}\r\n */\r\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\r\n\r\n/**\r\n * Any compatible Long instance.\r\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\r\n * @interface Long\r\n * @property {number} low Low bits\r\n * @property {number} high High bits\r\n * @property {boolean} unsigned Whether unsigned or not\r\n */\r\n\r\n/**\r\n * Long.js's Long class if available.\r\n * @type {Constructor<Long>}\r\n */\r\nutil.Long = /* istanbul ignore next */ global.dcodeIO && /* istanbul ignore next */ global.dcodeIO.Long || util.inquire(\"long\");\r\n\r\n/**\r\n * Regular expression used to verify 2 bit (`bool`) map keys.\r\n * @type {RegExp}\r\n * @const\r\n */\r\nutil.key2Re = /^true|false|0|1$/;\r\n\r\n/**\r\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\r\n * @type {RegExp}\r\n * @const\r\n */\r\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\r\n\r\n/**\r\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\r\n * @type {RegExp}\r\n * @const\r\n */\r\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\r\n\r\n/**\r\n * Converts a number or long to an 8 characters long hash string.\r\n * @param {Long|number} value Value to convert\r\n * @returns {string} Hash\r\n */\r\nutil.longToHash = function longToHash(value) {\r\n    return value\r\n        ? util.LongBits.from(value).toHash()\r\n        : util.LongBits.zeroHash;\r\n};\r\n\r\n/**\r\n * Converts an 8 characters long hash string to a long or number.\r\n * @param {string} hash Hash\r\n * @param {boolean} [unsigned=false] Whether unsigned or not\r\n * @returns {Long|number} Original value\r\n */\r\nutil.longFromHash = function longFromHash(hash, unsigned) {\r\n    var bits = util.LongBits.fromHash(hash);\r\n    if (util.Long)\r\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\r\n    return bits.toNumber(Boolean(unsigned));\r\n};\r\n\r\n/**\r\n * Merges the properties of the source object into the destination object.\r\n * @memberof util\r\n * @param {Object.<string,*>} dst Destination object\r\n * @param {Object.<string,*>} src Source object\r\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\r\n * @returns {Object.<string,*>} Destination object\r\n */\r\nfunction merge(dst, src, ifNotSet) { // used by converters\r\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\r\n        if (dst[keys[i]] === undefined || !ifNotSet)\r\n            dst[keys[i]] = src[keys[i]];\r\n    return dst;\r\n}\r\n\r\nutil.merge = merge;\r\n\r\n/**\r\n * Converts the first character of a string to lower case.\r\n * @param {string} str String to convert\r\n * @returns {string} Converted string\r\n */\r\nutil.lcFirst = function lcFirst(str) {\r\n    return str.charAt(0).toLowerCase() + str.substring(1);\r\n};\r\n\r\n/**\r\n * Creates a custom error constructor.\r\n * @memberof util\r\n * @param {string} name Error name\r\n * @returns {Constructor<Error>} Custom error constructor\r\n */\r\nfunction newError(name) {\r\n\r\n    function CustomError(message, properties) {\r\n\r\n        if (!(this instanceof CustomError))\r\n            return new CustomError(message, properties);\r\n\r\n        // Error.call(this, message);\r\n        // ^ just returns a new error instance because the ctor can be called as a function\r\n\r\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\r\n\r\n        /* istanbul ignore next */\r\n        if (Error.captureStackTrace) // node\r\n            Error.captureStackTrace(this, CustomError);\r\n        else\r\n            Object.defineProperty(this, \"stack\", { value: (new Error()).stack || \"\" });\r\n\r\n        if (properties)\r\n            merge(this, properties);\r\n    }\r\n\r\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\r\n\r\n    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });\r\n\r\n    CustomError.prototype.toString = function toString() {\r\n        return this.name + \": \" + this.message;\r\n    };\r\n\r\n    return CustomError;\r\n}\r\n\r\nutil.newError = newError;\r\n\r\n/**\r\n * Constructs a new protocol error.\r\n * @classdesc Error subclass indicating a protocol specifc error.\r\n * @memberof util\r\n * @extends Error\r\n * @template T extends Message<T>\r\n * @constructor\r\n * @param {string} message Error message\r\n * @param {Object.<string,*>} [properties] Additional properties\r\n * @example\r\n * try {\r\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\r\n * } catch (e) {\r\n *     if (e instanceof ProtocolError && e.instance)\r\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\r\n * }\r\n */\r\nutil.ProtocolError = newError(\"ProtocolError\");\r\n\r\n/**\r\n * So far decoded message instance.\r\n * @name util.ProtocolError#instance\r\n * @type {Message<T>}\r\n */\r\n\r\n/**\r\n * A OneOf getter as returned by {@link util.oneOfGetter}.\r\n * @typedef OneOfGetter\r\n * @type {function}\r\n * @returns {string|undefined} Set field name, if any\r\n */\r\n\r\n/**\r\n * Builds a getter for a oneof's present field name.\r\n * @param {string[]} fieldNames Field names\r\n * @returns {OneOfGetter} Unbound getter\r\n */\r\nutil.oneOfGetter = function getOneOf(fieldNames) {\r\n    var fieldMap = {};\r\n    for (var i = 0; i < fieldNames.length; ++i)\r\n        fieldMap[fieldNames[i]] = 1;\r\n\r\n    /**\r\n     * @returns {string|undefined} Set field name, if any\r\n     * @this Object\r\n     * @ignore\r\n     */\r\n    return function() { // eslint-disable-line consistent-return\r\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\r\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\r\n                return keys[i];\r\n    };\r\n};\r\n\r\n/**\r\n * A OneOf setter as returned by {@link util.oneOfSetter}.\r\n * @typedef OneOfSetter\r\n * @type {function}\r\n * @param {string|undefined} value Field name\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Builds a setter for a oneof's present field name.\r\n * @param {string[]} fieldNames Field names\r\n * @returns {OneOfSetter} Unbound setter\r\n */\r\nutil.oneOfSetter = function setOneOf(fieldNames) {\r\n\r\n    /**\r\n     * @param {string} name Field name\r\n     * @returns {undefined}\r\n     * @this Object\r\n     * @ignore\r\n     */\r\n    return function(name) {\r\n        for (var i = 0; i < fieldNames.length; ++i)\r\n            if (fieldNames[i] !== name)\r\n                delete this[fieldNames[i]];\r\n    };\r\n};\r\n\r\n/**\r\n * Default conversion options used for {@link Message#toJSON} implementations.\r\n *\r\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\r\n *\r\n * - Longs become strings\r\n * - Enums become string keys\r\n * - Bytes become base64 encoded strings\r\n * - (Sub-)Messages become plain objects\r\n * - Maps become plain objects with all string keys\r\n * - Repeated fields become arrays\r\n * - NaN and Infinity for float and double fields become strings\r\n *\r\n * @type {IConversionOptions}\r\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\r\n */\r\nutil.toJSONOptions = {\r\n    longs: String,\r\n    enums: String,\r\n    bytes: String,\r\n    json: true\r\n};\r\n\r\nutil._configure = function() {\r\n    var Buffer = util.Buffer;\r\n    /* istanbul ignore if */\r\n    if (!Buffer) {\r\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\r\n        return;\r\n    }\r\n    // because node 4.x buffers are incompatible & immutable\r\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\r\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\r\n        /* istanbul ignore next */\r\n        function Buffer_from(value, encoding) {\r\n            return new Buffer(value, encoding);\r\n        };\r\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\r\n        /* istanbul ignore next */\r\n        function Buffer_allocUnsafe(size) {\r\n            return new Buffer(size);\r\n        };\r\n};\r\n","\"use strict\";\r\nmodule.exports = LongBits;\r\n\r\nvar util = require(\"../util/minimal\");\r\n\r\n/**\r\n * Constructs new long bits.\r\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\r\n * @memberof util\r\n * @constructor\r\n * @param {number} lo Low 32 bits, unsigned\r\n * @param {number} hi High 32 bits, unsigned\r\n */\r\nfunction LongBits(lo, hi) {\r\n\r\n    // note that the casts below are theoretically unnecessary as of today, but older statically\r\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\r\n\r\n    /**\r\n     * Low bits.\r\n     * @type {number}\r\n     */\r\n    this.lo = lo >>> 0;\r\n\r\n    /**\r\n     * High bits.\r\n     * @type {number}\r\n     */\r\n    this.hi = hi >>> 0;\r\n}\r\n\r\n/**\r\n * Zero bits.\r\n * @memberof util.LongBits\r\n * @type {util.LongBits}\r\n */\r\nvar zero = LongBits.zero = new LongBits(0, 0);\r\n\r\nzero.toNumber = function() { return 0; };\r\nzero.zzEncode = zero.zzDecode = function() { return this; };\r\nzero.length = function() { return 1; };\r\n\r\n/**\r\n * Zero hash.\r\n * @memberof util.LongBits\r\n * @type {string}\r\n */\r\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\r\n\r\n/**\r\n * Constructs new long bits from the specified number.\r\n * @param {number} value Value\r\n * @returns {util.LongBits} Instance\r\n */\r\nLongBits.fromNumber = function fromNumber(value) {\r\n    if (value === 0)\r\n        return zero;\r\n    var sign = value < 0;\r\n    if (sign)\r\n        value = -value;\r\n    var lo = value >>> 0,\r\n        hi = (value - lo) / 4294967296 >>> 0;\r\n    if (sign) {\r\n        hi = ~hi >>> 0;\r\n        lo = ~lo >>> 0;\r\n        if (++lo > 4294967295) {\r\n            lo = 0;\r\n            if (++hi > 4294967295)\r\n                hi = 0;\r\n        }\r\n    }\r\n    return new LongBits(lo, hi);\r\n};\r\n\r\n/**\r\n * Constructs new long bits from a number, long or string.\r\n * @param {Long|number|string} value Value\r\n * @returns {util.LongBits} Instance\r\n */\r\nLongBits.from = function from(value) {\r\n    if (typeof value === \"number\")\r\n        return LongBits.fromNumber(value);\r\n    if (util.isString(value)) {\r\n        /* istanbul ignore else */\r\n        if (util.Long)\r\n            value = util.Long.fromString(value);\r\n        else\r\n            return LongBits.fromNumber(parseInt(value, 10));\r\n    }\r\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\r\n};\r\n\r\n/**\r\n * Converts this long bits to a possibly unsafe JavaScript number.\r\n * @param {boolean} [unsigned=false] Whether unsigned or not\r\n * @returns {number} Possibly unsafe number\r\n */\r\nLongBits.prototype.toNumber = function toNumber(unsigned) {\r\n    if (!unsigned && this.hi >>> 31) {\r\n        var lo = ~this.lo + 1 >>> 0,\r\n            hi = ~this.hi     >>> 0;\r\n        if (!lo)\r\n            hi = hi + 1 >>> 0;\r\n        return -(lo + hi * 4294967296);\r\n    }\r\n    return this.lo + this.hi * 4294967296;\r\n};\r\n\r\n/**\r\n * Converts this long bits to a long.\r\n * @param {boolean} [unsigned=false] Whether unsigned or not\r\n * @returns {Long} Long\r\n */\r\nLongBits.prototype.toLong = function toLong(unsigned) {\r\n    return util.Long\r\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\r\n        /* istanbul ignore next */\r\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\r\n};\r\n\r\nvar charCodeAt = String.prototype.charCodeAt;\r\n\r\n/**\r\n * Constructs new long bits from the specified 8 characters long hash.\r\n * @param {string} hash Hash\r\n * @returns {util.LongBits} Bits\r\n */\r\nLongBits.fromHash = function fromHash(hash) {\r\n    if (hash === zeroHash)\r\n        return zero;\r\n    return new LongBits(\r\n        ( charCodeAt.call(hash, 0)\r\n        | charCodeAt.call(hash, 1) << 8\r\n        | charCodeAt.call(hash, 2) << 16\r\n        | charCodeAt.call(hash, 3) << 24) >>> 0\r\n    ,\r\n        ( charCodeAt.call(hash, 4)\r\n        | charCodeAt.call(hash, 5) << 8\r\n        | charCodeAt.call(hash, 6) << 16\r\n        | charCodeAt.call(hash, 7) << 24) >>> 0\r\n    );\r\n};\r\n\r\n/**\r\n * Converts this long bits to a 8 characters long hash.\r\n * @returns {string} Hash\r\n */\r\nLongBits.prototype.toHash = function toHash() {\r\n    return String.fromCharCode(\r\n        this.lo        & 255,\r\n        this.lo >>> 8  & 255,\r\n        this.lo >>> 16 & 255,\r\n        this.lo >>> 24      ,\r\n        this.hi        & 255,\r\n        this.hi >>> 8  & 255,\r\n        this.hi >>> 16 & 255,\r\n        this.hi >>> 24\r\n    );\r\n};\r\n\r\n/**\r\n * Zig-zag encodes this long bits.\r\n * @returns {util.LongBits} `this`\r\n */\r\nLongBits.prototype.zzEncode = function zzEncode() {\r\n    var mask =   this.hi >> 31;\r\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\r\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Zig-zag decodes this long bits.\r\n * @returns {util.LongBits} `this`\r\n */\r\nLongBits.prototype.zzDecode = function zzDecode() {\r\n    var mask = -(this.lo & 1);\r\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\r\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Calculates the length of this longbits when encoded as a varint.\r\n * @returns {number} Length\r\n */\r\nLongBits.prototype.length = function length() {\r\n    var part0 =  this.lo,\r\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\r\n        part2 =  this.hi >>> 24;\r\n    return part2 === 0\r\n         ? part1 === 0\r\n           ? part0 < 16384\r\n             ? part0 < 128 ? 1 : 2\r\n             : part0 < 2097152 ? 3 : 4\r\n           : part1 < 16384\r\n             ? part1 < 128 ? 5 : 6\r\n             : part1 < 2097152 ? 7 : 8\r\n         : part2 < 128 ? 9 : 10;\r\n};\r\n","\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n","\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n","\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n","\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n","\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n","/*\n * Copyright (C) 2018 The Android Open Source Project\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nclass Receiver<T extends object> {\n  client: T;\n  port: MessagePort;\n\n  constructor(port: MessagePort, client: T) {\n    this.port = port;\n    this.client = client;\n    this.port.onmessage = this.recv.bind(this);\n  }\n\n  recv(msg: any) {\n    const name: string = msg.data.name;\n    const args: any[] = msg.data.args;\n    const requestId: number = msg.data.requestId;\n    const pending: Promise<any> = (this.client as any)[name].apply(this.client, args);\n    pending.then(result => this.send(requestId, result));\n  }\n\n  send(requestId: number, result: any) {\n    this.port.postMessage({\n      requestId,\n      result,\n    });\n  }\n\n};\n\nclass SenderTarget {\n  port: MessagePort;\n  requestId: number;\n  pendingRequests: {[id: number]: (result: any) => void};\n\n  constructor(port: MessagePort) {\n    this.port = port;\n    this.requestId = 0;\n    this.pendingRequests = {};\n    this.port.onmessage = this.recv.bind(this);\n  }\n\n  recv(msg: any) {\n    const requestId = msg.data.requestId;\n    const result = msg.data.result;\n    console.assert(this.pendingRequests[requestId]);\n    this.pendingRequests[requestId](result);\n    delete this.pendingRequests[requestId];\n  }\n\n  send(name: PropertyKey, args: any[]): Promise<any> {\n    const requestId = this.requestId++;\n    const pending = new Promise(resolve => {\n      this.pendingRequests[requestId] = resolve;\n    });\n    this.port.postMessage({\n      requestId,\n      name,\n      args, \n    });\n    return pending;\n  } \n}\n\nclass SenderHandler<T extends object> implements ProxyHandler<T> {\n  constructor() {\n  }\n\n  get(rawTarget: T, p: PropertyKey, _receiver: any) {\n    const target = (rawTarget as SenderTarget);\n    return function(...args: any[]) {\n      return target.send(p, args);\n    };\n  }\n};\n\nfunction createReceiver<T extends object>(port: MessagePort, client: T): Receiver<T> {\n  return new Receiver<T>(port, client);\n}\n\nfunction createSender<T extends object>(port: MessagePort): T {\n  const target = new SenderTarget(port);\n  return new Proxy<T>((target as any), new SenderHandler<T>());\n}\n\nexport {\n  createSender,\n  createReceiver,\n};\n\n"],"names":["trace_processor_1","ipc_1","protos_1","x","$protobuf","require$$0","require$$6","require$$5","require$$4","require$$3","require$$2","require$$1","util","BufferReader","Reader","utf8","LongBits","BufferWriter","Writer","global","require$$7"],"mappings":"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"}